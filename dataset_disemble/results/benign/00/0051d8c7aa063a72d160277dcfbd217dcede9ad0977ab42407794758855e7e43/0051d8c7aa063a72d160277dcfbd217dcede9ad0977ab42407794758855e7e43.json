{
    "entry0": {
        "function_address": "0x00003690",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x000036f4]",
            "ldr r3, [0x000036f8]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x000036fc]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x36c8",
            "ldr r3, [0x00003700]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.__cxa_finalize",
            "ldr r3, [0x00003704]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x36e4",
            "ldr r0, [0x00003708]",
            "add r0, r4, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x000036f8]",
            "mov r2, 1",
            "strb r2, [r4, r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x0000312c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x68]!"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00003288",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf80]!"
        ]
    },
    "sym.gdImageFill": {
        "function_address": "0x00007974",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "movw r0, 0x1c38",
            "sub sp, sp, 0x24",
            "mov r7, r1",
            "mov r6, r2",
            "ldr r0, [r4, r0]",
            "mov r5, r3",
            "cmp r0, 0",
            "bne 0x79a8",
            "ldr r3, [r4, 0xc]",
            "cmp r3, r5",
            "ble 0x7aa4",
            "cmn r5, 5",
            "mov r8, 0x1c40",
            "mov r3, 0",
            "ldr sb, [r4, r8]",
            "str r3, [r4, r8]",
            "beq 0x7aac",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "ldmib r4, {r8, fp}",
            "bl rsym.gdImageGetPixel",
            "cmp r0, r5",
            "movne r3, 0",
            "moveq r3, 1",
            "mov sl, r0",
            "orrs r3, r3, r7, lsr 31",
            "bne 0x7a9c",
            "cmp r7, r8",
            "movle r3, 0",
            "movgt r3, 1",
            "orrs r3, r3, r6, lsr 31",
            "bne 0x7a9c",
            "cmp r6, fp",
            "bgt 0x7a9c",
            "ldr r1, [r4, 4]",
            "cmp r1, 3",
            "bgt 0x7ac8",
            "mov r8, r7",
            "mov r1, r8",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, sl",
            "mov r1, r8",
            "mov r2, r6",
            "mov r3, r5",
            "mov r0, r4",
            "bne 0x7a9c",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "cmp r8, r3",
            "add r8, r8, 1",
            "blt 0x7a18",
            "add r6, r6, 1",
            "mov r1, r7",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, sl",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "mov r0, r4",
            "bne 0x7a9c",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "cmp r7, r3",
            "add r7, r7, 1",
            "blt 0x7a5c",
            "mov r3, 0x1c40",
            "str sb, [r4, r3]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "bl rsym._gdImageFillTiled",
            "str sb, [r4, r8]",
            "b 0x7aa4",
            "ldr r0, [r4, 8]",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x7aa4",
            "ldr r2, [r4, 8]",
            "mov r0, 0x10",
            "ldr r3, [r4, 4]",
            "mul r3, r2, r3",
            "cmp r3, 0",
            "add r2, r3, 3",
            "movlt r3, r2",
            "asr r1, r3, 2",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x7aa4",
            "ldr r2, [r4, 8]",
            "ldr r3, [r4, 4]",
            "mul r3, r2, r3",
            "cmp r3, 0",
            "add r2, r3, 3",
            "movlt r3, r2",
            "asr r0, r3, 2",
            "lsl r0, r0, 4",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 8]",
            "beq 0x7aa4",
            "add r3, r0, 0xb700000",
            "add r3, r3, 0x1b000",
            "cmp r0, r3",
            "str r3, [sp, 0x10]",
            "blo 0x7b54",
            "ldr r0, [sp, 8]",
            "bl rsym.gdFree",
            "b 0x7a9c",
            "add r3, r6, 1",
            "cmp fp, r3",
            "ble 0x7ddc",
            "ldr r1, [sp, 0x10]",
            "add r0, r0, 0x10",
            "ldr r2, [sp, 8]",
            "str r0, [sp, 4]",
            "cmp r1, r0",
            "ldr r0, [sp, 8]",
            "stm r2, {r6, r7}",
            "str r7, [r2, 8]",
            "mov r2, 1",
            "str r2, [r0, 0xc]",
            "bls 0x7bb4",
            "cmp r6, fp",
            "bge 0x7bb4",
            "ldr r2, [sp, 4]",
            "str r3, [r2]",
            "mvn r3, 0",
            "str r7, [r2, 4]",
            "str r7, [r2, 8]",
            "str r3, [r2, 0xc]",
            "add r2, r2, 0x10",
            "str r2, [sp, 4]",
            "ldmib sp, {r2, r3}",
            "cmp r2, r3",
            "bls 0x7b48",
            "str sb, [sp, 0x1c]",
            "mov r7, r5",
            "mov sb, r8",
            "str fp, [sp, 0x18]",
            "ldr r3, [sp, 4]",
            "sub r8, r3, 0x10",
            "ldr r6, [r3, -0x10]",
            "ldr r0, [r8, 4]",
            "ldr r1, [r8, 0xc]",
            "ldr fp, [r8, 8]",
            "cmp r0, 0",
            "str r0, [sp]",
            "str r1, [sp, 0xc]",
            "add r6, r1, r6",
            "movlt r5, r0",
            "blt 0x7c48",
            "ldr r5, [sp]",
            "b 0x7c14",
            "bl rsym.gdImageSetPixel",
            "subs r5, r5, 1",
            "bmi 0x7d5c",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, sl",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r7",
            "mov r0, r4",
            "beq 0x7c08",
            "ldr r2, [sp]",
            "cmp r2, r5",
            "bgt 0x7d5c",
            "add r5, r5, 1",
            "cmp fp, r5",
            "strge r8, [sp]",
            "movge r8, r7",
            "bge 0x7c6c",
            "b 0x7dc8",
            "add r5, r5, 1",
            "cmp fp, r5",
            "blt 0x7dc0",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, r6",
            "bl rsym.gdImageGetPixel",
            "cmp r0, sl",
            "bne 0x7c60",
            "mov r7, r8",
            "str r5, [sp, 0x14]",
            "ldr r8, [sp]",
            "b 0x7cc4",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, sl",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r7",
            "mov r0, r4",
            "bne 0x7ccc",
            "add r5, r5, 1",
            "bl rsym.gdImageSetPixel",
            "cmp sb, r5",
            "bge 0x7c94",
            "ldr r2, [sp, 0x10]",
            "cmp r2, r8",
            "bls 0x7d08",
            "ldr r0, [sp, 0xc]",
            "adds r3, r6, r0",
            "bmi 0x7d08",
            "ldr r1, [sp, 0x18]",
            "cmp r1, r3",
            "ble 0x7d08",
            "ldr r2, [sp, 0x14]",
            "sub r3, r5, 1",
            "str r6, [r8]",
            "stmib r8, {r2, r3}",
            "str r0, [r8, 0xc]",
            "add r8, r8, 0x10",
            "add r3, fp, 1",
            "cmp r3, r5",
            "bge 0x7c48",
            "ldr r0, [sp, 0x10]",
            "cmp r8, r0",
            "bhs 0x7c48",
            "ldr r1, [sp, 0xc]",
            "subs r2, r6, r1",
            "bmi 0x7c48",
            "ldr r0, [sp, 0x18]",
            "cmp r0, r2",
            "ble 0x7c48",
            "ldr r0, [sp, 0xc]",
            "sub r1, r5, 1",
            "str r6, [r8]",
            "str r3, [r8, 4]",
            "rsb r2, r0, 0",
            "str r1, [r8, 8]",
            "str r2, [r8, 0xc]",
            "add r8, r8, 0x10",
            "b 0x7c48",
            "ldr r3, [sp]",
            "add r5, r5, 1",
            "str r5, [sp, 0x14]",
            "cmp r3, r5",
            "ble 0x7db4",
            "ldr r0, [sp, 0x10]",
            "cmp r0, r8",
            "bls 0x7db4",
            "ldr r1, [sp, 0xc]",
            "subs r3, r6, r1",
            "bmi 0x7db4",
            "ldr r2, [sp, 0x18]",
            "cmp r2, r3",
            "ble 0x7db4",
            "ldr r3, [sp]",
            "str r6, [r8]",
            "str r5, [r8, 4]",
            "sub r2, r3, 1",
            "rsb r3, r1, 0",
            "str r2, [r8, 8]",
            "str r3, [r8, 0xc]",
            "ldr r8, [sp, 4]",
            "ldr r1, [sp]",
            "add r5, r1, 1",
            "b 0x7cc4",
            "mov r7, r8",
            "ldr r8, [sp]",
            "ldr r1, [sp, 8]",
            "cmp r8, r1",
            "bls 0x7de8",
            "str r8, [sp, 4]",
            "b 0x7bd0",
            "ldr r1, [sp, 8]",
            "str r1, [sp, 4]",
            "b 0x7b8c",
            "ldr sb, [sp, 0x1c]",
            "b 0x7b48"
        ]
    },
    "rsym.gdImageGetPixel": {
        "function_address": "0x00003390",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xed0]!"
        ]
    },
    "rsym.gdImageSetPixel": {
        "function_address": "0x00003318",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf20]!"
        ]
    },
    "rsym._gdImageFillTiled": {
        "function_address": "0x000030fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x88]!"
        ]
    },
    "rsym.overflow2": {
        "function_address": "0x00003174",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x38]!"
        ]
    },
    "rsym.gdMalloc": {
        "function_address": "0x0000327c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf88]!"
        ]
    },
    "rsym.gdFree": {
        "function_address": "0x00003528",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdc0]!"
        ]
    },
    "sym.gdImageGd2Ptr": {
        "function_address": "0x0000ca9c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "mov r6, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "mov r5, r2",
            "mov r8, r3",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mov r2, r6",
            "mov r3, r5",
            "mov r0, r7",
            "mov r1, r4",
            "bl fcn.0000b5bc",
            "mov r1, r8",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "rsym.gdNewDynamicCtx": {
        "function_address": "0x00003474",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe38]!"
        ]
    },
    "fcn.0000b5bc": {
        "function_address": "0x0000b5bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r3",
            "ldr r3, [0x0000bbb4]",
            "mov r4, r0",
            "movw r0, 0x1c38",
            "sub sp, sp, 0x74",
            "ldr r0, [r4, r0]",
            "str r3, [sp, 0x4c]",
            "sub r3, r5, 1",
            "ldr r7, [sp, 0x4c]",
            "cmp r0, 0",
            "str r1, [sp, 0x28]",
            "moveq r6, 1",
            "movne r6, 4",
            "cmp r3, 1",
            "add r7, pc, r7",
            "str r7, [sp, 0x4c]",
            "bls 0xbb9c",
            "cmp r0, 0",
            "moveq r5, 2",
            "beq 0xb618",
            "mov r5, 4",
            "add r5, r5, 2",
            "cmp r2, 0",
            "moveq fp, 0x80",
            "streq fp, [sp, 0x34]",
            "beq 0xb644",
            "cmp r2, 0x3f",
            "movle ip, 0x40",
            "strle ip, [sp, 0x34]",
            "ble 0xb644",
            "cmp r2, 0x1000",
            "movge r2, 0x1000",
            "str r2, [sp, 0x34]",
            "ldr r1, [sp, 0x34]",
            "ldr r0, [r4, 4]",
            "bl fcn.00013da0",
            "add r0, r0, 1",
            "ldr r1, [sp, 0x34]",
            "str r0, [sp, 0x38]",
            "ldr r0, [r4, 8]",
            "bl fcn.00013da0",
            "add r0, r0, 1",
            "ldr r1, [sp, 0x28]",
            "str r0, [sp, 0x54]",
            "mov r0, 0x67",
            "bl rsym.gdPutC",
            "ldr r1, [sp, 0x28]",
            "mov r0, 0x64",
            "bl rsym.gdPutC",
            "ldr r1, [sp, 0x28]",
            "mov r0, 0x32",
            "bl rsym.gdPutC",
            "ldr r1, [sp, 0x28]",
            "mov r0, 0",
            "bl rsym.gdPutC",
            "ldr r1, [sp, 0x28]",
            "mov r0, 2",
            "bl rsym.gdPutWord",
            "ldr r1, [sp, 0x28]",
            "ldr r0, [r4, 4]",
            "bl rsym.gdPutWord",
            "ldr r1, [sp, 0x28]",
            "ldr r0, [r4, 8]",
            "bl rsym.gdPutWord",
            "ldr r0, [sp, 0x34]",
            "ldr r1, [sp, 0x28]",
            "bl rsym.gdPutWord",
            "mov r0, r5",
            "ldr r1, [sp, 0x28]",
            "bl rsym.gdPutWord",
            "ldr r0, [sp, 0x38]",
            "ldr r1, [sp, 0x28]",
            "bl rsym.gdPutWord",
            "ldr r1, [sp, 0x28]",
            "ldr r0, [sp, 0x54]",
            "bl rsym.gdPutWord",
            "cmp r5, 2",
            "cmpne r5, 4",
            "movne r1, 0",
            "moveq r1, 1",
            "str r1, [sp, 0x20]",
            "bne 0xbb1c",
            "ldr r2, [sp, 0x34]",
            "mov r1, 1",
            "mul r3, r2, r2",
            "mul r6, r6, r3",
            "mov r0, r6",
            "bl rsym.gdCalloc",
            "subs r5, r0, 0",
            "beq 0xb9b4",
            "mov r0, r6",
            "bl fcn.00014178",
            "movw r2, 0xb852",
            "movw r3, 0x51eb",
            "movt r2, 0x851e",
            "movt r3, 0x3ff0",
            "bl fcn.00014254",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4028",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "mov r1, 1",
            "str r0, [sp, 0x50]",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x40]",
            "beq 0xbba8",
            "ldr r3, [sp, 0x38]",
            "ldr r7, [sp, 0x54]",
            "ldr r0, [sp, 0x28]",
            "mul r6, r3, r7",
            "bl rsym.gdTell",
            "str r0, [sp, 0x58]",
            "ldr fp, [sp, 0x58]",
            "ldr r0, [sp, 0x28]",
            "add r1, fp, r6, lsl 3",
            "bl rsym.gdSeek",
            "lsl r0, r6, 6",
            "mov r1, 1",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x48]",
            "beq 0xbba8",
            "ldr r1, [sp, 0x28]",
            "mov r0, r4",
            "bl rsym._gdPutColors",
            "ldr r1, [sp, 0x54]",
            "cmp r1, 0",
            "movle fp, 0",
            "strle fp, [sp, 0x44]",
            "ble 0xb970",
            "ldr r7, [sp, 0x4c]",
            "movw r6, 0x1c38",
            "ldr r3, [0x0000bbb8]",
            "mov r2, 0",
            "str r2, [sp, 0x2c]",
            "str r2, [sp, 0x5c]",
            "add r3, r7, r3",
            "str r2, [sp, 0x44]",
            "str r3, [sp, 0x64]",
            "ldr r3, [0x0000bbbc]",
            "add r3, r7, r3",
            "str r3, [sp, 0x60]",
            "ldr fp, [sp, 0x38]",
            "cmp fp, 0",
            "ble 0xbb08",
            "ldr r3, [sp, 0x2c]",
            "mov r2, 0",
            "ldr r7, [sp, 0x34]",
            "str r2, [sp, 0x14]",
            "str r2, [sp, 0x30]",
            "add r3, r3, r7",
            "str r3, [sp, 0x3c]",
            "ldr r3, [r4, 8]",
            "ldr fp, [sp, 0x3c]",
            "ldr ip, [sp, 0x2c]",
            "cmp fp, r3",
            "movge fp, r3",
            "cmp fp, ip",
            "str fp, [sp, 0x18]",
            "ble 0xbaf0",
            "ldr r1, [sp, 0x14]",
            "lsl r8, ip, 2",
            "ldr r2, [sp, 0x14]",
            "mov r7, 0",
            "ldr r3, [sp, 0x34]",
            "str ip, [sp, 0x10]",
            "lsl r1, r1, 2",
            "add r2, r2, r3",
            "str r1, [sp, 0x24]",
            "str r2, [sp, 0x1c]",
            "ldr sl, [r4, 4]",
            "ldr fp, [sp, 0x1c]",
            "ldr ip, [sp, 0x20]",
            "cmp sl, fp",
            "movge sl, fp",
            "cmp ip, 0",
            "bne 0xb9bc",
            "ldr r1, [sp, 0x14]",
            "cmp r1, sl",
            "bge 0xb908",
            "str r5, [sp, 8]",
            "ldr fp, [sp, 0x24]",
            "ldr sb, [sp, 0x14]",
            "ldr r5, [sp, 0x28]",
            "b 0xb8d0",
            "movw ip, 0x1c3c",
            "add sb, sb, 1",
            "ldr r3, [r4, ip]",
            "ldr r3, [r3, r8]",
            "ldr r0, [r3, fp]",
            "add fp, fp, 4",
            "bl rsym.gdPutInt",
            "cmp sb, sl",
            "bge 0xb904",
            "ldr r3, [r4, r6]",
            "mov r1, r5",
            "cmp r3, 0",
            "bne 0xb8ac",
            "ldr r3, [r4]",
            "mov r1, r5",
            "add fp, fp, 4",
            "ldr r3, [r3, r8]",
            "ldrb r0, [r3, sb]",
            "add sb, sb, 1",
            "bl rsym.gdPutC",
            "cmp sb, sl",
            "blt 0xb8d0",
            "ldr r5, [sp, 8]",
            "ldr r1, [sp, 0x10]",
            "add r8, r8, 4",
            "ldr r2, [sp, 0x18]",
            "add r1, r1, 1",
            "cmp r1, r2",
            "str r1, [sp, 0x10]",
            "blt 0xb870",
            "ldr ip, [sp, 0x20]",
            "cmp ip, 0",
            "bne 0xba5c",
            "ldr fp, [sp, 0x30]",
            "ldr r1, [sp, 0x38]",
            "ldr ip, [sp, 0x1c]",
            "add fp, fp, 1",
            "cmp r1, fp",
            "str fp, [sp, 0x30]",
            "str ip, [sp, 0x14]",
            "bgt 0xb828",
            "ldr r2, [sp, 0x5c]",
            "ldr r7, [sp, 0x54]",
            "ldr r3, [sp, 0x3c]",
            "add r2, r2, 1",
            "cmp r7, r2",
            "str r2, [sp, 0x5c]",
            "str r3, [sp, 0x2c]",
            "bgt 0xb800",
            "ldr ip, [sp, 0x20]",
            "cmp ip, 0",
            "bne 0xbb38",
            "cmp r5, 0",
            "beq 0xb98c",
            "mov r0, r5",
            "bl rsym.gdFree",
            "ldr r3, [sp, 0x40]",
            "cmp r3, 0",
            "beq 0xb9a0",
            "mov r0, r3",
            "bl rsym.gdFree",
            "ldr r7, [sp, 0x48]",
            "cmp r7, 0",
            "beq 0xb9b4",
            "mov r0, r7",
            "bl rsym.gdFree",
            "add sp, sp, 0x74",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [sp, 0x14]",
            "cmp r2, sl",
            "bge 0xb908",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [sp, 0x14]",
            "b 0xba2c",
            "movw fp, 0x1c3c",
            "ldr r1, [r4, fp]",
            "ldr r1, [r1, r8]",
            "ldr r1, [r1, r2]",
            "ubfx fp, r1, 0x18, 7",
            "str fp, [sp, 4]",
            "ubfx fp, r1, 0x10, 8",
            "str fp, [sp, 8]",
            "ubfx fp, r1, 8, 8",
            "str fp, [sp, 0xc]",
            "ldr fp, [sp, 4]",
            "strb fp, [r5, r7]",
            "ldr r7, [sp, 8]",
            "strb r7, [r5, ip]",
            "add r7, sb, 1",
            "ldr fp, [sp, 0xc]",
            "strb fp, [r5, r0]",
            "strb r1, [r5, sb]",
            "add r3, r3, 1",
            "add r2, r2, 4",
            "cmp r3, sl",
            "bge 0xb908",
            "ldr r1, [r4, r6]",
            "add ip, r7, 1",
            "add r0, ip, 1",
            "add sb, r0, 1",
            "cmp r1, 0",
            "bne 0xb9d4",
            "ldr r1, [r4]",
            "ldr r1, [r1, r8]",
            "ldrb r1, [r1, r3]",
            "strb r1, [r5, r7]",
            "add r7, r7, 1",
            "b 0xba1c",
            "ldr r2, [sp, 0x50]",
            "add r1, sp, 0x70",
            "ldr r0, [sp, 0x40]",
            "mov r3, r7",
            "str r2, [r1, -4]!",
            "mov r2, r5",
            "bl sym.imp.compress",
            "cmp r0, 0",
            "beq 0xba8c",
            "ldr r0, [sp, 0x60]",
            "bl sym.imp.puts",
            "b 0xb930",
            "ldr fp, [sp, 0x44]",
            "ldr r3, [sp, 0x48]",
            "ldr r0, [sp, 0x28]",
            "add r7, r3, fp, lsl 3",
            "bl rsym.gdTell",
            "ldr r1, [sp, 0x6c]",
            "ldr ip, [sp, 0x48]",
            "ldr r2, [sp, 0x28]",
            "str r1, [r7, 4]",
            "str r0, [ip, fp, lsl 3]",
            "add fp, fp, 1",
            "ldr r0, [sp, 0x40]",
            "str fp, [sp, 0x44]",
            "bl rsym.gdPutBuf",
            "cmp r0, 0",
            "bgt 0xb930",
            "ldr r7, [sp, 0x4c]",
            "mov r1, 1",
            "ldr r3, [0x0000bbc0]",
            "mov r2, 0xf",
            "ldr r0, [sp, 0x64]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb930",
            "ldr r3, [sp, 0x14]",
            "mov r7, 0",
            "ldr fp, [sp, 0x34]",
            "add r3, r3, fp",
            "str r3, [sp, 0x1c]",
            "b 0xb924",
            "ldr ip, [sp, 0x2c]",
            "ldr r1, [sp, 0x34]",
            "add ip, ip, r1",
            "str ip, [sp, 0x3c]",
            "b 0xb950",
            "ldr ip, [sp, 0x20]",
            "str ip, [sp, 0x50]",
            "mov r5, ip",
            "str ip, [sp, 0x48]",
            "str ip, [sp, 0x58]",
            "str ip, [sp, 0x40]",
            "b 0xb7b0",
            "ldr r0, [sp, 0x28]",
            "mov r7, 0",
            "bl rsym.gdTell",
            "ldr r1, [sp, 0x58]",
            "mov r6, r0",
            "ldr r0, [sp, 0x28]",
            "bl rsym.gdSeek",
            "ldr r4, [sp, 0x48]",
            "ldr r8, [sp, 0x28]",
            "b 0xbb78",
            "ldr r0, [r4, -8]",
            "add r7, r7, 1",
            "bl rsym.gdPutInt",
            "ldr r0, [r4, -4]",
            "mov r1, r8",
            "bl rsym.gdPutInt",
            "ldr r2, [sp, 0x44]",
            "mov r1, r8",
            "add r4, r4, 8",
            "cmp r7, r2",
            "blt 0xbb60",
            "ldr r0, [sp, 0x28]",
            "mov r1, r6",
            "bl rsym.gdSeek",
            "b 0xb97c",
            "cmp r0, 0",
            "bne 0xb614",
            "b 0xb618",
            "mov fp, 0",
            "str fp, [sp, 0x48]",
            "b 0xb984"
        ]
    },
    "rsym.gdDPExtractData": {
        "function_address": "0x000031bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 8]!"
        ]
    },
    "fcn.00013da0": {
        "function_address": "0x00013da0",
        "instructions": [
            "cmp r1, 0",
            "beq 0x13e6c",
            "cmp r0, 0",
            "mvngt r0, 0x80000000",
            "movlt r0, 0x80000000",
            "b 0x14f8c",
            "push {r1, lr}",
            "mov r0, 8",
            "bl sym.imp.raise",
            "pop {r1, pc}"
        ]
    },
    "rsym.gdPutC": {
        "function_address": "0x000030b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xb8]!"
        ]
    },
    "rsym.gdPutWord": {
        "function_address": "0x00003534",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdb8]!"
        ]
    },
    "rsym.gdCalloc": {
        "function_address": "0x000035ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd68]!"
        ]
    },
    "fcn.00014178": {
        "function_address": "0x00014178",
        "instructions": [
            "teq r0, 0",
            "moveq r1, 0",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r4, 0x400",
            "add r4, r4, 0x32",
            "ands r5, r0, 0x80000000",
            "rsbmi r0, r0, 0",
            "mov r1, 0",
            "b 0x13ff0"
        ]
    },
    "fcn.00014254": {
        "function_address": "0x00014254",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov ip, 0xff",
            "orr ip, ip, 0x700",
            "ands r4, ip, r1, lsr 20",
            "andsne r5, ip, r3, lsr 20",
            "teqne r4, ip",
            "teqne r5, ip",
            "bleq fcn.00014434",
            "add r4, r4, r5",
            "eor r6, r1, r3",
            "bic r1, r1, ip, lsl 21",
            "bic r3, r3, ip, lsl 21",
            "orrs r5, r0, r1, lsl 12",
            "orrsne r5, r2, r3, lsl 12",
            "orr r1, r1, 0x100000",
            "orr r3, r3, 0x100000",
            "beq 0x1430c",
            "umull ip, lr, r0, r2",
            "mov r5, 0",
            "umlal lr, r5, r1, r2",
            "and r2, r6, 0x80000000",
            "umlal lr, r5, r0, r3",
            "mov r6, 0",
            "umlal r5, r6, r1, r3",
            "teq ip, 0",
            "orrne lr, lr, 1",
            "sub r4, r4, 0xff",
            "cmp r6, 0x200",
            "sbc r4, r4, 0x300",
            "bhs 0x142d8",
            "lsls lr, lr, 1",
            "adcs r5, r5, r5",
            "adc r6, r6, r6",
            "orr r1, r2, r6, lsl 11",
            "orr r1, r1, r5, lsr 21",
            "lsl r0, r5, 0xb",
            "orr r0, r0, lr, lsr 21",
            "lsl lr, lr, 0xb",
            "subs ip, r4, 0xfd",
            "cmphi ip, 0x700",
            "bhi 0x14338",
            "cmp lr, 0x80000000",
            "lsrseq lr, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "pop {r4, r5, r6, pc}",
            "and r6, r6, 0x80000000",
            "orr r1, r6, r1",
            "orr r0, r0, r2",
            "eor r1, r1, r3",
            "subs r4, r4, ip, lsr 1",
            "rsbsgt r5, r4, ip",
            "orrgt r1, r1, r4, lsl 20",
            "popgt {r4, r5, r6, pc}",
            "orr r1, r1, 0x100000",
            "mov lr, 0",
            "subs r4, r4, 1"
        ]
    },
    "fcn.00013ea8": {
        "function_address": "0x00013ea8",
        "instructions": [
            "push {r4, r5, lr}",
            "lsl r4, r1, 1",
            "lsl r5, r3, 1",
            "teq r4, r5",
            "teqeq r0, r2",
            "orrsne ip, r4, r0",
            "orrsne ip, r5, r2",
            "mvnsne ip, r4, asr 21",
            "mvnsne ip, r5, asr 21",
            "beq 0x140b8",
            "lsr r4, r4, 0x15",
            "rsbs r5, r4, r5, lsr 21",
            "rsblt r5, r5, 0",
            "ble 0x13efc",
            "add r4, r4, r5",
            "eor r2, r0, r2",
            "eor r3, r1, r3",
            "eor r0, r2, r0",
            "eor r1, r3, r1",
            "eor r2, r0, r2",
            "eor r3, r1, r3",
            "cmp r5, 0x36",
            "pophi {r4, r5, pc}",
            "tst r1, 0x80000000",
            "lsl r1, r1, 0xc",
            "mov ip, 0x100000",
            "orr r1, ip, r1, lsr 12",
            "beq 0x13f20",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0",
            "tst r3, 0x80000000",
            "lsl r3, r3, 0xc",
            "orr r3, ip, r3, lsr 12",
            "beq 0x13f38",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "teq r4, r5",
            "beq 0x140a0",
            "sub r4, r4, 1",
            "rsbs lr, r5, 0x20",
            "blt 0x13f64",
            "lsl ip, r2, lr",
            "adds r0, r0, r2, lsr r5",
            "adc r1, r1, 0",
            "adds r0, r0, r3, lsl lr",
            "adcs r1, r1, r3, asr r5",
            "b 0x13f80",
            "sub r5, r5, 0x20",
            "add lr, lr, 0x20",
            "cmp r2, 1",
            "lsl ip, r3, lr",
            "orrhs ip, ip, 2",
            "adds r0, r0, r3, asr r5",
            "adcs r1, r1, r3, asr 31",
            "and r5, r1, 0x80000000",
            "bpl 0x13f94",
            "rsbs ip, ip, 0",
            "rscs r0, r0, 0",
            "rsc r1, r1, 0",
            "cmp r1, 0x100000",
            "blo 0x13fd8",
            "cmp r1, 0x200000",
            "blo 0x13fc0",
            "lsrs r1, r1, 1",
            "rrxs r0, r0",
            "rrx ip, ip",
            "add r4, r4, 1",
            "lsl r2, r4, 0x15",
            "cmn r2, 0x400000",
            "bhs 0x14118",
            "cmp ip, 0x80000000",
            "lsrseq ip, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "orr r1, r1, r5",
            "pop {r4, r5, pc}",
            "lsls ip, ip, 1",
            "adcs r0, r0, r0",
            "adc r1, r1, r1",
            "tst r1, 0x100000",
            "sub r4, r4, 1",
            "bne 0x13fc0",
            "teq r1, 0",
            "moveq r1, r0",
            "moveq r0, 0",
            "clz r3, r1",
            "addeq r3, r3, 0x20",
            "sub r3, r3, 0xb",
            "subs r2, r3, 0x20",
            "bge 0x14030",
            "adds r2, r2, 0xc",
            "ble 0x1402c",
            "add ip, r2, 0x14",
            "rsb r2, r2, 0xc",
            "lsl r0, r1, ip",
            "lsr r1, r1, r2",
            "b 0x14040",
            "add r2, r2, 0x14",
            "rsble ip, r2, 0x20",
            "lsl r1, r1, r2",
            "orrle r1, r1, r0, lsr ip",
            "lslle r0, r0, r2",
            "subs r4, r4, r3",
            "addge r1, r1, r4, lsl 20",
            "orrge r1, r1, r5",
            "popge {r4, r5, pc}",
            "mvn r4, r4",
            "subs r4, r4, 0x1f",
            "bge 0x14094",
            "adds r4, r4, 0xc",
            "bgt 0x1407c",
            "add r4, r4, 0x14",
            "rsb r2, r4, 0x20",
            "lsr r0, r0, r4",
            "orr r0, r0, r1, lsl r2",
            "orr r1, r5, r1, lsr r4",
            "pop {r4, r5, pc}",
            "rsb r4, r4, 0xc",
            "rsb r2, r4, 0x20",
            "lsr r0, r0, r2",
            "orr r0, r0, r1, lsl r4",
            "mov r1, r5",
            "pop {r4, r5, pc}",
            "lsr r0, r1, r4",
            "mov r1, r5",
            "pop {r4, r5, pc}",
            "teq r4, 0",
            "eor r3, r3, 0x100000",
            "eoreq r1, r1, 0x100000",
            "addeq r4, r4, 1",
            "subne r5, r5, 1",
            "b 0x13f40",
            "mvns ip, r4, asr 21",
            "mvnsne ip, r5, asr 21",
            "beq 0x14128",
            "teq r4, r5",
            "teqeq r0, r2",
            "beq 0x140e0",
            "orrs ip, r4, r0",
            "moveq r1, r3",
            "moveq r0, r2",
            "pop {r4, r5, pc}",
            "teq r1, r3",
            "movne r1, 0",
            "movne r0, 0",
            "popne {r4, r5, pc}",
            "lsrs ip, r4, 0x15",
            "bne 0x14108",
            "lsls r0, r0, 1",
            "adcs r1, r1, r1",
            "orrhs r1, r1, 0x80000000",
            "pop {r4, r5, pc}",
            "adds r4, r4, 0x400000",
            "addlo r1, r1, 0x100000",
            "poplo {r4, r5, pc}",
            "and r5, r1, 0x80000000",
            "orr r1, r5, 0x7f000000",
            "orr r1, r1, 0xf00000",
            "mov r0, 0",
            "pop {r4, r5, pc}",
            "mvns ip, r4, asr 21",
            "movne r1, r3",
            "movne r0, r2",
            "mvnseq ip, r5, asr 21",
            "movne r3, r1",
            "movne r2, r0",
            "orrs r4, r0, r1, lsl 12",
            "orrseq r5, r2, r3, lsl 12",
            "teqeq r1, r3",
            "orrne r1, r1, 0x80000",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000147f0": {
        "function_address": "0x000147f0",
        "instructions": [
            "lsl r2, r1, 1",
            "adds r2, r2, 0x200000",
            "bhs 0x14830",
            "bpl 0x14828",
            "mvn r3, 0x3e0",
            "subs r2, r3, r2, asr 21",
            "bls 0x14838",
            "lsl r3, r1, 0xb",
            "orr r3, r3, 0x80000000",
            "orr r3, r3, r0, lsr 21",
            "tst r1, 0x80000000",
            "lsr r0, r3, r2",
            "rsbne r0, r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "orrs r0, r0, r1, lsl 12",
            "bne 0x14844",
            "ands r0, r1, 0x80000000",
            "mvneq r0, 0x80000000",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "rsym.gdTell": {
        "function_address": "0x00003264",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf98]!"
        ]
    },
    "rsym.gdSeek": {
        "function_address": "0x0000324c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfa8]!"
        ]
    },
    "rsym._gdPutColors": {
        "function_address": "0x000034ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xde8]!"
        ]
    },
    "rsym.gdPutInt": {
        "function_address": "0x00003624",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd18]!"
        ]
    },
    "sym.imp.compress": {
        "function_address": "0x00003588",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd80]!"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x00003120",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x70]!"
        ]
    },
    "rsym.gdPutBuf": {
        "function_address": "0x000034c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe00]!"
        ]
    },
    "sym.imp.fwrite": {
        "function_address": "0x0000351c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdc8]!"
        ]
    },
    "sym.gdImageCreateFromPngSource": {
        "function_address": "0x00010ef4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 0",
            "bl rsym.gdNewSSCtx",
            "mov r4, r0",
            "bl rsym.gdImageCreateFromPngCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "rsym.gdNewSSCtx": {
        "function_address": "0x00003384",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xed8]!"
        ]
    },
    "rsym.gdImageCreateFromPngCtx": {
        "function_address": "0x00003648",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd00]!"
        ]
    },
    "sym.gdImageColorClosest": {
        "function_address": "0x0000414c",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov ip, 0",
            "sub sp, sp, 0xc",
            "str ip, [sp]",
            "bl rsym.gdImageColorClosestAlpha",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "rsym.gdImageColorClosestAlpha": {
        "function_address": "0x0000306c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xe8]!"
        ]
    },
    "sym.gdImageColorAllocate": {
        "function_address": "0x0000459c",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov ip, 0",
            "sub sp, sp, 0xc",
            "str ip, [sp]",
            "bl rsym.gdImageColorAllocateAlpha",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "rsym.gdImageColorAllocateAlpha": {
        "function_address": "0x00003510",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdd0]!"
        ]
    },
    "sym.gdImageGifAnimAddPtr": {
        "function_address": "0x0000f48c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "sub sp, sp, 0x10",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "mov r8, r2",
            "mov r7, r3",
            "bl rsym.gdNewDynamicCtx",
            "ldr ip, [sp, 0x28]",
            "mov r4, r0",
            "mov r2, r8",
            "mov r3, r7",
            "mov r0, r6",
            "mov r1, r4",
            "str ip, [sp]",
            "ldr ip, [sp, 0x2c]",
            "str ip, [sp, 4]",
            "ldr ip, [sp, 0x30]",
            "str ip, [sp, 8]",
            "ldr ip, [sp, 0x34]",
            "str ip, [sp, 0xc]",
            "bl rsym.gdImageGifAnimAddCtx",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "rsym.gdImageGifAnimAddCtx": {
        "function_address": "0x00003204",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfd8]!"
        ]
    },
    "sym.gdImageGifPtr": {
        "function_address": "0x0000eb80",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mov r0, r6",
            "mov r1, r4",
            "bl rsym.gdImageGifCtx",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "rsym.gdImageGifCtx": {
        "function_address": "0x000034f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xde0]!"
        ]
    },
    "sym.gdImageString": {
        "function_address": "0x00008374",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "ldr r8, [sp, 0x30]",
            "mov sb, r0",
            "mov r6, r1",
            "mov r5, r2",
            "mov sl, r3",
            "ldr fp, [sp, 0x34]",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "subs r7, r0, 0",
            "ble 0x83dc",
            "mov r4, 0",
            "ldrb ip, [r8, r4]",
            "mov r2, r5",
            "mov r3, sl",
            "mov r0, sb",
            "mov r1, r6",
            "str fp, [sp, 4]",
            "str ip, [sp]",
            "add r4, r4, 1",
            "bl rsym.gdImageChar",
            "ldr r3, [r6, 8]",
            "cmp r7, r4",
            "add r5, r5, r3",
            "bgt 0x83a8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x000035e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd40]!"
        ]
    },
    "rsym.gdImageChar": {
        "function_address": "0x0000354c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xda8]!"
        ]
    },
    "sym.gdImageArc": {
        "function_address": "0x00009a74",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x1c",
            "ldr ip, [sp, 0x20]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x24]",
            "str ip, [sp, 4]",
            "ldr ip, [sp, 0x28]",
            "str ip, [sp, 8]",
            "ldr ip, [sp, 0x2c]",
            "str ip, [sp, 0xc]",
            "mov ip, 2",
            "str ip, [sp, 0x10]",
            "bl rsym.gdImageFilledArc",
            "add sp, sp, 0x1c",
            "ldm sp!, {pc}"
        ]
    },
    "rsym.gdImageFilledArc": {
        "function_address": "0x000035d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd50]!"
        ]
    },
    "sym.lsqrt": {
        "function_address": "0x00004cf8",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00014178",
            "bl sym.imp.sqrt",
            "bl fcn.000147f0",
            "pop {r3, pc}"
        ]
    },
    "sym.imp.sqrt": {
        "function_address": "0x00002ff4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x138]!"
        ]
    },
    "sym.gdImagePngToSink": {
        "function_address": "0x00010ec4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, 0",
            "bl rsym.gdNewSSCtx",
            "mov r4, r0",
            "mov r0, r5",
            "mov r1, r4",
            "bl rsym.gdImagePngCtx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "rsym.gdImagePngCtx": {
        "function_address": "0x0000300c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x128]!"
        ]
    },
    "sym.gdImageColorResolve": {
        "function_address": "0x00004720",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov ip, 0",
            "sub sp, sp, 0xc",
            "str ip, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "rsym.gdImageColorResolveAlpha": {
        "function_address": "0x000033f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe90]!"
        ]
    },
    "sym.gd_strtok_r": {
        "function_address": "0x00012b80",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x100",
            "mov r5, r1",
            "mov r4, r0",
            "mov r6, r2",
            "mov r0, sp",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldrsb r3, [r5]",
            "cmp r3, 0",
            "beq 0x12bd4",
            "mov r1, 1",
            "mov r2, r5",
            "ldrb r3, [r5], 1",
            "ldrsb r2, [r2, 1]",
            "add r0, sp, 0x100",
            "add r3, r0, r3",
            "cmp r2, 0",
            "strb r1, [r3, -0x100]",
            "bne 0x12bb4",
            "cmp r4, 0",
            "ldreq r4, [r6]",
            "ldrb r0, [r4]",
            "cmp r0, 0",
            "beq 0x12c90",
            "add r1, sp, 0x100",
            "add r3, r1, r0",
            "ldrb r3, [r3, -0x100]",
            "cmp r3, 0",
            "bne 0x12c64",
            "mov ip, r4",
            "add r2, r4, 1",
            "b 0x12c0c",
            "ldrb r0, [ip, 1]!",
            "cmp r0, 0",
            "mov r3, r2",
            "beq 0x12c98",
            "ldrb r1, [r2], 1",
            "add r0, sp, 0x100",
            "add r1, r0, r1",
            "ldrb r1, [r1, -0x100]",
            "cmp r1, 0",
            "beq 0x12c08",
            "mov r2, 0",
            "strb r2, [r3], 1",
            "mov r1, r3",
            "ldrb r2, [r3], 1",
            "add r0, sp, 0x100",
            "add r2, r0, r2",
            "ldrb r2, [r2, -0x100]",
            "cmp r2, 0",
            "bne 0x12c38",
            "mov r0, r4",
            "str r1, [r6]",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, pc}",
            "add r3, r4, 1",
            "mov r4, r3",
            "ldrb r2, [r3], 1",
            "add r0, sp, 0x100",
            "add r2, r0, r2",
            "ldrb r2, [r2, -0x100]",
            "cmp r2, 0",
            "bne 0x12c68",
            "ldrb r0, [r4]",
            "cmp r0, 0",
            "bne 0x12bfc",
            "str r4, [r6]",
            "b 0x12c5c",
            "str ip, [r6]",
            "mov r0, r4",
            "b 0x12c5c"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x000033e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe98]!"
        ]
    },
    "sym.gdImageCreateFromXpm": {
        "function_address": "0x000137b8",
        "instructions": [
            "ldr r0, [0x000137ec]",
            "mov r1, 1",
            "push {r3, lr}",
            "mov r2, 0x25",
            "ldr r3, [0x000137f0]",
            "add r0, pc, r0",
            "ldr ip, [0x000137f4]",
            "ldr r3, [r0, r3]",
            "add r0, r0, ip",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.gdImageFillToBorder": {
        "function_address": "0x00007df0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r3, 0",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "mov sl, r1",
            "mov r6, r2",
            "ldr r8, [sp, 0x38]",
            "blt 0x7fd4",
            "mov r3, 0x1c40",
            "cmp r1, 0",
            "ldr r2, [r0, r3]",
            "movge r5, r1",
            "mvnge fp, 0",
            "str r2, [sp, 8]",
            "mov r2, 0",
            "str r2, [r0, r3]",
            "bge 0x7e4c",
            "b 0x7fc8",
            "bl rsym.gdImageSetPixel",
            "subs r3, r5, 1",
            "mov fp, r5",
            "bmi 0x7e74",
            "mov r5, r3",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, r7",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r8",
            "mov r0, r4",
            "bne 0x7e38",
            "cmn fp, 1",
            "beq 0x7fc8",
            "ldr r3, [r4, 4]",
            "add r5, sl, 1",
            "cmp r5, r3",
            "blt 0x7eac",
            "b 0x7ed4",
            "bl rsym.gdImageSetPixel",
            "ldr r2, [r4, 4]",
            "add r3, r5, 1",
            "mov sl, r5",
            "cmp r2, r3",
            "ble 0x7ed4",
            "mov r5, r3",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, r7",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r8",
            "mov r0, r4",
            "bne 0x7e90",
            "cmp r6, 0",
            "ble 0x7f54",
            "cmp sl, fp",
            "blt 0x7f54",
            "sub r3, r6, 1",
            "mov r5, fp",
            "str fp, [sp, 0xc]",
            "mov sb, 1",
            "mov fp, r6",
            "mov r6, r3",
            "b 0x7f1c",
            "cmp r0, r8",
            "cmpne r0, r7",
            "mov sb, 1",
            "bne 0x7fdc",
            "add r5, r5, 1",
            "cmp sl, r5",
            "blt 0x7f4c",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp sb, 0",
            "bne 0x7f00",
            "cmp r0, r7",
            "cmpne r0, r8",
            "add r5, r5, 1",
            "moveq sb, 1",
            "cmp sl, r5",
            "bge 0x7f1c",
            "mov r6, fp",
            "ldr fp, [sp, 0xc]",
            "ldr r3, [r4, 8]",
            "sub r3, r3, 1",
            "cmp r6, r3",
            "bge 0x7fc8",
            "cmp sl, fp",
            "blt 0x7fc8",
            "add sb, r6, 1",
            "mov r5, fp",
            "mov r6, 1",
            "b 0x7f98",
            "cmp r0, r8",
            "cmpne r0, r7",
            "mov r6, 1",
            "bne 0x7ffc",
            "add r5, r5, 1",
            "cmp sl, r5",
            "blt 0x7fc8",
            "mov r1, r5",
            "mov r2, sb",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r6, 0",
            "bne 0x7f7c",
            "cmp r0, r7",
            "cmpne r0, r8",
            "add r5, r5, 1",
            "moveq r6, 1",
            "cmp sl, r5",
            "bge 0x7f98",
            "ldr r2, [sp, 8]",
            "mov r3, 0x1c40",
            "str r2, [r4, r3]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r7",
            "str r8, [sp]",
            "mov sb, 0",
            "bl rsym.gdImageFillToBorder",
            "b 0x7f10",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, sb",
            "mov r3, r7",
            "str r8, [sp]",
            "mov r6, 0",
            "bl rsym.gdImageFillToBorder",
            "b 0x7f8c"
        ]
    },
    "rsym.gdImageFillToBorder": {
        "function_address": "0x00003054",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xf8]!"
        ]
    },
    "sym.gdImageCreateFromGifPtr": {
        "function_address": "0x0000dd7c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0",
            "bl rsym.gdNewDynamicCtxEx",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0xdda8",
            "bl rsym.gdImageCreateFromGifCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "rsym.gdNewDynamicCtxEx": {
        "function_address": "0x0000360c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd28]!"
        ]
    },
    "rsym.gdImageCreateFromGifCtx": {
        "function_address": "0x00003210",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfd0]!"
        ]
    },
    "sym.readwbmp": {
        "function_address": "0x000139b0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "mov r0, 0x10",
            "mov r5, r1",
            "mov fp, r2",
            "bl rsym.gdMalloc",
            "subs r6, r0, 0",
            "mvneq r0, 0",
            "popeq {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r5",
            "blx r4",
            "cmp r0, 0",
            "str r0, [r6]",
            "bne 0x13a04",
            "mov r0, r4",
            "mov r1, r5",
            "bl rsym.skipheader",
            "cmp r0, 0",
            "beq 0x13a14",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r6",
            "bl rsym.gdFree",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, r5",
            "bl rsym.getmbi",
            "cmn r0, 1",
            "mov r7, r0",
            "str r0, [r6, 4]",
            "beq 0x13b28",
            "mov r0, r4",
            "mov r1, r5",
            "bl rsym.getmbi",
            "cmn r0, 1",
            "mov r7, r0",
            "str r0, [r6, 8]",
            "beq 0x13b28",
            "mov r0, 4",
            "ldr r1, [r6, 4]",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x13a04",
            "ldmib r6, {r0, r1}",
            "lsl r0, r0, 2",
            "bl rsym.overflow2",
            "subs sb, r0, 0",
            "bne 0x13a04",
            "ldr r3, [r6, 4]",
            "ldr r0, [r6, 8]",
            "mul r0, r0, r3",
            "lsl r0, r0, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [r6, 0xc]",
            "beq 0x13a04",
            "ldr r3, [r6, 8]",
            "cmp r3, 0",
            "ble 0x13b1c",
            "ldr ip, [r6, 4]",
            "mov r7, sb",
            "mov sl, 1",
            "mov r8, 0",
            "cmp r8, ip",
            "bge 0x13b0c",
            "mov r0, r5",
            "blx r4",
            "ldr ip, [r6, 4]",
            "mov r2, r8",
            "mov r3, 7",
            "cmp ip, r2",
            "asr r1, r0, r3",
            "add r2, r2, 1",
            "ble 0x13af8",
            "ands r1, r1, 1",
            "ldreq ip, [r6, 0xc]",
            "ldrne r1, [r6, 0xc]",
            "streq r1, [ip, r7, lsl 2]",
            "strne sl, [r1, r7, lsl 2]",
            "add r7, r7, 1",
            "ldr ip, [r6, 4]",
            "subs r3, r3, 1",
            "bhs 0x13acc",
            "add r8, r8, 8",
            "cmp r8, ip",
            "blt 0x13ab8",
            "ldr r3, [r6, 8]",
            "add sb, sb, 1",
            "cmp r3, sb",
            "bgt 0x13aac",
            "str r6, [fp]",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r6",
            "bl rsym.gdFree",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.skipheader": {
        "function_address": "0x00003060",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xf0]!"
        ]
    },
    "rsym.getmbi": {
        "function_address": "0x00003084",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xd8]!"
        ]
    },
    "sym.gdImageCreateFromWBMP": {
        "function_address": "0x000129a8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "bl rsym.gdImageCreateFromWBMPCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "rsym.gdNewFileCtx": {
        "function_address": "0x000033d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xea0]!"
        ]
    },
    "rsym.gdImageCreateFromWBMPCtx": {
        "function_address": "0x000033fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe88]!"
        ]
    },
    "sym.gdImageSquareToCircle": {
        "function_address": "0x00009f14",
        "instructions": [
            "ldmib r0, {r2, r3}",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "sub sp, sp, 0x34",
            "cmp r2, r3",
            "movne r5, 0",
            "beq 0x9f3c",
            "mov r0, r5",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "lsl r0, r1, 1",
            "mov r1, r0",
            "bl rsym.gdImageCreateTrueColor",
            "ldr r7, [r0, 4]",
            "mov r5, r0",
            "add r0, r7, r7, lsr 31",
            "bic r0, r0, 1",
            "bl fcn.00014178",
            "ldr r3, [r5, 8]",
            "mov sl, r0",
            "mov fp, r1",
            "cmp r3, 0",
            "movgt r0, 0",
            "strgt r0, [sp, 0x1c]",
            "ble 0x9f30",
            "cmp r7, 0",
            "ble 0xa1a8",
            "ldr r0, [sp, 0x1c]",
            "mov r4, 0",
            "bl fcn.00014178",
            "mov r2, sl",
            "mov r3, fp",
            "bl fcn.00013ea4",
            "mov r3, r1",
            "mov r2, r0",
            "strd r0, r1, [sp, 0x20]",
            "bl fcn.00014254",
            "ldr r7, [sp, 0x1c]",
            "strd r0, r1, [sp, 0x10]",
            "asr r3, r7, 1",
            "lsl r3, r3, 2",
            "str r3, [sp, 0x2c]",
            "b 0x9fd0",
            "ldr r7, [r5, 4]",
            "add r4, r4, 1",
            "cmp r4, r7, lsl 1",
            "bge 0xa1a4",
            "mov r0, r4",
            "bl fcn.00014178",
            "mov r2, sl",
            "mov r3, fp",
            "bl fcn.00013ea4",
            "mov r2, r0",
            "mov r3, r1",
            "mov r8, r0",
            "mov sb, r1",
            "bl fcn.00014254",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl sym.imp.sqrt",
            "mov r2, sl",
            "mov r3, fp",
            "strd r0, r1, [sp]",
            "bl fcn.000147dc",
            "cmp r0, 0",
            "bne 0x9fc0",
            "ldrd r2, r3, [sp, 0x20]",
            "mov r0, r8",
            "mov r1, sb",
            "bl sym.imp.atan2",
            "mov r2, 0x7a",
            "movw r3, 0x21fa",
            "movt r2, 0xfc8b",
            "movt r3, 0x3ff9",
            "bl fcn.00013ea8",
            "mov r2, 0",
            "mov r3, 0",
            "mov r8, r0",
            "mov sb, r1",
            "bl fcn.000147a0",
            "cmp r0, 0",
            "mov r2, 0x7a",
            "movw r3, 0x21fa",
            "movt r2, 0xfc8b",
            "movt r3, 0x4019",
            "mov r0, r8",
            "mov r1, sb",
            "beq 0xa080",
            "bl fcn.00013ea8",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r0, [r6, 4]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "mov r0, r8",
            "ldrd r2, r3, [sp, 8]",
            "mov r1, sb",
            "bl fcn.00014254",
            "movw r2, 0xe938",
            "movw r3, 0x21fb",
            "movt r2, 0x542f",
            "movt r3, 0x4019",
            "bl fcn.000144c0",
            "bl fcn.000147f0",
            "ldrd r2, r3, [sp]",
            "mov r7, r0",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00014254",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r0, [r5, 4]",
            "bl fcn.00014178",
            "mov r3, r1",
            "mov r2, r0",
            "mov r1, sb",
            "mov r0, r8",
            "bl fcn.000144c0",
            "bl fcn.000147f0",
            "mov r1, r7",
            "mov r2, r0",
            "mov r0, r6",
            "bl rsym.gdImageGetPixel",
            "movw r2, 0x1c3c",
            "add r7, r0, 0x104",
            "add ip, r0, 0x204",
            "add r3, r0, 4",
            "ldr r1, [r5, r2]",
            "add r2, r0, 0x600",
            "str r7, [sp, 8]",
            "movw r7, 0x1c38",
            "str ip, [sp, 0x28]",
            "ubfx r8, r0, 0x12, 6",
            "ldr ip, [sp, 0x2c]",
            "ubfx sb, r0, 2, 6",
            "str r3, [sp]",
            "add r2, r2, 0xe",
            "ldr r3, [r6, r7]",
            "ubfx r7, r0, 0xa, 6",
            "ldr r1, [r1, ip]",
            "asr ip, r4, 1",
            "ubfx r0, r0, 0x1a, 5",
            "cmp r3, 0",
            "ldr r3, [r1, ip, lsl 2]",
            "beq 0xa248",
            "ubfx r2, r3, 0x10, 8",
            "uxtab sb, sb, r3",
            "str r2, [sp, 8]",
            "ubfx r2, r3, 8, 8",
            "str r2, [sp]",
            "ldr r2, [sp, 8]",
            "add r8, r8, r2",
            "ldr r2, [sp]",
            "add r7, r7, r2",
            "lsl r7, r7, 8",
            "ubfx r3, r3, 0x18, 7",
            "add r3, r0, r3",
            "add r8, r7, r8, lsl 16",
            "add r4, r4, 1",
            "add sb, r8, sb",
            "add r3, sb, r3, lsl 24",
            "str r3, [r1, ip, lsl 2]",
            "ldr r7, [r5, 4]",
            "cmp r4, r7, lsl 1",
            "blt 0x9fd0",
            "ldr r3, [r5, 8]",
            "ldr r2, [sp, 0x1c]",
            "add r2, r2, 1",
            "cmp r2, r3, lsl 1",
            "str r2, [sp, 0x1c]",
            "blt 0x9f78",
            "cmp r3, 0",
            "movgt r4, 0",
            "movwgt r6, 0x1c3c",
            "ble 0x9f30",
            "cmp r7, 0",
            "ble 0xa238",
            "ldr r3, [r5, r6]",
            "mov r1, 0",
            "ldr r2, [r3, r4, lsl 2]",
            "ldr r3, [r2]",
            "add r1, r1, 1",
            "ubfx ip, r3, 0x18, 7",
            "ubfx r0, r3, 0x10, 8",
            "and sl, ip, 0x7c",
            "and r7, r3, 0xfc",
            "ubfx r8, r3, 6, 2",
            "add ip, sl, ip, lsr 6",
            "add r8, r8, r7",
            "and r7, r0, 0xfc",
            "ubfx r3, r3, 8, 8",
            "add r0, r7, r0, lsr 6",
            "add ip, r8, ip, lsl 24",
            "and r7, r3, 0xfc",
            "add r0, ip, r0, lsl 16",
            "add r3, r7, r3, lsr 6",
            "add r3, r0, r3, lsl 8",
            "str r3, [r2], 4",
            "ldr r7, [r5, 4]",
            "cmp r7, r1",
            "bgt 0xa1e0",
            "ldr r3, [r5, 8]",
            "add r4, r4, 1",
            "cmp r3, r4",
            "bgt 0xa1cc",
            "b 0x9f30",
            "ldr r7, [sp]",
            "ubfx r8, r3, 0x10, 8",
            "ldr r2, [r6, r2, lsl 2]",
            "and sb, r3, 0xff",
            "ldr r0, [r6, r7, lsl 2]",
            "ldr r7, [sp, 8]",
            "ldr r7, [r6, r7, lsl 2]",
            "add r8, r8, r0, asr 2",
            "str r7, [sp]",
            "ldr r7, [sp, 0x28]",
            "ldr r0, [sp]",
            "ldr r7, [r6, r7, lsl 2]",
            "str r7, [sp, 8]",
            "ubfx r7, r3, 8, 8",
            "add r7, r7, r0, asr 2",
            "ldr r0, [sp, 8]",
            "add sb, sb, r0, asr 2",
            "asr r0, r2, 2",
            "b 0xa178"
        ]
    },
    "rsym.gdImageCreateTrueColor": {
        "function_address": "0x00003480",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe30]!"
        ]
    },
    "fcn.00013ea4": {
        "function_address": "0x00013ea4",
        "instructions": [
            "eor r3, r3, 0x80000000"
        ]
    },
    "fcn.000147dc": {
        "function_address": "0x000147dc",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0001475c",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "sym.imp.atan2": {
        "function_address": "0x0000330c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf28]!"
        ]
    },
    "fcn.000147a0": {
        "function_address": "0x000147a0",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00014778",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.000144c0": {
        "function_address": "0x000144c0",
        "instructions": [
            "bgt 0x144a0",
            "cmn r4, 0x36",
            "movle r0, 0",
            "andle r1, r1, 0x80000000",
            "pople {r4, r5, r6, pc}",
            "rsb r4, r4, 0",
            "subs r4, r4, 0x20",
            "bge 0x143bc",
            "adds r4, r4, 0xc",
            "bgt 0x14390",
            "add r4, r4, 0x14",
            "rsb r5, r4, 0x20",
            "lsl r3, r0, r5",
            "lsr r0, r0, r4",
            "orr r0, r0, r1, lsl r5",
            "and r2, r1, 0x80000000",
            "bic r1, r1, 0x80000000",
            "adds r0, r0, r3, lsr 31",
            "adc r1, r2, r1, lsr r4",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "rsb r4, r4, 0xc",
            "rsb r5, r4, 0x20",
            "lsl r3, r0, r4",
            "lsr r0, r0, r5",
            "orr r0, r0, r1, lsl r4",
            "and r1, r1, 0x80000000",
            "adds r0, r0, r3, lsr 31",
            "adc r1, r1, 0",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "rsb r5, r4, 0x20",
            "orr lr, lr, r0, lsl r5",
            "lsr r3, r0, r4",
            "orr r3, r3, r1, lsl r5",
            "lsr r0, r1, r4",
            "and r1, r1, 0x80000000",
            "bic r0, r0, r1, lsr r4",
            "add r0, r0, r3, lsr 31",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "and r1, r1, 0x80000000",
            "orr r1, r1, 0x7f000000",
            "orr r1, r1, 0xf00000",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "push {r4, r5, r6, lr}",
            "mov ip, 0xff",
            "orr ip, ip, 0x700",
            "ands r4, ip, r1, lsr 20",
            "andsne r5, ip, r3, lsr 20",
            "teqne r4, ip",
            "teqne r5, ip",
            "bleq fcn.00014654",
            "sub r4, r4, r5",
            "eor lr, r1, r3",
            "orrs r5, r2, r3, lsl 12",
            "lsl r1, r1, 0xc",
            "beq 0x14624",
            "lsl r3, r3, 0xc",
            "mov r5, 0x10000000",
            "orr r3, r5, r3, lsr 4",
            "orr r3, r3, r2, lsr 24",
            "lsl r2, r2, 8",
            "orr r5, r5, r1, lsr 4",
            "orr r5, r5, r0, lsr 24",
            "lsl r6, r0, 8",
            "and r1, lr, 0x80000000",
            "cmp r5, r3",
            "cmpeq r6, r2",
            "adc r4, r4, 0xfd",
            "add r4, r4, 0x300",
            "bhs 0x14534",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs r6, r6, r2",
            "sbc r5, r5, r3",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "mov r0, 0x100000",
            "mov ip, 0x80000",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 1",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 2",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 3",
            "orrs lr, r5, r6",
            "beq 0x145f4",
            "lsl r5, r5, 4",
            "orr r5, r5, r6, lsr 28",
            "lsl r6, r6, 4",
            "lsl r3, r3, 3",
            "orr r3, r3, r2, lsr 29",
            "lsl r2, r2, 3",
            "lsrs ip, ip, 4",
            "bne 0x1454c",
            "tst r1, 0x100000",
            "bne 0x14600",
            "orr r1, r1, r0",
            "mov r0, 0",
            "mov ip, 0x80000000",
            "b 0x1454c",
            "tst r1, 0x100000",
            "orreq r1, r1, r0",
            "moveq r0, 0",
            "subs ip, r4, 0xfd",
            "cmphi ip, 0x700",
            "bhi 0x14338",
            "subs ip, r5, r3",
            "subseq ip, r6, r2",
            "lsrseq ip, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "pop {r4, r5, r6, pc}",
            "and lr, lr, 0x80000000",
            "orr r1, lr, r1, lsr 12",
            "adds r4, r4, ip, lsr 1",
            "rsbsgt r5, r4, ip",
            "orrgt r1, r1, r4, lsl 20",
            "popgt {r4, r5, r6, pc}",
            "orr r1, r1, 0x100000",
            "mov lr, 0",
            "subs r4, r4, 1",
            "b 0x14338"
        ]
    },
    "sym.gdImageCreateFromGd2PartCtx": {
        "function_address": "0x0000c358",
        "instructions": [
            "ldr ip, [0x0000c9a4]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x9c",
            "str r2, [sp, 0x34]",
            "mov r8, r1",
            "add ip, pc, ip",
            "mov sl, r3",
            "str ip, [sp, 0x60]",
            "mov ip, 0",
            "str ip, [sp, 0x74]",
            "add ip, sp, 0x7c",
            "str ip, [sp]",
            "add ip, sp, 0x78",
            "str ip, [sp, 4]",
            "add ip, sp, 0x8c",
            "str ip, [sp, 8]",
            "add ip, sp, 0x88",
            "str ip, [sp, 0xc]",
            "add r1, sp, 0x94",
            "add ip, sp, 0x74",
            "add r2, sp, 0x90",
            "add r3, sp, 0x84",
            "str r0, [sp, 0x20]",
            "ldr fp, [sp, 0xc0]",
            "str ip, [sp, 0x10]",
            "bl fcn.0000bbc4",
            "cmp r0, 1",
            "bne 0xc8bc",
            "ldr r3, [sp, 0x78]",
            "sub r3, r3, 3",
            "cmp r3, 1",
            "bls 0xc940",
            "mov r0, sl",
            "mov r1, fp",
            "bl rsym.gdImageCreate",
            "mov r6, r0",
            "cmp r6, 0",
            "beq 0xc8bc",
            "ldr r2, [sp, 0x7c]",
            "mov r1, r6",
            "ldr r0, [sp, 0x20]",
            "cmp r2, 2",
            "movne r2, 0",
            "moveq r2, 1",
            "bl rsym._gdGetColors",
            "cmp r0, 0",
            "beq 0xc998",
            "ldr r3, [sp, 0x78]",
            "ldr r5, [sp, 0x8c]",
            "ldr r7, [sp, 0x88]",
            "cmp r3, 2",
            "cmpne r3, 4",
            "movne r3, 0",
            "moveq r3, 1",
            "strne r3, [sp, 0x58]",
            "movne r4, r3",
            "strne r3, [sp, 0x64]",
            "bne 0xc4d4",
            "mul r5, r5, r7",
            "cmp r5, 0",
            "movle sb, 0",
            "ble 0xc478",
            "ldr r2, [sp, 0x74]",
            "mov sb, 0",
            "mov r3, sb",
            "add r1, r2, r3, lsl 3",
            "add r3, r3, 1",
            "ldr r1, [r1, 4]",
            "cmp sb, r1",
            "movlt sb, r1",
            "cmp r3, r5",
            "bne 0xc45c",
            "movw r3, 0x1c38",
            "mov r1, 1",
            "ldr r3, [r6, r3]",
            "cmp r3, 0",
            "ldrne r3, [sp, 0x84]",
            "ldreq r3, [sp, 0x84]",
            "mulne r3, r3, r3",
            "muleq r3, r3, r3",
            "lslne r3, r3, 2",
            "streq r3, [sp, 0x64]",
            "strne r3, [sp, 0x64]",
            "ldr r0, [sp, 0x64]",
            "bl rsym.gdCalloc",
            "subs r4, r0, 0",
            "beq 0xc990",
            "add r0, sb, 1",
            "mov r1, 1",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x58]",
            "ldrne r5, [sp, 0x8c]",
            "ldrne r7, [sp, 0x88]",
            "beq 0xc890",
            "ldr lr, [sp, 0x34]",
            "add sl, sl, r8",
            "ldr sb, [sp, 0x84]",
            "mov r0, r8",
            "str sl, [sp, 0x24]",
            "add fp, fp, lr",
            "mov r1, sb",
            "str fp, [sp, 0x44]",
            "bl fcn.00013da0",
            "mov r3, r0",
            "mov r1, sb",
            "bic r3, r3, r3, asr 31",
            "ldr r0, [sp, 0x34]",
            "str r3, [sp, 0x6c]",
            "mov fp, 0",
            "bl fcn.00013da0",
            "mov r1, sb",
            "bic sl, r0, r0, asr 31",
            "ldr r0, [sp, 0x24]",
            "bl fcn.00013da0",
            "mov r1, sb",
            "str r0, [sp, 0x54]",
            "ldr r0, [sp, 0x44]",
            "bl fcn.00013da0",
            "str r0, [sp, 0x68]",
            "ldr r0, [sp, 0x54]",
            "ldr r1, [sp, 0x68]",
            "str sl, [sp, 0x50]",
            "cmp r0, r5",
            "ldr r0, [sp, 0x20]",
            "subge r5, r5, 1",
            "strge r5, [sp, 0x54]",
            "cmp r1, r7",
            "subge r7, r7, 1",
            "strge r7, [sp, 0x68]",
            "movw r7, 0x1c38",
            "bl rsym.gdTell",
            "add r2, sp, 0x80",
            "str r0, [sp, 0x5c]",
            "str r2, [sp, 0x28]",
            "ldr r2, [sp, 0x68]",
            "ldr r3, [sp, 0x50]",
            "cmp r2, r3",
            "blt 0xc974",
            "ldr r3, [sp, 0x84]",
            "ldr ip, [sp, 0x50]",
            "ldr r2, [sp, 0x90]",
            "ldr lr, [sp, 0x54]",
            "ldr r0, [sp, 0x6c]",
            "mul ip, r3, ip",
            "add r1, ip, r3",
            "str ip, [sp, 0x4c]",
            "cmp r1, r2",
            "movge r1, r2",
            "cmp lr, r0",
            "str r1, [sp, 0x3c]",
            "blt 0xc930",
            "str r0, [sp, 0x48]",
            "ldr r1, [sp, 0x48]",
            "ldr r2, [sp, 0x78]",
            "mul r1, r3, r1",
            "str r1, [sp, 0x2c]",
            "ldr ip, [sp, 0x2c]",
            "ldr r1, [sp, 0x94]",
            "add r5, ip, r3",
            "cmp r5, r1",
            "movge r5, r1",
            "cmp r2, 4",
            "cmpne r2, 2",
            "moveq sl, 0",
            "movne sl, 1",
            "beq 0xc8d8",
            "ldr r2, [r6, r7]",
            "cmp r2, 0",
            "beq 0xc838",
            "mul r1, r3, r1",
            "ldr r2, [sp, 0x50]",
            "ldr r0, [sp, 0x4c]",
            "ldr lr, [sp, 0x3c]",
            "mul r1, r2, r1",
            "rsb r3, r0, lr",
            "ldr r0, [sp, 0x20]",
            "mla r1, r3, ip, r1",
            "ldr r3, [sp, 0x5c]",
            "add r1, r3, r1, lsl 2",
            "bl rsym.gdSeek",
            "cmp r0, 0",
            "beq 0xc86c",
            "ldr r3, [sp, 0x4c]",
            "ldr ip, [sp, 0x3c]",
            "cmp r3, ip",
            "bge 0xc780",
            "ldr lr, [sp, 0x34]",
            "ldr r0, [sp, 0x2c]",
            "ldr r1, [sp, 0x4c]",
            "rsb r3, lr, r3",
            "rsb r2, r8, r0",
            "lsl r3, r3, 2",
            "lsl r2, r2, 2",
            "str r1, [sp, 0x1c]",
            "str r3, [sp, 0x30]",
            "str r2, [sp, 0x40]",
            "ldr r3, [sp, 0x2c]",
            "cmp r3, r5",
            "bge 0xc75c",
            "ldr ip, [sp, 0x1c]",
            "mov sl, r3",
            "ldr sb, [sp, 0x40]",
            "mvn ip, ip",
            "lsr ip, ip, 0x1f",
            "str ip, [sp, 0x38]",
            "ldr r3, [sp, 0x78]",
            "cmp r3, 4",
            "cmpne r3, 2",
            "beq 0xc7c0",
            "ldr r3, [r6, r7]",
            "cmp r3, 0",
            "beq 0xc7a0",
            "ldr r0, [sp, 0x28]",
            "ldr r1, [sp, 0x20]",
            "bl rsym.gdGetInt",
            "cmp r0, 0",
            "beq 0xc7b8",
            "cmp r8, sl",
            "bgt 0xc74c",
            "ldr r3, [sp, 0x24]",
            "cmp r3, sl",
            "ble 0xc74c",
            "ldr r2, [sp, 0x94]",
            "mvn r3, sl",
            "lsr r3, r3, 0x1f",
            "cmp sl, r2",
            "movge r3, 0",
            "cmp r3, 0",
            "beq 0xc74c",
            "ldr ip, [sp, 0x34]",
            "ldr lr, [sp, 0x1c]",
            "cmp ip, lr",
            "bgt 0xc74c",
            "ldr r0, [sp, 0x44]",
            "cmp r0, lr",
            "ble 0xc74c",
            "ldr r3, [sp, 0x90]",
            "ldr r1, [sp, 0x38]",
            "cmp lr, r3",
            "movge r1, 0",
            "andlt r1, r1, 1",
            "cmp r1, 0",
            "beq 0xc74c",
            "ldr r3, [r6, r7]",
            "cmp r3, 0",
            "beq 0xc81c",
            "movw r2, 0x1c3c",
            "ldr ip, [sp, 0x30]",
            "ldr r3, [r6, r2]",
            "ldr r2, [sp, 0x80]",
            "ldr r3, [r3, ip]",
            "str r2, [r3, sb]",
            "add sl, sl, 1",
            "add sb, sb, 4",
            "cmp sl, r5",
            "blt 0xc690",
            "ldr r0, [sp, 0x1c]",
            "ldr r2, [sp, 0x3c]",
            "ldr r1, [sp, 0x30]",
            "add r0, r0, 1",
            "cmp r0, r2",
            "str r0, [sp, 0x1c]",
            "add r1, r1, 4",
            "str r1, [sp, 0x30]",
            "blt 0xc66c",
            "ldr lr, [sp, 0x48]",
            "ldr r0, [sp, 0x54]",
            "add lr, lr, 1",
            "cmp r0, lr",
            "str lr, [sp, 0x48]",
            "blt 0xc930",
            "ldr r3, [sp, 0x84]",
            "b 0xc5bc",
            "ldr r0, [sp, 0x20]",
            "str r3, [sp, 0x18]",
            "bl rsym.gdGetC",
            "ldr r3, [sp, 0x18]",
            "cmn r0, 1",
            "moveq r0, r3",
            "str r0, [sp, 0x80]",
            "b 0xc6c0",
            "ldr r3, [r6, r7]",
            "cmp r3, 0",
            "beq 0xc80c",
            "ldrb r1, [r4, fp]",
            "add r0, fp, 1",
            "add r2, r0, 1",
            "add r3, r2, 1",
            "str r1, [sp, 0x80]",
            "add fp, r3, 1",
            "ldrb r0, [r4, r0]",
            "add r1, r0, r1, lsl 8",
            "str r1, [sp, 0x80]",
            "ldrb r0, [r4, r2]",
            "add r1, r0, r1, lsl 8",
            "str r1, [sp, 0x80]",
            "ldrb r0, [r4, r3]",
            "add r1, r0, r1, lsl 8",
            "str r1, [sp, 0x80]",
            "b 0xc6c0",
            "ldrb r3, [r4, fp]",
            "add fp, fp, 1",
            "str r3, [sp, 0x80]",
            "b 0xc6c0",
            "ldr r2, [r6]",
            "rsb r3, r8, sl",
            "ldr lr, [sp, 0x30]",
            "ldr r1, [sp, 0x80]",
            "ldr r2, [r2, lr]",
            "strb r1, [r2, r3]",
            "b 0xc74c",
            "ldr r0, [sp, 0x50]",
            "mul r1, r3, r1",
            "ldr r2, [sp, 0x5c]",
            "ldr ip, [sp, 0x3c]",
            "ldr lr, [sp, 0x4c]",
            "mla r1, r0, r1, r2",
            "ldr r0, [sp, 0x20]",
            "rsb r3, lr, ip",
            "ldr ip, [sp, 0x2c]",
            "mla r1, r3, ip, r1",
            "bl rsym.gdSeek",
            "cmp r0, 0",
            "bne 0xc634",
            "ldr lr, [sp, 0x60]",
            "mov r1, 1",
            "ldr r3, [0x0000c9a8]",
            "mov r2, 0xb",
            "ldr r0, [0x0000c9ac]",
            "ldr r3, [lr, r3]",
            "add r0, lr, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, r6",
            "bl rsym.gdImageDestroy",
            "cmp r4, 0",
            "beq 0xc8a8",
            "mov r0, r4",
            "bl rsym.gdFree",
            "ldr ip, [sp, 0x58]",
            "cmp ip, 0",
            "beq 0xc8bc",
            "mov r0, ip",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x74]",
            "cmp r0, 0",
            "moveq r6, r0",
            "bne 0xc954",
            "mov r0, r6",
            "add sp, sp, 0x9c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [sp, 0x64]",
            "mov r3, r4",
            "ldr ip, [sp, 0x50]",
            "ldr lr, [sp, 0x48]",
            "str r2, [sp, 0x70]",
            "ldr r2, [sp, 0x8c]",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x58]",
            "mla r2, r2, ip, lr",
            "add ip, r0, r2, lsl 3",
            "ldr r0, [r0, r2, lsl 3]",
            "add r2, sp, 0x70",
            "ldr ip, [ip, 4]",
            "str r2, [sp]",
            "ldr r2, [sp, 0x20]",
            "str r2, [sp, 4]",
            "mov r2, ip",
            "bl fcn.0000bdb0",
            "cmp r0, 0",
            "beq 0xc960",
            "mov fp, sl",
            "b 0xc634",
            "ldr r1, [sp, 0x50]",
            "add r1, r1, 1",
            "str r1, [sp, 0x50]",
            "b 0xc574",
            "mov r0, sl",
            "mov r1, fp",
            "bl rsym.gdImageCreateTrueColor",
            "mov r6, r0",
            "b 0xc3e8",
            "mov r6, 0",
            "bl rsym.gdFree",
            "b 0xc8cc",
            "ldr r2, [sp, 0x60]",
            "ldr r0, [0x0000c9b0]",
            "add r0, r2, r0",
            "bl sym.imp.puts",
            "b 0xc890",
            "mov r0, r4",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x58]",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x74]",
            "bl rsym.gdFree",
            "b 0xc8cc",
            "str r4, [sp, 0x58]",
            "b 0xc890",
            "str r0, [sp, 0x58]",
            "mov r4, r0",
            "b 0xc890"
        ]
    },
    "fcn.0000bbc4": {
        "function_address": "0x0000bbc4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r0, [0x0000bda8]",
            "sub sp, sp, 0x14",
            "add r5, sp, 8",
            "mov r7, r1",
            "add r1, r5, 3",
            "ldr r6, [sp, 0x38]",
            "add r0, pc, r0",
            "ldr r8, [sp, 0x3c]",
            "mov sl, r2",
            "mov fp, r3",
            "sub sb, r5, 1",
            "stm sp, {r0, r1}",
            "mov r0, r4",
            "bl rsym.gdGetC",
            "cmn r0, 1",
            "beq 0xbd88",
            "ldr r2, [sp, 4]",
            "strb r0, [sb, 1]!",
            "cmp sb, r2",
            "bne 0xbbfc",
            "ldr r3, [sp]",
            "mov sb, 0",
            "ldr r1, [0x0000bdac]",
            "mov r0, r5",
            "strb sb, [sp, 0xc]",
            "add r1, r3, r1",
            "bl sym.imp.strcmp",
            "subs r5, r0, 0",
            "movne r0, sb",
            "beq 0xbc4c",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r6",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 1",
            "beq 0xbc68",
            "mov r0, r5",
            "b 0xbc44",
            "ldr r3, [r6]",
            "sub r3, r3, 1",
            "cmp r3, 1",
            "bhi 0xbc60",
            "mov r0, r7",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 0",
            "beq 0xbc44",
            "mov r0, sl",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 0",
            "beq 0xbc44",
            "mov r0, fp",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 1",
            "bne 0xbc60",
            "ldr r3, [fp]",
            "sub r3, r3, 0x40",
            "cmp r3, 0xfc0",
            "bhi 0xbc60",
            "mov r0, r8",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 1",
            "bne 0xbd88",
            "ldr r3, [r8]",
            "sub r3, r3, 1",
            "cmp r3, 3",
            "bhi 0xbd88",
            "ldr r0, [sp, 0x40]",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 1",
            "bne 0xbd88",
            "ldr r0, [sp, 0x44]",
            "mov r1, r4",
            "bl rsym.gdGetWord",
            "cmp r0, 1",
            "bne 0xbd88",
            "ldr r3, [r8]",
            "cmp r3, 2",
            "cmpne r3, 4",
            "bne 0xbc44",
            "ldr r1, [sp, 0x44]",
            "ldr r2, [sp, 0x40]",
            "ldr r3, [r1]",
            "mov r1, r0",
            "ldr r8, [r2]",
            "mul r8, r8, r3",
            "lsl r0, r8, 3",
            "bl rsym.gdCalloc",
            "subs r6, r0, 0",
            "movne r5, r6",
            "movne r7, sb",
            "beq 0xbd90",
            "cmp r7, r8",
            "mov r0, r5",
            "mov r1, r4",
            "add r7, r7, 1",
            "bge 0xbd98",
            "bl rsym.gdGetInt",
            "cmp r0, 1",
            "mov r1, r4",
            "add r0, r5, 4",
            "add r5, r5, 8",
            "bne 0xbd88",
            "bl rsym.gdGetInt",
            "cmp r0, 1",
            "beq 0xbd50",
            "mov r0, 0",
            "b 0xbc44",
            "mov r0, r6",
            "b 0xbc44",
            "ldr r3, [sp, 0x48]",
            "mov r0, 1",
            "str r6, [r3]",
            "b 0xbc44"
        ]
    },
    "rsym.gdImageCreate": {
        "function_address": "0x00003420",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe70]!"
        ]
    },
    "rsym._gdGetColors": {
        "function_address": "0x00003168",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x40]!"
        ]
    },
    "rsym.gdGetInt": {
        "function_address": "0x0000318c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x28]!"
        ]
    },
    "rsym.gdGetC": {
        "function_address": "0x000032ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf68]!"
        ]
    },
    "rsym.gdImageDestroy": {
        "function_address": "0x000031a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x18]!"
        ]
    },
    "fcn.0000bdb0": {
        "function_address": "0x0000bdb0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "ldr r4, [sp, 0x1c]",
            "mov r7, r1",
            "mov r5, r2",
            "mov r8, r3",
            "mov r0, r4",
            "bl rsym.gdTell",
            "cmp r0, r6",
            "beq 0xbde4",
            "mov r0, r4",
            "mov r1, r6",
            "bl rsym.gdSeek",
            "mov r0, r7",
            "mov r1, r5",
            "mov r2, r4",
            "bl rsym.gdGetBuf",
            "cmp r0, r5",
            "beq 0xbe04",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r8",
            "ldr r1, [sp, 0x18]",
            "mov r2, r7",
            "mov r3, r5",
            "bl sym.imp.uncompress",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym._gdImageFillTiled": {
        "function_address": "0x0000738c",
        "instructions": [
            "movw r3, 0x1020",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r3, [r0, r3]",
            "sub sp, sp, 0x34",
            "mov r4, r0",
            "mov r8, r1",
            "mov r7, r2",
            "cmp r3, 0",
            "beq 0x73cc",
            "ldr r5, [r0, 8]",
            "mov r0, 4",
            "ldr r6, [r4, 4]",
            "mov r1, r5",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "beq 0x73d4",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r4, 8]",
            "mov r1, 4",
            "lsl r0, r0, 2",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x73cc",
            "ldr r0, [r4, 4]",
            "mov r1, 4",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x73cc",
            "ldr r0, [r4, 8]",
            "ldr r1, [r4, 4]",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x73cc",
            "ldr r2, [r4, 8]",
            "mov r0, 0x10",
            "ldr r3, [r4, 4]",
            "mul r3, r2, r3",
            "cmp r3, 0",
            "add r2, r3, 3",
            "movlt r3, r2",
            "asr r1, r3, 2",
            "bl rsym.overflow2",
            "subs sl, r0, 0",
            "bne 0x73cc",
            "mov r1, r8",
            "mov r2, r7",
            "mov r0, r4",
            "bl fcn.00004a04",
            "ldr r0, [r4, 8]",
            "mov r1, 4",
            "lsl r0, r0, 2",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sp, 4]",
            "beq 0x73cc",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "ble 0x74cc",
            "mov sb, r0",
            "b 0x7490",
            "ldr r3, [r4, 8]",
            "add sl, sl, 1",
            "cmp r3, sl",
            "ble 0x74cc",
            "ldr r0, [r4, 4]",
            "mov r1, 4",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sb], 4",
            "bne 0x7480",
            "subs r4, sl, 1",
            "blo 0x73cc",
            "ldr r1, [sp, 4]",
            "add sl, r1, sl, lsl 2",
            "ldr r0, [sl, -4]!",
            "bl rsym.gdFree",
            "subs r4, r4, 1",
            "bpl 0x74b8",
            "b 0x73cc",
            "ldr r2, [r4, 4]",
            "mul r3, r2, r3",
            "cmp r3, 0",
            "add r2, r3, 3",
            "movlt r3, r2",
            "asr r0, r3, 2",
            "lsl r0, r0, 4",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "beq 0x73cc",
            "mov r2, r7",
            "mov r0, r4",
            "mov r1, r8",
            "bl rsym.gdImageGetPixel",
            "ldr r2, [sp, 0x10]",
            "ldr ip, [sp, 0x10]",
            "add r3, r2, 0xb700000",
            "cmn r7, 1",
            "movlt r2, 0",
            "movge r2, 1",
            "add r3, r3, 0x1b000",
            "str r3, [sp, 0x1c]",
            "cmp ip, r3",
            "movhs r3, 0",
            "movlo r3, 1",
            "tst r3, r2",
            "beq 0x790c",
            "add r3, r7, 1",
            "cmp r5, r3",
            "ldrle r3, [sp, 0x10]",
            "strle r3, [sp, 0xc]",
            "movle r3, 1",
            "ble 0x7580",
            "ldr r1, [sp, 0x1c]",
            "add lr, ip, 0x10",
            "mov r2, 1",
            "str lr, [sp, 0xc]",
            "str r7, [ip]",
            "cmp r1, lr",
            "movls r3, 0",
            "movhi r3, 1",
            "str r8, [ip, 4]",
            "str r8, [ip, 8]",
            "str r2, [ip, 0xc]",
            "cmp r7, 0",
            "movlt r3, 0",
            "andge r3, r3, 1",
            "cmp r3, 0",
            "beq 0x75bc",
            "cmp r5, r7",
            "ble 0x75bc",
            "ldr ip, [sp, 0xc]",
            "add r7, r7, 1",
            "mvn r3, 0",
            "stm ip, {r7, r8}",
            "str r8, [ip, 8]",
            "str r3, [ip, 0xc]",
            "add ip, ip, 0x10",
            "str ip, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x10]",
            "cmp r2, r3",
            "strhi r6, [sp, 8]",
            "movhi fp, r0",
            "strhi r5, [sp, 0x2c]",
            "bls 0x7920",
            "ldr r1, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "sub r1, r1, 0x10",
            "ldr sb, [r1, 4]",
            "ldr r3, [r1, 0xc]",
            "ldr r6, [r2, -0x10]",
            "ldr ip, [r1, 8]",
            "cmp sb, 0",
            "str r1, [sp]",
            "str r3, [sp, 0x14]",
            "add r6, r3, r6",
            "str ip, [sp, 0x20]",
            "blt 0x7964",
            "ldr lr, [sp, 4]",
            "lsl r1, r6, 2",
            "lsl sl, sb, 2",
            "ldr r3, [lr, r6, lsl 2]",
            "add r7, lr, r1",
            "str r1, [sp, 0x18]",
            "ldr r3, [r3, sb, lsl 2]",
            "cmp r3, 0",
            "bne 0x7964",
            "sub r2, sb, 1",
            "mov r5, sb",
            "str r2, [sp, 0x24]",
            "lsl r8, r2, 2",
            "b 0x769c",
            "ldr r3, [r7]",
            "ldr r3, [r3, sl]",
            "cmp r3, 0",
            "bne 0x76c0",
            "bl fcn.00004a04",
            "ldr ip, [r7]",
            "mov lr, 1",
            "mov r3, r0",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "str lr, [ip, sl]",
            "mov sl, r8",
            "bl rsym.gdImageSetPixel",
            "subs r5, r5, 1",
            "sub r2, r8, 4",
            "bmi 0x7894",
            "ldr r3, [r7]",
            "ldr r3, [r3, r8]",
            "mov r8, r2",
            "cmp r3, 0",
            "bne 0x76c0",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, fp",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "beq 0x7644",
            "cmp sb, r5",
            "addle r8, r5, 1",
            "bgt 0x7894",
            "ldr r2, [sp, 0x20]",
            "mov r5, r8",
            "cmp r2, r8",
            "blt 0x78f0",
            "ldr r1, [sp, 4]",
            "lsl lr, r6, 2",
            "lsl r7, r8, 2",
            "ldr sl, [sp, 0x20]",
            "str lr, [sp, 0x18]",
            "add r8, r1, lr",
            "b 0x7704",
            "add r5, r5, 1",
            "cmp sl, r5",
            "blt 0x78f0",
            "ldr r3, [r8]",
            "ldr r3, [r3, r7]",
            "add r7, r7, 4",
            "cmp r3, 0",
            "bne 0x76f8",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, r6",
            "bl rsym.gdImageGetPixel",
            "cmp r0, fp",
            "bne 0x76f8",
            "str r5, [sp, 0x28]",
            "ldr r1, [sp, 8]",
            "cmp r1, r5",
            "ble 0x796c",
            "ldr ip, [sp, 4]",
            "lsl sb, r5, 2",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [ip, r2]",
            "add r7, ip, r2",
            "ldr r3, [r3, r5, lsl 2]",
            "cmp r3, 0",
            "addeq r8, r5, 1",
            "lsleq sl, r8, 2",
            "beq 0x77d0",
            "b 0x796c",
            "ldr r3, [r7]",
            "ldr r3, [r3, sb]",
            "cmp r3, 0",
            "bne 0x77f4",
            "bl fcn.00004a04",
            "ldr ip, [r7]",
            "mov lr, 1",
            "mov r1, r5",
            "mov r3, r0",
            "mov r2, r6",
            "mov r0, r4",
            "str lr, [ip, sb]",
            "mov r5, r8",
            "bl rsym.gdImageSetPixel",
            "ldr r1, [sp, 8]",
            "mov sb, sl",
            "add r2, sl, 4",
            "cmp r1, r8",
            "ble 0x7918",
            "ldr r3, [r7]",
            "ldr r3, [r3, sl]",
            "mov sl, r2",
            "cmp r3, 0",
            "bne 0x7918",
            "add r8, r8, 1",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "cmp r0, fp",
            "mov r1, r5",
            "mov r2, r6",
            "mov r0, r4",
            "beq 0x776c",
            "ldr r2, [sp, 0x1c]",
            "ldr r3, [sp]",
            "cmp r2, r3",
            "bls 0x7838",
            "ldr ip, [sp, 0x14]",
            "adds r3, r6, ip",
            "bmi 0x7838",
            "ldr lr, [sp, 0x2c]",
            "cmp lr, r3",
            "ble 0x7838",
            "ldr r1, [sp]",
            "sub r3, r5, 1",
            "ldr r2, [sp, 0x28]",
            "str r6, [r1]",
            "stmib r1, {r2, r3, ip}",
            "add r1, r1, 0x10",
            "str r1, [sp]",
            "ldr ip, [sp, 0x20]",
            "add r3, ip, 1",
            "cmp r5, r3",
            "ble 0x76cc",
            "ldr lr, [sp]",
            "ldr r1, [sp, 0x1c]",
            "cmp lr, r1",
            "bhs 0x76cc",
            "ldr ip, [sp, 0x14]",
            "subs r2, r6, ip",
            "bmi 0x76cc",
            "ldr lr, [sp, 0x2c]",
            "cmp lr, r2",
            "ble 0x76cc",
            "ldr r1, [sp]",
            "sub r5, r5, 1",
            "rsb r2, ip, 0",
            "str r6, [r1]",
            "stmib r1, {r3, r5}",
            "str r2, [r1, 0xc]",
            "add r1, r1, 0x10",
            "str r1, [sp]",
            "b 0x76cc",
            "add r5, r5, 1",
            "cmp sb, r5",
            "str r5, [sp, 0x28]",
            "ble 0x78e8",
            "ldr r1, [sp, 0x1c]",
            "ldr r2, [sp]",
            "cmp r1, r2",
            "bls 0x78e8",
            "ldr ip, [sp, 0x14]",
            "subs r3, r6, ip",
            "bmi 0x78e8",
            "ldr lr, [sp, 0x2c]",
            "cmp lr, r3",
            "ble 0x78e8",
            "rsb r3, ip, 0",
            "ldr lr, [sp, 0xc]",
            "ldr ip, [sp, 0x24]",
            "str r6, [r2]",
            "stmib r2, {r5, ip}",
            "str r3, [r2, 0xc]",
            "str lr, [sp]",
            "add r5, sb, 1",
            "b 0x7734",
            "ldr r3, [sp]",
            "ldr ip, [sp, 0x10]",
            "cmp r3, ip",
            "bls 0x7920",
            "ldr lr, [sp]",
            "str lr, [sp, 0xc]",
            "b 0x75d8",
            "ldr r2, [sp, 0x10]",
            "str r2, [sp, 0xc]",
            "b 0x7580",
            "add r8, r8, 1",
            "b 0x77f4",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "ble 0x794c",
            "ldr r6, [sp, 4]",
            "mov r5, 0",
            "ldr r0, [r6], 4",
            "add r5, r5, 1",
            "bl rsym.gdFree",
            "ldr r3, [r4, 8]",
            "cmp r3, r5",
            "bgt 0x7934",
            "ldr r0, [sp, 4]",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x10]",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdFree",
            "add r8, sb, 1",
            "b 0x76cc",
            "add r8, r5, 1",
            "b 0x77f4"
        ]
    },
    "fcn.00004a04": {
        "function_address": "0x00004a04",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "movw r6, 0x1020",
            "ldr r4, [r0, r6]",
            "mov r5, r0",
            "sub sp, sp, 8",
            "mov r0, r1",
            "mov r7, r2",
            "cmp r4, 0",
            "mvneq r0, 0",
            "beq 0x4abc",
            "ldr r1, [r4, 4]",
            "bl fcn.00013e7c",
            "mov r0, r7",
            "mov r8, r1",
            "ldr r1, [r4, 8]",
            "bl fcn.00013e7c",
            "mov r0, r4",
            "mov r2, r1",
            "mov r1, r8",
            "bl rsym.gdImageGetPixel",
            "ldr ip, [r5, r6]",
            "movw r2, 0x1010",
            "mov r3, r0",
            "ldr r1, [ip, r2]",
            "cmp r1, r0",
            "ldreq r0, [r5, r2]",
            "beq 0x4abc",
            "movw r2, 0x1c38",
            "ldr r1, [r5, r2]",
            "cmp r1, 0",
            "bne 0x4ac4",
            "ldr r2, [ip, r2]",
            "cmp r2, 0",
            "bne 0x4b0c",
            "add lr, r3, 0x600",
            "add r1, r3, 4",
            "add r2, r3, 0x104",
            "add r4, r3, 0x204",
            "add lr, lr, 0xe",
            "ldr r1, [ip, r1, lsl 2]",
            "ldr r2, [ip, r2, lsl 2]",
            "mov r0, r5",
            "ldr r3, [ip, r4, lsl 2]",
            "ldr ip, [ip, lr, lsl 2]",
            "str ip, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r2, [ip, r2]",
            "cmp r2, 0",
            "movne r0, r3",
            "bne 0x4abc",
            "add r1, r3, 4",
            "add r2, r3, 0x600",
            "ldr r0, [ip, r1, lsl 2]",
            "add r2, r2, 0xe",
            "ldr r1, [ip, r2, lsl 2]",
            "add r2, r3, 0x204",
            "add r3, r3, 0x104",
            "ldr r2, [ip, r2, lsl 2]",
            "ldr r3, [ip, r3, lsl 2]",
            "lsl r0, r0, 0x10",
            "add r0, r0, r1, lsl 24",
            "add r0, r0, r2",
            "add r0, r0, r3, lsl 8",
            "b 0x4abc",
            "ubfx ip, r3, 0x18, 7",
            "ubfx r1, r3, 0x10, 8",
            "ubfx r2, r3, 8, 8",
            "mov r0, r5",
            "uxtb r3, r3",
            "str ip, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "b 0x4abc"
        ]
    },
    "sym.gdImageCreateFromGd2PartPtr": {
        "function_address": "0x0000c9b4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r2",
            "sub sp, sp, 8",
            "mov r2, 0",
            "mov r6, r3",
            "bl rsym.gdNewDynamicCtxEx",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0xca00",
            "ldr ip, [sp, 0x1c]",
            "mov r1, r5",
            "ldr r3, [sp, 0x18]",
            "mov r2, r6",
            "str ip, [sp]",
            "bl rsym.gdImageCreateFromGd2PartCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "rsym.gdImageCreateFromGd2PartCtx": {
        "function_address": "0x000030cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xa8]!"
        ]
    },
    "sym.gdImagePolygon": {
        "function_address": "0x000092b4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "subs r6, r2, 0",
            "sub sp, sp, 0xc",
            "mov r7, r0",
            "mov r4, r1",
            "mov r5, r3",
            "bne 0x92d8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "sub r3, r6, 1",
            "ldr r2, [r4, 4]",
            "add ip, r4, r3, lsl 3",
            "ldr r1, [r1]",
            "ldr r3, [r4, r3, lsl 3]",
            "ldr ip, [ip, 4]",
            "str r5, [sp, 4]",
            "str ip, [sp]",
            "bl rsym.gdImageLine",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, r6",
            "mov r3, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b rsym.gdImageOpenPolygon"
        ]
    },
    "rsym.gdImageLine": {
        "function_address": "0x000032d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf50]!"
        ]
    },
    "sym.gdImageCopyMerge": {
        "function_address": "0x00006cf4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldr ip, [sp, 0x6c]",
            "mov r7, r0",
            "mov r5, r1",
            "str r2, [sp, 0x3c]",
            "ldr r2, [sp, 0x74]",
            "add r2, r2, ip",
            "cmp ip, r2",
            "str r2, [sp, 0x38]",
            "bge 0x6fc4",
            "ldr r2, [sp, 0x70]",
            "ldr r1, [sp, 0x68]",
            "str r3, [sp, 0x28]",
            "str ip, [sp, 0x2c]",
            "add r2, r2, r1",
            "str r2, [sp, 0x30]",
            "ldr r2, [sp, 0x78]",
            "rsb r2, r2, 0x64",
            "str r2, [sp, 0x34]",
            "ldr r3, [sp, 0x30]",
            "ldr r1, [sp, 0x68]",
            "cmp r3, r1",
            "ble 0x6fa0",
            "ldr r2, [sp, 0x3c]",
            "mov r4, r1",
            "add r8, r2, 1",
            "b 0x6ed4",
            "ubfx r0, r6, 0x10, 8",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "ldr r0, [sp, 0x78]",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4059",
            "bl fcn.000144c0",
            "strd r0, r1, [sp]",
            "ldrd r2, r3, [sp]",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00014254",
            "movw r3, 0x1c38",
            "strd r0, r1, [sp, 0x18]",
            "ldr fp, [r7, r3]",
            "cmp fp, 0",
            "beq 0x6f78",
            "ldr r1, [sp, 0x24]",
            "ubfx r0, r1, 0x10, 8",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [sp, 0x34]",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4059",
            "bl fcn.000144c0",
            "strd r0, r1, [sp, 8]",
            "ldrd r2, r3, [sp, 8]",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "cmp sb, 0",
            "str r0, [sp, 0x18]",
            "beq 0x6f90",
            "ubfx r0, r6, 8, 8",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp]",
            "bl fcn.00014254",
            "cmp fp, 0",
            "strd r0, r1, [sp, 0x10]",
            "beq 0x6f64",
            "ldr r3, [sp, 0x24]",
            "ubfx r0, r3, 8, 8",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "cmp sb, 0",
            "str r0, [sp, 0x10]",
            "beq 0x6f54",
            "uxtb r0, r6",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp]",
            "bl fcn.00014254",
            "cmp fp, 0",
            "strd r0, r1, [sp]",
            "beq 0x6f40",
            "ldr r2, [sp, 0x24]",
            "uxtb r0, r2",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "ldr r1, [sp, 0x18]",
            "mov r3, r0",
            "ldr r2, [sp, 0x10]",
            "mov r0, r7",
            "bl rsym.gdImageColorResolve",
            "mov r3, r0",
            "mov r0, r7",
            "mov r1, sl",
            "ldr r2, [sp, 0x28]",
            "bl rsym.gdImageSetPixel",
            "ldr r2, [sp, 0x30]",
            "add r4, r4, 1",
            "add r8, r8, 1",
            "cmp r2, r4",
            "ble 0x6fa0",
            "mov r1, r4",
            "mov r0, r5",
            "ldr r2, [sp, 0x2c]",
            "sub sl, r8, 1",
            "bl rsym.gdImageGetPixel",
            "movw r1, 0x1010",
            "mov r6, r0",
            "ldr r3, [r5, r1]",
            "cmp r3, r0",
            "beq 0x6ec0",
            "cmp r7, r5",
            "moveq r3, r0",
            "beq 0x6eb0",
            "ldr r2, [sp, 0x28]",
            "mov r0, r7",
            "mov r1, sl",
            "bl rsym.gdImageGetPixel",
            "movw r2, 0x1c38",
            "str r0, [sp, 0x24]",
            "ldr sb, [r5, r2]",
            "cmp sb, 0",
            "bne 0x6d64",
            "add r3, r6, 4",
            "ldr r0, [r5, r3, lsl 2]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "b 0x6d70",
            "ldr r1, [sp, 0x24]",
            "add r3, r1, 0x204",
            "ldr r0, [r7, r3, lsl 2]",
            "bl fcn.00014178",
            "b 0x6e7c",
            "add r6, r6, 0x204",
            "ldr r0, [r5, r6, lsl 2]",
            "bl fcn.00014178",
            "b 0x6e5c",
            "ldr r1, [sp, 0x24]",
            "add r3, r1, 0x104",
            "ldr r0, [r7, r3, lsl 2]",
            "bl fcn.00014178",
            "b 0x6e2c",
            "ldr r2, [sp, 0x24]",
            "add r3, r2, 4",
            "ldr r0, [r7, r3, lsl 2]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "b 0x6dbc",
            "add r3, r6, 0x104",
            "ldr r0, [r5, r3, lsl 2]",
            "bl fcn.00014178",
            "b 0x6e0c",
            "ldr r3, [sp, 0x2c]",
            "ldr r1, [sp, 0x38]",
            "add r3, r3, 1",
            "cmp r3, r1",
            "str r3, [sp, 0x2c]",
            "ldrlt r2, [sp, 0x28]",
            "addlt r2, r2, 1",
            "strlt r2, [sp, 0x28]",
            "blt 0x6d44",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.gdImageColorResolve": {
        "function_address": "0x00003030",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x110]!"
        ]
    },
    "sym.gdImageCreatePaletteFromTrueColor": {
        "function_address": "0x000126fc",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 0xc",
            "add r3, sp, 4",
            "bl fcn.00011870",
            "ldr r0, [sp, 4]",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00011870": {
        "function_address": "0x00011870",
        "instructions": [
            "cmp r3, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x7c",
            "mov sb, r2",
            "str r3, [sp, 0x4c]",
            "str r0, [sp, 0x28]",
            "str r1, [sp, 0x48]",
            "beq 0x11a54",
            "ldr r2, [sp, 0x28]",
            "ldr r0, [r0, 4]",
            "ldr r1, [r2, 8]",
            "bl rsym.gdImageCreate",
            "ldr r3, [sp, 0x4c]",
            "cmp r0, 0",
            "str r0, [sp, 0x14]",
            "str r0, [r3]",
            "beq 0x11a4c",
            "ldr r5, [sp, 0x28]",
            "movw r3, 0x1c38",
            "ldr ip, [r5, r3]",
            "cmp ip, 0",
            "beq 0x11a0c",
            "ldr fp, [sp, 0x28]",
            "movw r3, 0x1010",
            "ldr ip, [sp, 0x4c]",
            "ldr r3, [fp, r3]",
            "cmp r3, 0",
            "movge r3, 0xff",
            "movlt r3, 0x100",
            "cmp ip, 0",
            "str r3, [sp, 0x10]",
            "beq 0x12104",
            "mov r0, 0x14",
            "mov r1, 1",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x34]",
            "beq 0x11960",
            "ldr r1, [sp, 0x34]",
            "mov r3, 0",
            "mov r0, 0x80",
            "mov r4, r3",
            "str r3, [r1, 4]",
            "str r3, [r1, 0xc]",
            "bl rsym.gdMalloc",
            "ldr r2, [sp, 0x34]",
            "mov r5, r0",
            "str r0, [r2]",
            "mov r6, r2",
            "b 0x11940",
            "cmp r4, 0x80",
            "beq 0x11acc",
            "mov r0, 0x1000",
            "bl rsym.gdMalloc",
            "str r0, [r5, r4]",
            "ldr r5, [r6]",
            "ldr r3, [r5, r4]",
            "add r4, r4, 4",
            "cmp r3, 0",
            "bne 0x11938",
            "ldr ip, [sp, 0x28]",
            "movw r3, 0x1c38",
            "ldr r3, [ip, r3]",
            "cmp r3, 0",
            "beq 0x11994",
            "ldr r0, [sp, 0x4c]",
            "cmp r0, 0",
            "beq 0x11a60",
            "ldr r0, [sp, 0x14]",
            "bl rsym.gdImageDestroy",
            "ldr r6, [sp, 0x4c]",
            "mov r3, 0",
            "str r3, [r6]",
            "ldr r8, [sp, 0x34]",
            "mov r4, 0",
            "ldr r2, [r8]",
            "mov r5, r8",
            "ldr r3, [r2, r4]",
            "add r4, r4, 4",
            "subs r0, r3, 0",
            "beq 0x119bc",
            "bl rsym.gdFree",
            "ldr r2, [r5]",
            "cmp r4, 0x80",
            "bne 0x119a4",
            "cmp r2, 0",
            "beq 0x119d4",
            "mov r0, r2",
            "bl rsym.gdFree",
            "ldr sb, [sp, 0x34]",
            "ldr r0, [sb, 4]",
            "cmp r0, 0",
            "beq 0x119e8",
            "bl rsym.gdFree",
            "ldr fp, [sp, 0x34]",
            "ldr r0, [fp, 0x10]",
            "cmp r0, 0",
            "beq 0x119fc",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x34]",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdFree",
            "ldr r6, [sp, 0x4c]",
            "cmp r6, 0",
            "beq 0x11a4c",
            "ldr r4, [r5, 4]",
            "mov r2, ip",
            "ldr lr, [r5, 8]",
            "mov r1, r5",
            "ldr r0, [sp, 0x14]",
            "mov r3, ip",
            "str ip, [sp]",
            "str ip, [sp, 4]",
            "str r4, [sp, 8]",
            "str lr, [sp, 0xc]",
            "bl rsym.gdImageCopy",
            "ldr r8, [sp, 0x14]",
            "str r8, [r6]",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r4, [sp, 0x28]",
            "str r4, [sp, 0x14]",
            "b 0x118b4",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [r1, 8]",
            "cmp r2, 0",
            "movle r2, r1",
            "ldrle r3, [r2]",
            "ble 0x11aac",
            "ldr r4, [sp, 0x14]",
            "ldr r5, [sp, 0x14]",
            "ldr r3, [r4]",
            "ldr r4, [sp, 0x4c]",
            "ldr r1, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "subs r0, r1, 0",
            "beq 0x11aa4",
            "bl rsym.gdFree",
            "ldr r2, [r5, 8]",
            "ldr r3, [r5]",
            "cmp r2, r4",
            "bgt 0x11a88",
            "cmp r3, 0",
            "beq 0x11abc",
            "mov r0, r3",
            "bl rsym.gdFree",
            "ldr r5, [sp, 0x14]",
            "mov r3, 0",
            "str r3, [r5]",
            "b 0x11994",
            "mov r0, 6",
            "bl rsym.gdMalloc",
            "ldr r3, [sp, 0x34]",
            "str r0, [r3, 4]",
            "movw r0, 0x7fc",
            "bl rsym.gdMalloc",
            "ldr r4, [sp, 0x34]",
            "cmp r0, 0",
            "str r0, [r4, 0x10]",
            "beq 0x11b74",
            "add r1, r0, 0x3f8",
            "add r2, r0, 0x400",
            "mov r3, 0",
            "add ip, r0, 0x3fc",
            "str ip, [r4, 0xc]",
            "str r3, [r1, 4]!",
            "rsb ip, r3, 0",
            "add r3, r3, 1",
            "str ip, [r2, -4]!",
            "cmp r3, 0x10",
            "bne 0x11b08",
            "add r1, r0, 0x430",
            "add ip, r0, 0x3c0",
            "add r1, r1, 8",
            "mov r2, r3",
            "add r3, r3, 1",
            "rsb r4, r2, 0",
            "and lr, r3, 1",
            "cmp r3, 0x30",
            "eor lr, lr, 1",
            "str r2, [r1, 4]!",
            "str r4, [ip, -4]!",
            "add r2, r2, lr",
            "bne 0x11b30",
            "add r1, r0, 0x4b0",
            "rsb ip, r2, 0",
            "add r1, r1, 8",
            "add r3, r0, 0x340",
            "str r2, [r1, 4]!",
            "str ip, [r3, -4]!",
            "cmp r3, r0",
            "bne 0x11b64",
            "ldr r5, [sp, 0x14]",
            "mov r4, 6",
            "ldr r6, [sp, 0x34]",
            "ldr r3, [r5, 4]",
            "ldr r0, [r6, 4]",
            "add r3, r3, 2",
            "mul r4, r4, r3",
            "mov r1, r4",
            "bl rsym.gdRealloc",
            "cmp r0, 0",
            "str r0, [r6, 4]",
            "beq 0x11960",
            "mov r1, 0",
            "mov r2, r4",
            "mov r6, r1",
            "bl sym.imp.memset",
            "ldr r8, [sp, 0x34]",
            "str r6, [r8, 8]",
            "ldr r0, [r8]",
            "bl fcn.00010f20",
            "ldr fp, [sp, 0x28]",
            "ldr r5, [r8]",
            "ldmib fp, {r8, sl}",
            "cmp sl, r6",
            "ble 0x11c54",
            "movw r3, 0x1c3c",
            "ldr r7, [fp, r3]",
            "movw fp, 0x1010",
            "cmp r8, 0",
            "ldr lr, [r7], 4",
            "ble 0x11c48",
            "ldr ip, [sp, 0x28]",
            "mov r2, r8",
            "ldr r4, [ip, fp]",
            "cmp r4, 0",
            "ldr r3, [lr], 4",
            "blt 0x11c10",
            "cmp r3, r4",
            "beq 0x11c40",
            "ubfx r0, r3, 0xa, 6",
            "ubfx r1, r3, 3, 5",
            "add r1, r1, r0, lsl 5",
            "ubfx r3, r3, 0x13, 5",
            "ldr r0, [r5, r3, lsl 2]",
            "lsl r1, r1, 1",
            "ldrh r3, [r0, r1]",
            "add ip, r3, 1",
            "uxth ip, ip",
            "cmp ip, 0",
            "movne r3, ip",
            "strh r3, [r0, r1]",
            "subs r2, r2, 1",
            "bne 0x11bfc",
            "add r6, r6, 1",
            "cmp r6, sl",
            "bne 0x11be4",
            "ldr r5, [sp, 0x10]",
            "mov r1, 0x20",
            "cmp r5, sb",
            "movge r5, sb",
            "mov r0, r5",
            "bl rsym.overflow2",
            "subs r4, r0, 0",
            "beq 0x122a0",
            "ldr r8, [sp, 0x34]",
            "ldr r0, [r8]",
            "bl fcn.00010f20",
            "ldr sb, [sp, 0x48]",
            "cmp sb, 0",
            "beq 0x1218c",
            "ldr fp, [sp, 0x28]",
            "ldr r0, [sp, 0x28]",
            "ldr ip, [r8]",
            "ldr fp, [fp, 8]",
            "ldr r0, [r0, 4]",
            "ldr r1, [r8, 0xc]",
            "cmp fp, 0",
            "str fp, [sp, 0x64]",
            "str ip, [sp, 0x50]",
            "str r0, [sp, 0x60]",
            "str r1, [sp, 0x10]",
            "ble 0x12084",
            "sub r2, r0, 1",
            "add r3, r0, 1",
            "str r2, [sp, 0x6c]",
            "mov r2, 0xc",
            "ldr r4, [sp, 0x6c]",
            "mov r5, 0",
            "str r5, [sp, 0x5c]",
            "mul r2, r2, r4",
            "str r2, [sp, 0x70]",
            "mov r2, 6",
            "mul r2, r2, r3",
            "str r2, [sp, 0x74]",
            "ldr r8, [sp, 0x28]",
            "movw r3, 0x1c3c",
            "ldr sb, [sp, 0x14]",
            "ldr r6, [sp, 0x34]",
            "ldr r2, [r8, r3]",
            "ldr fp, [sp, 0x5c]",
            "ldr r3, [sb]",
            "ldr r1, [r6, 8]",
            "ldr r7, [r2, fp, lsl 2]",
            "ldr r3, [r3, fp, lsl 2]",
            "cmp r1, 0",
            "str r3, [sp, 0x1c]",
            "beq 0x120ec",
            "ldr r0, [sp, 0x6c]",
            "mvn r1, 2",
            "ldr r4, [r6, 4]",
            "mvn r2, 0",
            "ldr ip, [sp, 0x70]",
            "add r3, r3, r0",
            "str r2, [sp, 0x68]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [sp, 0x74]",
            "add r7, r7, ip",
            "add r4, r4, r3",
            "ldr r8, [sp, 0x60]",
            "cmp r8, 0",
            "ble 0x12178",
            "ldr fp, [sp, 0x68]",
            "add r2, r1, 1",
            "add r3, r1, 2",
            "lsl r2, r2, 1",
            "lsl r1, r1, 1",
            "lsl r3, r3, 1",
            "str r2, [sp, 0x54]",
            "lsl fp, fp, 2",
            "mov sb, 0",
            "str r1, [sp, 0x30]",
            "mov sl, r8",
            "str r3, [sp, 0x58]",
            "mov r2, sb",
            "str sb, [sp, 0x18]",
            "mov r3, sb",
            "str fp, [sp, 0x48]",
            "mov r1, sb",
            "str sb, [sp, 0x2c]",
            "str sb, [sp, 0x38]",
            "str sb, [sp, 0x20]",
            "str sb, [sp, 0x3c]",
            "str sb, [sp, 0x24]",
            "b 0x11f88",
            "ldr ip, [r7]",
            "cmp r0, ip",
            "beq 0x1200c",
            "ldr r5, [sp, 0x30]",
            "add r1, r1, 8",
            "ldr r8, [sp, 0x58]",
            "add r3, r3, 8",
            "ldr sb, [sp, 0x54]",
            "add r2, r2, 8",
            "ldrsh r6, [r4, r5]",
            "ldrsh r5, [r4, r8]",
            "ubfx r8, ip, 0x10, 8",
            "ldrsh r0, [r4, sb]",
            "ldr fp, [sp, 0x10]",
            "add r6, r1, r6",
            "add r3, r3, r5",
            "asr r6, r6, 4",
            "add r2, r2, r0",
            "asr r1, r3, 4",
            "asr r2, r2, 4",
            "ldr r3, [fp, r6, lsl 2]",
            "ldr r5, [fp, r1, lsl 2]",
            "ubfx r6, ip, 8, 8",
            "ldr r0, [sp, 0x30]",
            "ldr r2, [fp, r2, lsl 2]",
            "adds r8, r8, r3",
            "add r0, r4, r0",
            "uxtab r5, r5, ip",
            "str r0, [sp, 0x40]",
            "add r6, r6, r2",
            "bmi 0x11ffc",
            "cmp r8, 0xff",
            "movgt r0, 0x7c",
            "movgt r2, 0x1f",
            "movgt r8, 0xff",
            "ble 0x12000",
            "cmp r6, 0",
            "blt 0x11fec",
            "cmp r6, 0xff",
            "movgt ip, 0x7e0",
            "movgt r3, 0x3f",
            "movgt r6, 0xff",
            "ble 0x11ff0",
            "cmp r5, 0",
            "blt 0x11fa4",
            "cmp r5, 0xff",
            "movgt r1, 0x1f",
            "movgt r5, 0xff",
            "strgt r1, [sp, 0x44]",
            "ble 0x11fa8",
            "ldr fp, [sp, 0x50]",
            "add r1, r1, ip",
            "ldr sb, [fp, r0]",
            "lsl fp, r1, 1",
            "ldrh r1, [sb, fp]",
            "cmp r1, 0",
            "beq 0x11fcc",
            "ldr fp, [sp, 0x1c]",
            "sub r3, r1, 1",
            "ldr sb, [sp, 0x68]",
            "add r0, r3, 0x204",
            "add r2, r3, 0x104",
            "add r1, r1, 3",
            "sub sl, sl, 1",
            "strb r3, [fp], sb",
            "cmp sl, 0",
            "ldr r3, [sp, 0x14]",
            "str fp, [sp, 0x1c]",
            "ldr fp, [sp, 0x24]",
            "ldr r1, [r3, r1, lsl 2]",
            "ldr r2, [r3, r2, lsl 2]",
            "ldr ip, [sp, 0x48]",
            "rsb r8, r1, r8",
            "ldr r3, [r3, r0, lsl 2]",
            "lsl r1, r8, 1",
            "rsb r6, r2, r6",
            "lsl r2, r6, 1",
            "add r7, r7, ip",
            "add sb, r1, r8",
            "add fp, sb, fp",
            "add ip, r2, r6",
            "str fp, [sp, 0x24]",
            "rsb r5, r3, r5",
            "ldr fp, [sp, 0x20]",
            "lsl r3, r5, 1",
            "add sb, sb, r1",
            "add r0, r3, r5",
            "add r1, sb, r1",
            "add fp, ip, fp",
            "add ip, ip, r2",
            "str fp, [sp, 0x20]",
            "add r2, ip, r2",
            "ldr fp, [sp, 0x2c]",
            "add fp, r0, fp",
            "add r0, r0, r3",
            "str fp, [sp, 0x2c]",
            "add r3, r0, r3",
            "ldr fp, [sp, 0x24]",
            "strh fp, [r4]",
            "ldr fp, [sp, 0x3c]",
            "add fp, sb, fp",
            "str fp, [sp, 0x24]",
            "ldr fp, [sp, 0x20]",
            "strh fp, [r4, 2]",
            "ldr fp, [sp, 0x38]",
            "add fp, ip, fp",
            "str fp, [sp, 0x20]",
            "ldr fp, [sp, 0x2c]",
            "strh fp, [r4, 4]",
            "ldr r4, [sp, 0x18]",
            "str r6, [sp, 0x38]",
            "str r5, [sp, 0x18]",
            "add r4, r0, r4",
            "str r8, [sp, 0x3c]",
            "str r4, [sp, 0x2c]",
            "ldr r4, [sp, 0x40]",
            "ble 0x12054",
            "ldr r5, [sp, 0x28]",
            "movw ip, 0x1010",
            "ldr r0, [r5, ip]",
            "cmp r0, 0",
            "bge 0x11db4",
            "ldr ip, [r7]",
            "b 0x11dc0",
            "mov r5, 0",
            "ldr fp, [sp, 0x50]",
            "asr r1, r5, 3",
            "str r1, [sp, 0x44]",
            "add r1, r1, ip",
            "ldr sb, [fp, r0]",
            "lsl fp, r1, 1",
            "ldrh r1, [sb, fp]",
            "cmp r1, 0",
            "bne 0x11e98",
            "ldr ip, [sp, 0x34]",
            "ldr lr, [sp, 0x44]",
            "ldr r0, [sp, 0x14]",
            "ldr r1, [ip]",
            "str lr, [sp]",
            "bl fcn.000113dc",
            "ldrh r1, [sb, fp]",
            "b 0x11e98",
            "mov r6, 0",
            "asr r3, r6, 2",
            "lsl ip, r3, 5",
            "b 0x11e60",
            "mov r8, 0",
            "asr r2, r8, 3",
            "lsl r0, r2, 2",
            "b 0x11e44",
            "ldr r6, [sp, 0x14]",
            "sub sl, sl, 1",
            "ldr fp, [sp, 0x1c]",
            "cmp sl, 0",
            "ldr sb, [sp, 0x68]",
            "mov ip, 0",
            "ldr r0, [r6, 0xc]",
            "ldr r8, [sp, 0x48]",
            "strb r0, [fp], sb",
            "ldr r0, [sp, 0x30]",
            "add r7, r7, r8",
            "str fp, [sp, 0x1c]",
            "strh ip, [r4]",
            "strh ip, [r4, 2]",
            "strh ip, [r4, 4]",
            "strh ip, [r4, 6]",
            "add r4, r4, r0",
            "bgt 0x11f88",
            "ldr r6, [sp, 0x5c]",
            "ldr sb, [sp, 0x64]",
            "ldr r8, [sp, 0x24]",
            "add r6, r6, 1",
            "ldr fp, [sp, 0x20]",
            "ldr ip, [sp, 0x2c]",
            "cmp sb, r6",
            "str r6, [sp, 0x5c]",
            "strh r8, [r4]",
            "strh fp, [r4, 2]",
            "strh ip, [r4, 4]",
            "bgt 0x11cec",
            "ldr r4, [sp, 0x28]",
            "movw r3, 0x1010",
            "ldr r6, [sp, 0x4c]",
            "ldr r2, [r4, r3]",
            "cmp r2, 0",
            "ldrge r5, [sp, 0x14]",
            "ldrge r2, [r5, 0xc]",
            "addge r1, r2, 1",
            "strge r2, [r5, r3]",
            "strge r1, [r5, 0xc]",
            "cmp r6, 0",
            "bne 0x11994",
            "ldr r8, [sp, 0x28]",
            "movw r3, 0x1c38",
            "mov r4, r6",
            "movw r5, 0x1c3c",
            "str r6, [r8, r3]",
            "mov r6, r8",
            "ldr r3, [r6, 8]",
            "cmp r4, r3",
            "bge 0x126e0",
            "ldr r3, [r6, r5]",
            "ldr r0, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "bl rsym.gdFree",
            "b 0x120cc",
            "ldr r5, [sp, 0x34]",
            "mov r6, 1",
            "mov r1, 3",
            "str r6, [sp, 0x68]",
            "ldr r4, [r5, 4]",
            "b 0x11d4c",
            "mov r0, 4",
            "ldr r1, [fp, 8]",
            "bl rsym.gdCalloc",
            "mov r5, r0",
            "cmp r0, 0",
            "ldr r0, [sp, 0x14]",
            "str r5, [r0]",
            "beq 0x126d4",
            "ldr r3, [r0, 8]",
            "cmp r3, 0",
            "ble 0x118f0",
            "ldr r4, [sp, 0x4c]",
            "mov r6, r0",
            "ldr r7, [sp, 0x28]",
            "b 0x1214c",
            "ldr r3, [r6, 8]",
            "cmp r3, r4",
            "ble 0x118f0",
            "mov r0, 4",
            "ldr r1, [r7, 4]",
            "bl rsym.gdCalloc",
            "str r0, [r5, r4, lsl 2]",
            "ldr r5, [r6]",
            "ldr r3, [r5, r4, lsl 2]",
            "add r4, r4, 1",
            "cmp r3, 0",
            "bne 0x12140",
            "str r3, [sp, 0x34]",
            "b 0x11960",
            "mov r5, 0",
            "str r5, [sp, 0x2c]",
            "str r5, [sp, 0x20]",
            "str r5, [sp, 0x24]",
            "b 0x12054",
            "ldr r0, [sp, 0x28]",
            "ldr r1, [sp, 0x28]",
            "ldr r2, [sp, 0x34]",
            "ldr r0, [r0, 8]",
            "ldr r1, [r1, 4]",
            "ldr sb, [r2]",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "str r1, [sp, 0x18]",
            "ble 0x12084",
            "ldr fp, [sp, 0x48]",
            "movw sl, 0x1010",
            "str fp, [sp, 0x10]",
            "ldr fp, [sp, 0x28]",
            "ldr r5, [sp, 0x14]",
            "movw r3, 0x1c3c",
            "ldr r4, [sp, 0x18]",
            "ldr r2, [fp, r3]",
            "ldr r8, [sp, 0x10]",
            "ldr r3, [r5]",
            "cmp r4, 0",
            "ldr r6, [r2, r8, lsl 2]",
            "ldr r5, [r3, r8, lsl 2]",
            "ble 0x12284",
            "add r5, r5, 1",
            "b 0x1220c",
            "sub r4, r4, 1",
            "sub r0, r0, 1",
            "cmp r4, 0",
            "strb r0, [r5, -1]",
            "add r5, r5, 1",
            "ble 0x12284",
            "ldr ip, [fp, sl]",
            "ldr r0, [r6], 4",
            "cmp ip, 0",
            "ubfx r3, r0, 0xa, 6",
            "ubfx r1, r0, 3, 5",
            "ubfx r2, r0, 0x13, 5",
            "add r8, r1, r3, lsl 5",
            "blt 0x12234",
            "cmp r0, ip",
            "beq 0x12268",
            "ldr r7, [sb, r2, lsl 2]",
            "lsl r8, r8, 1",
            "ldrh r0, [r7, r8]",
            "cmp r0, 0",
            "bne 0x121f4",
            "ldr lr, [sp, 0x34]",
            "ldr r0, [sp, 0x14]",
            "ldr ip, [lr]",
            "str r1, [sp]",
            "mov r1, ip",
            "bl fcn.000113dc",
            "ldrh r0, [r7, r8]",
            "b 0x121f4",
            "ldr ip, [sp, 0x14]",
            "sub r4, r4, 1",
            "cmp r4, 0",
            "ldr r3, [ip, 0xc]",
            "strb r3, [r5, -1]",
            "add r5, r5, 1",
            "bgt 0x1220c",
            "ldr r0, [sp, 0x10]",
            "ldr r1, [sp, 0x1c]",
            "add r0, r0, 1",
            "cmp r1, r0",
            "str r0, [sp, 0x10]",
            "bgt 0x121c4",
            "b 0x12084",
            "lsl r0, r5, 5",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x20]",
            "beq 0x11c74",
            "ldr lr, [sp, 0x34]",
            "mov r3, 0x1f",
            "mov r2, 0x3f",
            "str r4, [r0]",
            "mov r1, r0",
            "stmib r0, {r3, r4}",
            "str r2, [r0, 0xc]",
            "str r4, [r0, 0x10]",
            "str r3, [r0, 0x14]",
            "ldr r0, [lr]",
            "bl fcn.00010f4c",
            "cmp r5, 1",
            "movle r0, 1",
            "strle r0, [sp, 0x30]",
            "ble 0x12408",
            "ldr r6, [sp, 0x20]",
            "mov r8, 1",
            "ldr r7, [sp, 0x20]",
            "str r8, [sp, 0x30]",
            "add r4, r6, 0x20",
            "mov r6, r8",
            "cmp r5, r6, lsl 1",
            "bge 0x12610",
            "mov r1, 0",
            "mov r3, r7",
            "mov r2, r1",
            "mov ip, r1",
            "ldr r0, [r3, 0x18]",
            "add r2, r2, 1",
            "cmp r0, ip",
            "movgt r1, r3",
            "movgt ip, r0",
            "cmp r2, r6",
            "add r3, r3, 0x20",
            "blt 0x12320",
            "cmp r1, 0",
            "beq 0x12404",
            "ldr ip, [r1, 0xc]",
            "ldr r0, [r1, 8]",
            "ldr r2, [r1, 4]",
            "ldr r3, [r1]",
            "str r0, [r4, 8]",
            "str ip, [r4, 0xc]",
            "ldr lr, [r1, 8]",
            "ldr ip, [r1, 0xc]",
            "str r2, [r4, 4]",
            "ldr r0, [r1, 0x14]",
            "ldr r2, [r1, 0x10]",
            "str r3, [r4]",
            "rsb r3, lr, ip",
            "ldr r8, [r1, 4]",
            "lsl sb, r3, 3",
            "ldr sl, [r1]",
            "str r0, [r4, 0x14]",
            "add sb, sb, r3, lsl 2",
            "str r2, [r4, 0x10]",
            "ldr r2, [r1, 0x14]",
            "rsb r3, sl, r8",
            "ldr r0, [r1, 0x10]",
            "lsl r3, r3, 4",
            "cmp r3, sb",
            "rsb fp, r0, r2",
            "movle r3, sb",
            "lsl fp, fp, 3",
            "movle sb, 1",
            "movgt sb, 0",
            "cmp fp, r3",
            "ble 0x12650",
            "add r2, r0, r2",
            "add r2, r2, r2, lsr 31",
            "asr r3, r2, 1",
            "add r2, r3, 1",
            "str r3, [r1, 0x14]",
            "str r2, [r4, 0x10]",
            "ldr sb, [sp, 0x34]",
            "add r6, r6, 1",
            "ldr r0, [sb]",
            "bl fcn.00010f4c",
            "mov r1, r4",
            "ldr r0, [sb]",
            "bl fcn.00010f4c",
            "cmp r5, r6",
            "add r4, r4, 0x20",
            "bgt 0x12308",
            "str r6, [sp, 0x30]",
            "ldr r2, [sp, 0x34]",
            "mov r1, 0",
            "ldr r4, [sp, 0x14]",
            "ldr r3, [sp, 0x20]",
            "ldr r2, [r2]",
            "add r4, r4, 0x410",
            "str r1, [sp, 0x44]",
            "str r3, [sp, 0x3c]",
            "str r2, [sp, 0x50]",
            "str r4, [sp, 0x38]",
            "ldr fp, [sp, 0x3c]",
            "ldr ip, [sp, 0x3c]",
            "ldr lr, [sp, 0x3c]",
            "ldr r0, [sp, 0x3c]",
            "ldr fp, [fp]",
            "ldr ip, [ip, 4]",
            "ldr lr, [lr, 8]",
            "ldr r1, [sp, 0x3c]",
            "ldr r0, [r0, 0xc]",
            "cmp fp, ip",
            "str fp, [sp, 0x18]",
            "str lr, [sp, 0x2c]",
            "str ip, [sp, 0x24]",
            "str r0, [sp, 0x10]",
            "ldr fp, [r1, 0x10]",
            "ldr lr, [r1, 0x14]",
            "bgt 0x1255c",
            "ldr r3, [sp, 0x2c]",
            "mov r4, 0",
            "ldr r6, [sp, 0x18]",
            "mov r1, r4",
            "ldr r5, [sp, 0x50]",
            "add r2, fp, r3, lsl 5",
            "mov r3, r4",
            "add r5, r5, r6, lsl 2",
            "lsl r2, r2, 1",
            "str r5, [sp, 0x1c]",
            "mov r6, r4",
            "mov r5, r4",
            "str r2, [sp, 0x40]",
            "ldr sb, [sp, 0x2c]",
            "ldr ip, [sp, 0x10]",
            "cmp sb, ip",
            "bgt 0x12530",
            "ldr r0, [sp, 0x1c]",
            "ldr r2, [sp, 0x18]",
            "ldr ip, [sp, 0x40]",
            "ldr sb, [r0]",
            "ldr sl, [sp, 0x2c]",
            "lsl r8, r2, 3",
            "add sb, sb, ip",
            "add r8, r8, 4",
            "cmp fp, lr",
            "bgt 0x1251c",
            "lsl r7, sl, 2",
            "mov r0, sb",
            "mov r2, fp",
            "add r7, r7, 2",
            "ldrh r1, [r0], 2",
            "lsl ip, r2, 3",
            "add r2, r2, 1",
            "add ip, ip, 4",
            "cmp r1, 0",
            "mlane r3, r1, r8, r3",
            "addne r5, r5, r1",
            "mlane r6, r1, r7, r6",
            "mlane r4, r1, ip, r4",
            "cmp lr, r2",
            "bge 0x124f0",
            "ldr ip, [sp, 0x10]",
            "add sl, sl, 1",
            "add sb, sb, 0x40",
            "cmp ip, sl",
            "bge 0x124d8",
            "ldr r0, [sp, 0x18]",
            "ldr r8, [sp, 0x24]",
            "ldr r2, [sp, 0x1c]",
            "add r0, r0, 1",
            "cmp r8, r0",
            "str r0, [sp, 0x18]",
            "add r2, r2, 4",
            "str r2, [sp, 0x1c]",
            "bge 0x124a8",
            "cmp r1, 0",
            "bne 0x12690",
            "ldr r4, [sp, 0x38]",
            "mov r5, 0xff",
            "str r5, [r4, -0x400]",
            "str r5, [r4]",
            "str r5, [r4, 0x400]",
            "ldr r6, [sp, 0x44]",
            "mov sb, 0",
            "ldr fp, [sp, 0x30]",
            "ldr r8, [sp, 0x38]",
            "ldr ip, [sp, 0x3c]",
            "add r6, r6, 1",
            "cmp r6, fp",
            "str r6, [sp, 0x44]",
            "str sb, [r8, 0x800]",
            "add r8, r8, 4",
            "add ip, ip, 0x20",
            "str r8, [sp, 0x38]",
            "str ip, [sp, 0x3c]",
            "blt 0x12430",
            "ldr r0, [sp, 0x28]",
            "movw r3, 0x1010",
            "ldr lr, [sp, 0x14]",
            "ldr r3, [r0, r3]",
            "str fp, [lr, 0xc]",
            "cmp r3, sb",
            "blt 0x12604",
            "ldr r6, [sp, 0x14]",
            "ubfx lr, r3, 0x10, 8",
            "ubfx r0, r3, 8, 8",
            "add r4, fp, 0x600",
            "and r3, r3, 0xff",
            "add r2, fp, 0x204",
            "add ip, fp, 4",
            "add r1, fp, 0x104",
            "add r4, r4, 0xe",
            "add r5, fp, 0x304",
            "str r3, [r6, r2, lsl 2]",
            "mov r3, 0x7f",
            "str lr, [r6, ip, lsl 2]",
            "str r0, [r6, r1, lsl 2]",
            "str r3, [r6, r4, lsl 2]",
            "str sb, [r6, r5, lsl 2]",
            "ldr r0, [sp, 0x20]",
            "bl rsym.gdFree",
            "b 0x11c74",
            "mov r1, 0",
            "mov r3, r7",
            "mov r2, r1",
            "mov ip, r1",
            "ldr r0, [r3, 0x1c]",
            "add r2, r2, 1",
            "cmp r0, ip",
            "ble 0x12640",
            "ldr lr, [r3, 0x18]",
            "cmp lr, 0",
            "movgt r1, r3",
            "movgt ip, r0",
            "cmp r2, r6",
            "add r3, r3, 0x20",
            "blt 0x12620",
            "b 0x12340",
            "cmp sb, 1",
            "beq 0x12674",
            "add r8, sl, r8",
            "add r8, r8, r8, lsr 31",
            "asr r3, r8, 1",
            "add r2, r3, 1",
            "str r3, [r1, 4]",
            "str r2, [r4]",
            "b 0x123dc",
            "add ip, lr, ip",
            "add ip, ip, ip, lsr 31",
            "asr r3, ip, 1",
            "add r2, r3, 1",
            "str r3, [r1, 0xc]",
            "str r2, [r4, 8]",
            "b 0x123dc",
            "asr r7, r5, 1",
            "mov r1, r5",
            "add r0, r7, r3",
            "bl fcn.00013da0",
            "ldr lr, [sp, 0x38]",
            "mov r1, r5",
            "str r0, [lr, -0x400]",
            "add r0, r7, r6",
            "bl fcn.00013da0",
            "ldr r2, [sp, 0x38]",
            "mov r1, r5",
            "str r0, [r2]",
            "add r0, r7, r4",
            "bl fcn.00013da0",
            "ldr r3, [sp, 0x38]",
            "str r0, [r3, 0x400]",
            "b 0x12570",
            "ldr fp, [sp, 0x4c]",
            "str fp, [sp, 0x34]",
            "b 0x11960",
            "ldr sb, [sp, 0x28]",
            "movw r4, 0x1c3c",
            "ldr r0, [sb, r4]",
            "bl rsym.gdFree",
            "mov r3, 0",
            "str r3, [sb, r4]",
            "b 0x11994"
        ]
    },
    "rsym.gdImageCopy": {
        "function_address": "0x000035f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd38]!"
        ]
    },
    "rsym.gdRealloc": {
        "function_address": "0x0000348c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe28]!"
        ]
    },
    "fcn.00010f20": {
        "function_address": "0x00010f20",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, 0",
            "ldr r0, [r5, r4]",
            "mov r1, 0",
            "mov r2, 0x1000",
            "add r4, r4, 4",
            "bl sym.imp.memset",
            "cmp r4, 0x80",
            "bne 0x10f2c",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000113dc": {
        "function_address": "0x000113dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp}",
            "asr r3, r3, 3",
            "sub sp, sp, 0x5c0",
            "ldr sb, [r0, 0xc]",
            "sub sp, sp, 8",
            "asr r2, r2, 2",
            "str r3, [sp, 0x3c]",
            "str r0, [sp, 0x20]",
            "lsl r3, r2, 5",
            "ldr r0, [sp, 0x3c]",
            "cmp sb, 0",
            "str r2, [sp, 0x38]",
            "add r4, r3, 4",
            "add r3, r3, 0x1c",
            "str r4, [sp, 0x24]",
            "add r4, r3, r4",
            "str r1, [sp, 0x44]",
            "lsl r2, r0, 5",
            "ldr r0, [sp, 0x5e8]",
            "asr r4, r4, 1",
            "add r5, r2, 2",
            "add r2, r2, 0x1e",
            "str r5, [sp, 0x28]",
            "asr r0, r0, 2",
            "add ip, r2, r5",
            "asr ip, ip, 1",
            "str r4, [sp, 0xc]",
            "str r0, [sp, 0x40]",
            "lsl r0, r0, 5",
            "str ip, [sp, 0x14]",
            "movle r2, 0",
            "add fp, r0, 4",
            "add r0, r0, 0x1c",
            "add r5, r0, fp",
            "asr r5, r5, 1",
            "str r5, [sp, 0x18]",
            "addle r5, sp, 0x48",
            "strle r5, [sp, 0x10]",
            "ble 0x11654",
            "lsl sl, sb, 2",
            "add ip, sp, 0x48",
            "ldr r1, [sp, 0x20]",
            "mov r5, 0",
            "str sl, [sp, 8]",
            "mvn r6, 0x80000000",
            "str ip, [sp, 0x10]",
            "ldr r7, [sp, 0x24]",
            "ldr r8, [sp, 0x28]",
            "str sb, [sp, 0x1c]",
            "str r3, [sp, 4]",
            "b 0x11528",
            "ldr r4, [sp, 4]",
            "rsb r3, r7, ip",
            "lsl r3, r3, 1",
            "rsb sl, r4, ip",
            "mul r3, r3, r3",
            "lsl sl, sl, 1",
            "mul sl, sl, sl",
            "ldr ip, [r1, 0x410]",
            "cmp r8, ip",
            "ble 0x11564",
            "rsb sb, r8, ip",
            "rsb ip, r2, ip",
            "add sb, sb, sb, lsl 1",
            "add ip, ip, ip, lsl 1",
            "mla r3, sb, sb, r3",
            "mla r4, ip, ip, sl",
            "ldr ip, [r1, 0x810]",
            "cmp fp, ip",
            "ble 0x11590",
            "rsb sl, fp, ip",
            "rsb ip, r0, ip",
            "mla r3, sl, sl, r3",
            "mla ip, ip, ip, r4",
            "ldr r4, [sp, 0x10]",
            "cmp r6, ip",
            "movge r6, ip",
            "ldr sl, [sp, 8]",
            "add r1, r1, 4",
            "str r3, [r4, r5]",
            "add r5, r5, 4",
            "cmp r5, sl",
            "beq 0x1161c",
            "ldr ip, [r1, 0x10]",
            "cmp r7, ip",
            "bgt 0x114a8",
            "ldr sl, [sp, 4]",
            "cmp sl, ip",
            "bge 0x115ac",
            "rsb r3, sl, ip",
            "rsb ip, r7, ip",
            "lsl sl, ip, 1",
            "ldr ip, [r1, 0x410]",
            "lsl r3, r3, 1",
            "mul sl, sl, sl",
            "cmp r8, ip",
            "mul r3, r3, r3",
            "bgt 0x114d0",
            "cmp r2, ip",
            "bge 0x115f8",
            "rsb r4, r2, ip",
            "rsb ip, r8, ip",
            "add r4, r4, r4, lsl 1",
            "add ip, ip, ip, lsl 1",
            "mla r3, r4, r4, r3",
            "mla r4, ip, ip, sl",
            "ldr ip, [r1, 0x810]",
            "cmp fp, ip",
            "bgt 0x114f4",
            "cmp r0, ip",
            "bge 0x115dc",
            "rsb sl, r0, ip",
            "rsb ip, fp, ip",
            "mla r3, sl, sl, r3",
            "mla ip, ip, ip, r4",
            "b 0x11504",
            "ldr r3, [sp, 0xc]",
            "cmp r3, ip",
            "ldrge r4, [sp, 4]",
            "rsblt ip, r7, ip",
            "lsllt sl, ip, 1",
            "movge r3, 0",
            "movlt r3, 0",
            "rsbge ip, r4, ip",
            "mullt sl, sl, sl",
            "lslge sl, ip, 1",
            "mulge sl, sl, sl",
            "b 0x114c4",
            "ldr sl, [sp, 0x18]",
            "cmp sl, ip",
            "rsbge ip, r0, ip",
            "rsblt ip, fp, ip",
            "mlage ip, ip, ip, r4",
            "mlalt ip, ip, ip, r4",
            "b 0x11504",
            "ldr r4, [sp, 0x14]",
            "cmp r4, ip",
            "rsbge r4, r2, ip",
            "rsblt r4, r8, ip",
            "addge r4, r4, r4, lsl 1",
            "addlt r4, r4, r4, lsl 1",
            "mlage r4, r4, r4, sl",
            "mlalt r4, r4, r4, sl",
            "b 0x114e8",
            "ldr sb, [sp, 0x1c]",
            "mov r2, 0",
            "sub r1, r4, 4",
            "mov r3, r2",
            "ldr r0, [r1, 4]!",
            "add r4, sp, 0x5c0",
            "add r4, r4, 8",
            "add ip, r4, r2",
            "cmp r0, r6",
            "strble r3, [ip, -0x180]",
            "add r3, r3, 1",
            "addle r2, r2, 1",
            "cmp r3, sb",
            "bne 0x1162c",
            "ldr r3, [sp, 0x10]",
            "add r0, sp, 0x248",
            "mvn r1, 0x80000000",
            "str r1, [r3], 4",
            "cmp r3, r0",
            "bne 0x11660",
            "cmp r2, 0",
            "addeq sl, sp, 0x540",
            "addeq sl, sl, 8",
            "streq sl, [sp, 0x2c]",
            "beq 0x117e8",
            "add ip, sp, 0x440",
            "add r0, sp, 0x540",
            "add ip, ip, 8",
            "add r1, sp, 0x5c0",
            "add r0, r0, 8",
            "add r2, r2, ip",
            "add r1, r1, 8",
            "str ip, [sp, 0x1c]",
            "str r0, [sp, 0x2c]",
            "str r2, [sp, 0x30]",
            "str r1, [sp, 0x18]",
            "str fp, [sp, 0x34]",
            "ldr r2, [sp, 0x1c]",
            "ldr r3, [sp, 0x10]",
            "ldr r4, [sp, 0x20]",
            "ldrb r8, [r2], 1",
            "add r3, r3, 4",
            "ldr r5, [sp, 0x34]",
            "str r3, [sp, 4]",
            "add r3, r8, 0x204",
            "str r2, [sp, 0x1c]",
            "ldr sb, [r4, r3, lsl 2]",
            "add r2, r8, 0x104",
            "ldr r2, [r4, r2, lsl 2]",
            "add r3, r8, 4",
            "ldr sl, [sp, 0x28]",
            "rsb sb, sb, r5",
            "ldr r3, [r4, r3, lsl 2]",
            "mul r1, sb, sb",
            "ldr ip, [sp, 0x24]",
            "rsb r2, r2, sl",
            "add sb, sb, 4",
            "add r2, r2, r2, lsl 1",
            "ldr fp, [sp, 0x2c]",
            "rsb r3, r3, ip",
            "lsl sb, sb, 4",
            "add sl, r2, r2, lsl 1",
            "lsl r3, r3, 1",
            "mla r2, r2, r2, r1",
            "add r0, r3, 8",
            "lsl sl, sl, 3",
            "lsl r0, r0, 5",
            "mla r2, r3, r3, r2",
            "str r0, [sp, 0xc]",
            "add r0, sl, 0x90",
            "add sl, sl, 0x870",
            "str r0, [sp, 0x14]",
            "str r2, [sp, 8]",
            "ldr r6, [sp, 4]",
            "mov r4, fp",
            "ldr r5, [sp, 0x14]",
            "ldr r7, [sp, 8]",
            "mov r1, r6",
            "mov r0, sb",
            "mov r2, r7",
            "mov r3, 0",
            "ldr ip, [r1, -4]",
            "cmp ip, r2",
            "strgt r2, [r1, -4]",
            "add r2, r2, r0",
            "strbgt r8, [r4, r3]",
            "add r3, r3, 1",
            "cmp r3, 4",
            "add r0, r0, 0x80",
            "add r1, r1, 4",
            "bne 0x11760",
            "cmp r5, sl",
            "add r4, r4, 4",
            "add r6, r6, 0x10",
            "addne r7, r7, r5",
            "addne r5, r5, 0x120",
            "bne 0x11750",
            "ldr r2, [sp, 0x18]",
            "add fp, fp, 0x20",
            "ldr r1, [sp, 4]",
            "cmp fp, r2",
            "add r1, r1, 0x80",
            "str r1, [sp, 4]",
            "beq 0x117d8",
            "ldr r4, [sp, 0xc]",
            "ldr r3, [sp, 8]",
            "add r3, r3, r4",
            "add r4, r4, 0x200",
            "str r3, [sp, 8]",
            "str r4, [sp, 0xc]",
            "b 0x11740",
            "ldr r5, [sp, 0x1c]",
            "ldr sl, [sp, 0x30]",
            "cmp r5, sl",
            "bne 0x116b0",
            "ldr ip, [sp, 0x3c]",
            "add r7, sp, 0x5c0",
            "ldr r2, [sp, 0x40]",
            "add r7, r7, 8",
            "ldr r0, [sp, 0x44]",
            "ldr r1, [sp, 0x38]",
            "lsl r8, ip, 8",
            "ldr r5, [sp, 0x2c]",
            "add r8, r8, r2, lsl 2",
            "add r6, r0, r1, lsl 4",
            "lsl r8, r8, 1",
            "ldr r4, [r6], 4",
            "mov ip, 0",
            "add r4, r4, r8",
            "add r0, r5, ip",
            "mov r2, r4",
            "mov r3, 0",
            "ldrb r1, [r0, r3]",
            "add r3, r3, 1",
            "cmp r3, 4",
            "add r1, r1, 1",
            "strh r1, [r2], 2",
            "bne 0x1182c",
            "add ip, ip, 4",
            "add r4, r4, 0x40",
            "cmp ip, 0x20",
            "bne 0x11820",
            "add r5, r5, 0x20",
            "cmp r5, r7",
            "bne 0x11814",
            "add sp, sp, 0x1c8",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp}",
            "bx lr"
        ]
    },
    "fcn.00010f4c": {
        "function_address": "0x00010f4c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp}",
            "sub sp, sp, 0x10",
            "ldm r1, {r8, fp}",
            "str r0, [sp, 4]",
            "str r1, [sp]",
            "cmp r8, fp",
            "ldr sl, [r1, 8]",
            "ldr r7, [r1, 0xc]",
            "ldr r6, [r1, 0x10]",
            "ldr r0, [r1, 0x14]",
            "bge 0x10ff8",
            "ldr r2, [sp, 4]",
            "add r3, r6, sl, lsl 5",
            "mov ip, r8",
            "lsl r3, r3, 1",
            "add sb, r2, r8, lsl 2",
            "str r3, [sp, 8]",
            "ldr r4, [sp, 8]",
            "mov r5, sl",
            "cmp r7, r5",
            "blt 0x1134c",
            "cmp r6, r0",
            "ldr r3, [sb]",
            "bgt 0x10fe0",
            "ldrh r1, [r3, r4]",
            "add r3, r3, r4",
            "cmp r1, 0",
            "bne 0x11258",
            "mov r2, r3",
            "mov r3, r6",
            "b 0x10fd4",
            "ldrh r1, [r2, 2]!",
            "cmp r1, 0",
            "bne 0x11258",
            "add r3, r3, 1",
            "cmp r0, r3",
            "bge 0x10fc8",
            "add r5, r5, 1",
            "add r4, r4, 0x40",
            "b 0x10f98",
            "ldr r3, [sp]",
            "mov fp, ip",
            "str ip, [r3, 4]",
            "cmp sl, r7",
            "bge 0x11080",
            "ldr r2, [sp, 4]",
            "add r4, r6, sl, lsl 5",
            "sub r3, r8, 1",
            "lsl r4, r4, 1",
            "mov ip, sl",
            "add r3, r2, r3, lsl 2",
            "str r3, [sp, 8]",
            "ldr sb, [sp, 8]",
            "mov r5, r8",
            "cmp r5, fp",
            "bgt 0x11360",
            "cmp r6, r0",
            "ldr r3, [sb, 4]!",
            "bgt 0x1106c",
            "ldrh r1, [r3, r4]",
            "add r3, r3, r4",
            "cmp r1, 0",
            "bne 0x112d4",
            "mov r2, r3",
            "mov r3, r6",
            "b 0x11060",
            "ldrh r1, [r2, 2]!",
            "cmp r1, 0",
            "bne 0x112d4",
            "add r3, r3, 1",
            "cmp r0, r3",
            "bge 0x11054",
            "add r5, r5, 1",
            "b 0x11024",
            "ldr r2, [sp]",
            "mov r7, ip",
            "str ip, [r2, 0xc]",
            "cmp r6, r0",
            "bge 0x11114",
            "ldr r2, [sp, 4]",
            "lsl r3, sl, 5",
            "mov ip, r6",
            "str r3, [sp, 8]",
            "sub r3, r8, 1",
            "add r3, r2, r3, lsl 2",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 8]",
            "add r4, r3, r6",
            "lsl r4, r4, 1",
            "ldr sb, [sp, 0xc]",
            "mov r5, r8",
            "cmp fp, r5",
            "blt 0x11374",
            "cmp r7, sl",
            "ldr r3, [sb, 4]!",
            "blt 0x11100",
            "ldrh r1, [r3, r4]",
            "add r3, r3, r4",
            "cmp r1, 0",
            "bne 0x111dc",
            "mov r2, r3",
            "mov r3, sl",
            "b 0x110f4",
            "ldrh r1, [r2, 0x40]!",
            "cmp r1, 0",
            "bne 0x111dc",
            "add r3, r3, 1",
            "cmp r3, r7",
            "ble 0x110e8",
            "add r5, r5, 1",
            "b 0x110b8",
            "ldr r2, [sp]",
            "mov r0, ip",
            "str ip, [r2, 0x14]",
            "rsb r1, r8, fp",
            "rsb r3, sl, r7",
            "lsl r1, r1, 4",
            "lsl r2, r3, 3",
            "mul r1, r1, r1",
            "add r2, r2, r3, lsl 2",
            "rsb r3, r6, r0",
            "lsl r3, r3, 3",
            "cmp fp, r8",
            "mla r2, r2, r2, r1",
            "movlt ip, 0",
            "mla r3, r3, r3, r2",
            "ldr r2, [sp]",
            "str r3, [r2, 0x18]",
            "blt 0x111c8",
            "ldr r2, [sp, 4]",
            "add r3, r6, sl, lsl 5",
            "mov ip, 0",
            "lsl r3, r3, 1",
            "add sb, r2, r8, lsl 2",
            "str r3, [sp, 4]",
            "cmp r7, sl",
            "blt 0x111b8",
            "ldr r5, [sb]",
            "mov r4, sl",
            "ldr r3, [sp, 4]",
            "add r5, r5, r3",
            "cmp r0, r6",
            "blt 0x111a8",
            "mov r2, r5",
            "mov r3, r6",
            "ldrh r1, [r2], 2",
            "add r3, r3, 1",
            "cmp r1, 0",
            "addne ip, ip, 1",
            "cmp r0, r3",
            "bge 0x11190",
            "add r4, r4, 1",
            "add r5, r5, 0x40",
            "cmp r7, r4",
            "bge 0x11180",
            "add r8, r8, 1",
            "add sb, sb, 4",
            "cmp fp, r8",
            "bge 0x11168",
            "ldr r2, [sp]",
            "str ip, [r2, 0x1c]",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp}",
            "bx lr",
            "ldr r2, [sp]",
            "cmp r0, ip",
            "movgt r6, ip",
            "str ip, [r2, 0x10]",
            "ble 0x11388",
            "ldr r3, [sp, 8]",
            "mov ip, r0",
            "add r4, r3, r0",
            "lsl r4, r4, 1",
            "ldr sb, [sp, 0xc]",
            "mov r5, r8",
            "cmp fp, r5",
            "blt 0x11390",
            "cmp r7, sl",
            "ldr r3, [sb, 4]!",
            "blt 0x11250",
            "ldrh r1, [r3, r4]",
            "add r3, r3, r4",
            "cmp r1, 0",
            "bne 0x11108",
            "mov r2, r3",
            "mov r3, sl",
            "b 0x11244",
            "ldrh r1, [r2, 0x40]!",
            "cmp r1, 0",
            "bne 0x11108",
            "add r3, r3, 1",
            "cmp r7, r3",
            "bge 0x11238",
            "add r5, r5, 1",
            "b 0x11208",
            "ldr r3, [sp]",
            "cmp fp, ip",
            "movgt r8, ip",
            "str ip, [r3]",
            "ble 0x113a4",
            "ldr r2, [sp, 4]",
            "mov ip, fp",
            "add sb, r2, fp, lsl 2",
            "ldr r4, [sp, 8]",
            "mov r5, sl",
            "cmp r7, r5",
            "blt 0x113ac",
            "cmp r6, r0",
            "ldr r3, [sb]",
            "bgt 0x112c8",
            "ldrh r1, [r3, r4]",
            "add r3, r3, r4",
            "cmp r1, 0",
            "bne 0x10fec",
            "mov r2, r3",
            "mov r3, r6",
            "b 0x112bc",
            "ldrh r1, [r2, 2]!",
            "cmp r1, 0",
            "bne 0x10fec",
            "add r3, r3, 1",
            "cmp r0, r3",
            "bge 0x112b0",
            "add r5, r5, 1",
            "add r4, r4, 0x40",
            "b 0x11280",
            "ldr r3, [sp]",
            "cmp r7, ip",
            "movgt sl, ip",
            "str ip, [r3, 8]",
            "ble 0x113c0",
            "add r4, r6, r7, lsl 5",
            "mov ip, r7",
            "lsl r4, r4, 1",
            "ldr sb, [sp, 8]",
            "mov r5, r8",
            "cmp fp, r5",
            "blt 0x113c8",
            "cmp r6, r0",
            "ldr r3, [sb, 4]!",
            "bgt 0x11344",
            "ldrh r1, [r3, r4]",
            "add r3, r3, r4",
            "cmp r1, 0",
            "bne 0x11074",
            "mov r2, r3",
            "mov r3, r6",
            "b 0x11338",
            "ldrh r1, [r2, 2]!",
            "cmp r1, 0",
            "bne 0x11074",
            "add r3, r3, 1",
            "cmp r0, r3",
            "bge 0x1132c",
            "add r5, r5, 1",
            "b 0x112fc",
            "add ip, ip, 1",
            "add sb, sb, 4",
            "cmp fp, ip",
            "blt 0x1126c",
            "b 0x10f90",
            "add ip, ip, 1",
            "add r4, r4, 0x40",
            "cmp r7, ip",
            "blt 0x112e8",
            "b 0x1101c",
            "add ip, ip, 1",
            "add r4, r4, 2",
            "cmp r0, ip",
            "blt 0x111f0",
            "b 0x110b0",
            "mov r6, ip",
            "b 0x11114",
            "sub ip, ip, 1",
            "sub r4, r4, 2",
            "cmp ip, r6",
            "blt 0x11114",
            "b 0x11200",
            "mov r8, ip",
            "b 0x10ff8",
            "sub ip, ip, 1",
            "sub sb, sb, 4",
            "cmp ip, r8",
            "blt 0x10ff8",
            "b 0x11278",
            "mov sl, ip",
            "b 0x11080",
            "sub ip, ip, 1",
            "sub r4, r4, 0x40",
            "cmp ip, sl",
            "blt 0x11080",
            "b 0x112f4"
        ]
    },
    "sym.gdImageGd2": {
        "function_address": "0x0000ca5c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "mov r7, r2",
            "mov r6, r3",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mov r3, r6",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0000b5bc",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageCopyMergeGray": {
        "function_address": "0x000068e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "ldr fp, [sp, 0x64]",
            "mov r8, r0",
            "mov r5, r1",
            "str r2, [sp, 0x34]",
            "ldr r2, [sp, 0x6c]",
            "add r2, r2, fp",
            "cmp r2, fp",
            "str r2, [sp, 0x30]",
            "ble 0x6cec",
            "ldr r2, [sp, 0x68]",
            "movw sl, 0x1010",
            "ldr r1, [sp, 0x60]",
            "str r3, [sp, 0x1c]",
            "add r2, r2, r1",
            "str r2, [sp, 0x20]",
            "ldr r2, [sp, 0x70]",
            "rsb r2, r2, 0x64",
            "str r2, [sp, 0x2c]",
            "ldr r3, [sp, 0x20]",
            "ldr r1, [sp, 0x60]",
            "cmp r3, r1",
            "ble 0x6cd0",
            "ldr r2, [sp, 0x34]",
            "mov r4, r1",
            "add r7, r2, 1",
            "b 0x6978",
            "mov r0, r8",
            "mov r1, sb",
            "ldr r2, [sp, 0x1c]",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [sp, 0x20]",
            "add r4, r4, 1",
            "add r7, r7, 1",
            "cmp r3, r4",
            "ble 0x6cd0",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, fp",
            "sub sb, r7, 1",
            "bl rsym.gdImageGetPixel",
            "ldr r3, [r5, sl]",
            "mov r6, r0",
            "cmp r3, r0",
            "beq 0x6964",
            "ldr r3, [sp, 0x70]",
            "cmp r3, 0x64",
            "cmpeq r8, r5",
            "moveq r3, r0",
            "beq 0x6954",
            "mov r1, sb",
            "mov r0, r8",
            "ldr r2, [sp, 0x1c]",
            "bl rsym.gdImageGetPixel",
            "movw r1, 0x1c38",
            "mov ip, r0",
            "ldr r3, [r8, r1]",
            "cmp r3, 0",
            "beq 0x6c60",
            "ubfx r0, r0, 0x10, 8",
            "str ip, [sp, 4]",
            "bl fcn.00014178",
            "movw r2, 0x4189",
            "movw r3, 0x22d0",
            "movt r2, 0xe560",
            "movt r3, 0x3fd3",
            "bl fcn.00014254",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "ubfx r0, ip, 8, 8",
            "bl fcn.00014178",
            "movw r2, 0x1062",
            "movw r3, 0xc8b4",
            "movt r2, 0x3958",
            "movt r3, 0x3fe2",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00013ea8",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "uxtb r0, ip",
            "bl fcn.00014178",
            "movw r2, 0x76c9",
            "movw r3, 0x2f1a",
            "movt r2, 0x9fbe",
            "movt r3, 0x3fbd",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00013ea8",
            "bl fcn.0001484c",
            "movw r2, 0x1c38",
            "mov ip, r0",
            "ldr r3, [r5, r2]",
            "cmp r3, 0",
            "beq 0x6ba4",
            "ldr r0, [sp, 0x70]",
            "str ip, [sp, 4]",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4059",
            "bl fcn.000144c0",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "mov r0, ip",
            "bl fcn.000141a0",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [sp, 0x2c]",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4059",
            "bl fcn.000144c0",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00014254",
            "strd r0, r1, [sp, 0x10]",
            "ubfx r0, r6, 0x10, 8",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "str r0, [sp, 0x24]",
            "ubfx r0, r6, 8, 8",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "str r0, [sp, 0x28]",
            "uxtb r0, r6",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "mov r6, r0",
            "ldr r1, [sp, 0x24]",
            "mov r3, r6",
            "mov r0, r8",
            "ldr r2, [sp, 0x28]",
            "bl rsym.gdImageColorExact",
            "cmn r0, 1",
            "mov r3, r0",
            "bne 0x6954",
            "mov r3, r6",
            "mov r0, r8",
            "ldr r1, [sp, 0x24]",
            "ldr r2, [sp, 0x28]",
            "bl rsym.gdImageColorAllocate",
            "cmn r0, 1",
            "mov r3, r0",
            "bne 0x6954",
            "mov r3, r6",
            "mov r0, r8",
            "ldr r1, [sp, 0x24]",
            "ldr r2, [sp, 0x28]",
            "bl rsym.gdImageColorClosest",
            "mov r3, r0",
            "b 0x6954",
            "ldr r0, [sp, 0x70]",
            "str ip, [sp, 4]",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4059",
            "bl fcn.000144c0",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "mov r0, ip",
            "bl fcn.000141a0",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [sp, 0x2c]",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4059",
            "bl fcn.000144c0",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00014254",
            "add r3, r6, 4",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [r5, r3, lsl 2]",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "add r3, r6, 0x104",
            "str r0, [sp, 0x24]",
            "ldr r0, [r5, r3, lsl 2]",
            "add r6, r6, 0x204",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "str r0, [sp, 0x28]",
            "ldr r0, [r5, r6, lsl 2]",
            "bl fcn.00014178",
            "b 0x6b28",
            "add r3, r0, 4",
            "ldr r0, [r8, r3, lsl 2]",
            "str ip, [sp, 4]",
            "bl fcn.00014178",
            "movw r2, 0x4189",
            "movw r3, 0x22d0",
            "movt r2, 0xe560",
            "movt r3, 0x3fd3",
            "bl fcn.00014254",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "add r3, ip, 0x104",
            "ldr r0, [r8, r3, lsl 2]",
            "bl fcn.00014178",
            "movw r2, 0x1062",
            "movw r3, 0xc8b4",
            "movt r2, 0x3958",
            "movt r3, 0x3fe2",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00013ea8",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "add ip, ip, 0x204",
            "ldr r0, [r8, ip, lsl 2]",
            "b 0x6a34",
            "ldr r1, [sp, 0x30]",
            "add fp, fp, 1",
            "cmp r1, fp",
            "ldrgt r2, [sp, 0x1c]",
            "addgt r2, r2, 1",
            "strgt r2, [sp, 0x1c]",
            "bgt 0x6934",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001484c": {
        "function_address": "0x0001484c",
        "instructions": [
            "lsl r2, r1, 1",
            "subs r3, r2, 0x70000000",
            "subshs ip, r3, 0x200000",
            "rsbshs ip, ip, 0x1fc00000",
            "bls 0x1487c",
            "and ip, r1, 0x80000000",
            "lsl r2, r0, 3",
            "orr r0, ip, r0, lsr 29",
            "cmp r2, 0x80000000",
            "adc r0, r0, r3, lsl 2",
            "biceq r0, r0, 1",
            "bx lr",
            "tst r1, 0x40000000",
            "bne 0x148c4",
            "adds r2, r3, 0x2e00000",
            "andlt r0, r1, 0x80000000",
            "bxlt lr",
            "orr r1, r1, 0x100000",
            "lsr r2, r2, 0x15",
            "rsb r2, r2, 0x18",
            "rsb ip, r2, 0x20",
            "lsls r3, r0, ip",
            "lsr r0, r0, r2",
            "orrne r0, r0, 1",
            "lsl r3, r1, 0xb",
            "lsr r3, r3, 0xb",
            "orr r0, r0, r3, lsl ip",
            "lsr r3, r3, r2",
            "lsl r3, r3, 1",
            "b 0x14860",
            "mvns r3, r2, asr 21",
            "bne 0x148dc",
            "orrs r3, r0, r1, lsl 12",
            "movne r0, 0x7f000000",
            "orrne r0, r0, 0xc00000",
            "bxne lr",
            "and r0, r1, 0x80000000",
            "orr r0, r0, 0x7f000000",
            "orr r0, r0, 0x800000",
            "bx lr"
        ]
    },
    "fcn.000141a0": {
        "function_address": "0x000141a0",
        "instructions": [
            "lsls r2, r0, 1",
            "asr r1, r2, 3",
            "rrx r1, r1",
            "lsl r0, r2, 0x1c",
            "andsne r3, r2, 0xff000000",
            "teqne r3, 0xff000000",
            "eorne r1, r1, 0x38000000",
            "bxne lr",
            "teq r2, 0",
            "teqne r3, 0xff000000",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r4, 0x380",
            "and r5, r1, 0x80000000",
            "bic r1, r1, 0x80000000",
            "b 0x13ff0"
        ]
    },
    "rsym.gdImageColorExact": {
        "function_address": "0x000033c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xeb0]!"
        ]
    },
    "rsym.gdImageColorAllocate": {
        "function_address": "0x00002fe8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x140]!"
        ]
    },
    "rsym.gdImageColorClosest": {
        "function_address": "0x00002fdc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x148]!"
        ]
    },
    "sym.gdImageCreateFromGd2Ptr": {
        "function_address": "0x0000c2fc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0",
            "bl rsym.gdNewDynamicCtxEx",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0xc328",
            "bl rsym.gdImageCreateFromGd2Ctx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "rsym.gdImageCreateFromGd2Ctx": {
        "function_address": "0x00003540",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdb0]!"
        ]
    },
    "sym.gdImagePngEx": {
        "function_address": "0x00010e8c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "mov r6, r2",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mov r2, r6",
            "mov r0, r5",
            "mov r1, r4",
            "bl rsym.gdImagePngCtxEx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "rsym.gdImagePngCtxEx": {
        "function_address": "0x00003258",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfa0]!"
        ]
    },
    "sym._gdGetColors": {
        "function_address": "0x0000afc8",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "subs r7, r2, 0",
            "sub sp, sp, 0xc",
            "mov r6, r0",
            "mov r5, r1",
            "beq 0xb014",
            "add r0, sp, 4",
            "mov r1, r6",
            "bl rsym.gdGetByte",
            "cmp r0, 0",
            "beq 0xb00c",
            "movw r3, 0x1c38",
            "ldr r2, [sp, 4]",
            "ldr r3, [r5, r3]",
            "cmp r3, r2",
            "movne r0, 0",
            "beq 0xb0e8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "add r0, r1, 0xc",
            "mov r1, r6",
            "bl rsym.gdGetByte",
            "cmp r0, 0",
            "beq 0xb00c",
            "add r0, r5, 0x1000",
            "mov r1, r6",
            "add r0, r0, 0x10",
            "bl rsym.gdGetWord",
            "cmp r0, 0",
            "beq 0xb00c",
            "movw r3, 0x1010",
            "movw r2, 0x101",
            "ldr r1, [r5, r3]",
            "cmp r1, r2",
            "mvneq r2, 0",
            "streq r2, [r5, r3]",
            "movw r3, 0x1c38",
            "ldr r4, [r5, r3]",
            "cmp r4, 0",
            "beq 0xb078",
            "b 0xb14c",
            "add r4, r4, 1",
            "cmp r4, 0x100",
            "beq 0xb120",
            "add r0, r4, 4",
            "mov r1, r6",
            "add r0, r5, r0, lsl 2",
            "bl rsym.gdGetByte",
            "subs r2, r0, 0",
            "add r3, r4, 0x104",
            "mov r1, r6",
            "add r0, r5, r3, lsl 2",
            "beq 0xb154",
            "bl rsym.gdGetByte",
            "subs r2, r0, 0",
            "add r3, r4, 0x204",
            "mov r1, r6",
            "add r0, r5, r3, lsl 2",
            "beq 0xb154",
            "bl rsym.gdGetByte",
            "cmp r0, 0",
            "beq 0xb00c",
            "cmp r7, 0",
            "beq 0xb06c",
            "add r0, r4, 0x600",
            "mov r1, r6",
            "add r0, r0, 0xe",
            "add r0, r5, r0, lsl 2",
            "bl rsym.gdGetByte",
            "cmp r0, 0",
            "bne 0xb06c",
            "b 0xb00c",
            "cmp r3, 0",
            "bne 0xb104",
            "add r0, r5, 0xc",
            "mov r1, r6",
            "bl rsym.gdGetWord",
            "cmp r0, 0",
            "beq 0xb00c",
            "add r0, r5, 0x1000",
            "mov r1, r6",
            "add r0, r0, 0x10",
            "bl rsym.gdGetInt",
            "cmp r0, 0",
            "bne 0xb058",
            "b 0xb00c",
            "ldr r2, [r5, 0xc]",
            "cmp r2, 0",
            "ble 0xb14c",
            "add r5, r5, 0xc00",
            "mov r3, 0",
            "add r5, r5, 0xc",
            "mov r1, r3",
            "add r3, r3, 1",
            "str r1, [r5, 4]!",
            "cmp r3, r2",
            "bne 0xb13c",
            "mov r0, 1",
            "b 0xb00c",
            "mov r0, r2",
            "b 0xb00c"
        ]
    },
    "rsym.gdGetByte": {
        "function_address": "0x00003024",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x118]!"
        ]
    },
    "rsym.gdGetWord": {
        "function_address": "0x000030d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xa0]!"
        ]
    },
    "sym.overflow2": {
        "function_address": "0x0000af2c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "cmp r0, 0",
            "cmpgt r1, 0",
            "ldr r4, [0x0000afb8]",
            "mov r5, r0",
            "movgt r6, 0",
            "movle r6, 1",
            "add r4, pc, r4",
            "ble 0xaf90",
            "mvn r0, 0x80000000",
            "bl fcn.00013da0",
            "cmp r5, r0",
            "bgt 0xaf68",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x0000afbc]",
            "mov r1, 1",
            "ldr r0, [0x0000afc0]",
            "mov r2, 0x6b",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x0000afbc]",
            "mov r1, 1",
            "ldr r0, [0x0000afc4]",
            "mov r2, 0x72",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.raise": {
        "function_address": "0x00003660",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xcf0]!"
        ]
    },
    "sym.gdImageCreateFromGdCtx": {
        "function_address": "0x0000b15c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x10",
            "mov r5, r0",
            "add r6, sp, 0xc",
            "mov r0, r6",
            "mov r1, r5",
            "bl rsym.gdGetWord",
            "subs r4, r0, 0",
            "beq 0xb1b0",
            "ldr r7, [sp, 0xc]",
            "sub r3, r7, 0xff00",
            "sub r3, r3, 0xfe",
            "cmp r3, 1",
            "movhi r7, 0",
            "movhi r6, r7",
            "bls 0xb1bc",
            "add r0, sp, 8",
            "mov r1, r5",
            "bl rsym.gdGetWord",
            "subs r4, r0, 0",
            "bne 0xb1e8",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r6",
            "mov r1, r5",
            "bl rsym.gdGetWord",
            "subs r4, r0, 0",
            "beq 0xb1b0",
            "movw r3, 0xfffe",
            "mov r6, 1",
            "cmp r7, r3",
            "movne r7, 0",
            "moveq r7, 1",
            "b 0xb19c",
            "cmp r7, 0",
            "beq 0xb320",
            "ldr r0, [sp, 0xc]",
            "ldr r1, [sp, 8]",
            "bl rsym.gdImageCreateTrueColor",
            "mov r4, r0",
            "cmp r4, 0",
            "beq 0xb1b0",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, r6",
            "bl rsym._gdGetColors",
            "subs r3, r0, 0",
            "beq 0xb334",
            "movw r3, 0x1c38",
            "ldr r8, [r4, r3]",
            "cmp r8, 0",
            "beq 0xb2a4",
            "ldr r2, [sp, 8]",
            "cmp r2, 0",
            "ble 0xb1b0",
            "ldr r3, [sp, 0xc]",
            "mov sb, 0",
            "add r7, sp, 4",
            "movw sl, 0x1c3c",
            "cmp r3, 0",
            "lslgt r8, sb, 2",
            "movgt r6, 0",
            "bgt 0xb280",
            "b 0xb2fc",
            "ldr r3, [r4, sl]",
            "ldr r2, [sp, 4]",
            "ldr r3, [r3, r8]",
            "str r2, [r3, r6, lsl 2]",
            "add r6, r6, 1",
            "ldr r3, [sp, 0xc]",
            "cmp r3, r6",
            "ble 0xb2f8",
            "mov r0, r7",
            "mov r1, r5",
            "bl rsym.gdGetInt",
            "cmp r0, 0",
            "bne 0xb260",
            "mov r0, r4",
            "mov r4, 0",
            "bl rsym.gdImageDestroy",
            "b 0xb1b0",
            "ldr r2, [sp, 8]",
            "cmp r2, 0",
            "ldrgt r3, [sp, 0xc]",
            "ble 0xb1b0",
            "cmp r3, 0",
            "lslgt r7, r8, 2",
            "movgt r6, 0",
            "bgt 0xb2e4",
            "b 0xb310",
            "ldr r3, [r4]",
            "ldr r3, [r3, r7]",
            "strb r0, [r3, r6]",
            "add r6, r6, 1",
            "ldr r3, [sp, 0xc]",
            "cmp r3, r6",
            "ble 0xb30c",
            "mov r0, r5",
            "bl rsym.gdGetC",
            "cmn r0, 1",
            "bne 0xb2c8",
            "b 0xb294",
            "ldr r2, [sp, 8]",
            "add sb, sb, 1",
            "cmp r2, sb",
            "bgt 0xb24c",
            "b 0xb1b0",
            "ldr r2, [sp, 8]",
            "add r8, r8, 1",
            "cmp r2, r8",
            "bgt 0xb2b4",
            "b 0xb1b0",
            "ldr r0, [sp, 0xc]",
            "ldr r1, [sp, 8]",
            "bl rsym.gdImageCreate",
            "mov r4, r0",
            "b 0xb200",
            "mov r0, r4",
            "mov r4, r3",
            "bl rsym.gdImageDestroy",
            "b 0xb1b0"
        ]
    },
    "sym.gdImageCreateFromWBMPPtr": {
        "function_address": "0x000129d0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0",
            "bl rsym.gdNewDynamicCtxEx",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0x129fc",
            "bl rsym.gdImageCreateFromWBMPCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageDestroy": {
        "function_address": "0x00003fa0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "beq 0x3fec",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "ble 0x3fe8",
            "mov r5, 0",
            "b 0x3fcc",
            "ldr r0, [r4]",
            "ldr r0, [r0, r5, lsl 2]",
            "add r5, r5, 1",
            "bl rsym.gdFree",
            "ldr r3, [r4, 8]",
            "cmp r3, r5",
            "bgt 0x3fc8",
            "ldr r0, [r4]",
            "bl rsym.gdFree",
            "movw r6, 0x1c3c",
            "ldr r0, [r4, r6]",
            "cmp r0, 0",
            "beq 0x4038",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "ble 0x4034",
            "mov r5, 0",
            "b 0x4014",
            "ldr r0, [r4, r6]",
            "ldr r0, [r0, r5, lsl 2]",
            "add r5, r5, 1",
            "bl rsym.gdFree",
            "ldr r3, [r4, 8]",
            "cmp r3, r5",
            "bgt 0x4010",
            "movw r3, 0x1c3c",
            "ldr r0, [r4, r3]",
            "bl rsym.gdFree",
            "movw r3, 0x1014",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "beq 0x404c",
            "bl rsym.gdFree",
            "movw r3, 0x182c",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "beq 0x4060",
            "bl rsym.gdFree",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b rsym.gdFree"
        ]
    },
    "sym.gdImageCreateFromPngPtr": {
        "function_address": "0x0001033c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0",
            "bl rsym.gdNewDynamicCtxEx",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0x10368",
            "bl rsym.gdImageCreateFromPngCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdDPExtractData": {
        "function_address": "0x0000d160",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r4, [r0, 0x1c]",
            "ldr r6, [r4, 0xc]",
            "cmp r6, 0",
            "beq 0xd1ac",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0xd190",
            "mov r0, r4",
            "ldr r1, [r4, 4]",
            "bl fcn.0000cde8",
            "ldm r4, {r0, r3}",
            "str r3, [r5]",
            "mov r3, 0",
            "str r3, [r4]",
            "str r3, [r4, 8]",
            "str r3, [r4, 4]",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [r4]",
            "str r6, [r1]",
            "cmp r0, 0",
            "beq 0xd198",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "moveq r0, r3",
            "beq 0xd198",
            "bl rsym.gdFree",
            "mov r0, r6",
            "b 0xd198"
        ]
    },
    "fcn.0000cde8": {
        "function_address": "0x0000cde8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r0, [r0]",
            "mov r5, r1",
            "bl rsym.gdRealloc",
            "subs r3, r0, 0",
            "strne r5, [r4, 8]",
            "movne r0, 1",
            "strne r3, [r4]",
            "popne {r4, r5, r6, pc}",
            "mov r0, r5",
            "bl rsym.gdMalloc",
            "subs r6, r0, 0",
            "streq r6, [r4, 0xc]",
            "moveq r0, r6",
            "popeq {r4, r5, r6, pc}",
            "ldm r4, {r1, r2}",
            "bl sym.imp.memcpy",
            "ldr r0, [r4]",
            "bl rsym.gdFree",
            "mov r0, 1",
            "str r6, [r4]",
            "str r5, [r4, 8]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x000030e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x98]!"
        ]
    },
    "sym.createwbmp": {
        "function_address": "0x000138f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "mov r0, 0x10",
            "mov r5, r1",
            "mov r6, r2",
            "bl rsym.gdMalloc",
            "subs r7, r0, 0",
            "beq 0x13978",
            "mov r0, 4",
            "mov r1, r4",
            "bl rsym.overflow2",
            "subs sl, r0, 0",
            "bne 0x13980",
            "lsl r8, r4, 2",
            "mov r1, r5",
            "mov r0, r8",
            "bl rsym.overflow2",
            "subs sb, r0, 0",
            "bne 0x13990",
            "mul r0, r8, r5",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "mov r3, r0",
            "str r0, [r7, 0xc]",
            "beq 0x139a0",
            "mul r2, r4, r5",
            "stmib r7, {r4, r5}",
            "cmp r2, 0",
            "ble 0x13978",
            "add sb, sb, 1",
            "str r6, [r3], 4",
            "cmp sb, r2",
            "bne 0x13968",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r7",
            "mov r7, 0",
            "bl rsym.gdFree",
            "b 0x13978",
            "mov r0, r7",
            "mov r7, sl",
            "bl rsym.gdFree",
            "b 0x13978",
            "mov r0, r7",
            "mov r7, r3",
            "bl rsym.gdFree",
            "b 0x13978"
        ]
    },
    "sym.gdImageCreateFromGd2": {
        "function_address": "0x0000c330",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "bl rsym.gdImageCreateFromGd2Ctx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageGetTrueColorPixel": {
        "function_address": "0x00004c34",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl rsym.gdImageGetPixel",
            "movw r3, 0x1c38",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "movw r3, 0x1010",
            "add r2, r0, 0x104",
            "ldr r3, [r4, r3]",
            "ldr r1, [r4, r2, lsl 2]",
            "cmp r3, r0",
            "addne r3, r0, 0x600",
            "moveq ip, 0x7f000000",
            "addne r3, r3, 0xe",
            "ldrne ip, [r4, r3, lsl 2]",
            "add r3, r0, 4",
            "ldr r2, [r4, r3, lsl 2]",
            "add r0, r0, 0x204",
            "ldr r3, [r4, r0, lsl 2]",
            "lsl r0, r1, 8",
            "lslne ip, ip, 0x18",
            "add r0, r0, r2, lsl 16",
            "add r0, r0, r3",
            "add r0, r0, ip",
            "pop {r4, pc}"
        ]
    },
    "sym.gdImageCreateFromGif": {
        "function_address": "0x0000ddb0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "bl rsym.gdImageCreateFromGifCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageGifAnimAddCtx": {
        "function_address": "0x0000ee1c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r3",
            "movw r3, 0x1830",
            "sub sp, sp, 0x450",
            "movw ip, 0x1c38",
            "sub sp, sp, 4",
            "ldr r3, [r0, r3]",
            "mov r4, r0",
            "ldr ip, [r0, ip]",
            "mov r6, r2",
            "str r1, [sp, 0x4c]",
            "str r3, [sp, 0x48]",
            "movw r3, 0x1010",
            "ldr r3, [r0, r3]",
            "cmp ip, 0",
            "ldr r8, [sp, 0x478]",
            "ldr r7, [sp, 0x480]",
            "ldr r5, [sp, 0x484]",
            "str r3, [sp, 0x34]",
            "streq ip, [sp, 0x38]",
            "bne 0xf3a4",
            "cmp r5, 0",
            "bic r6, r6, r6, asr 31",
            "str r6, [sp, 0x40]",
            "beq 0xf230",
            "movw r3, 0x1c38",
            "ldr r1, [r4, 8]",
            "ldr r3, [r5, r3]",
            "str r1, [sp, 0x2c]",
            "cmp r3, 0",
            "bne 0xf3c4",
            "ldr r1, [sp, 0x2c]",
            "str r3, [sp, 0x44]",
            "add r6, sp, 0x50",
            "mvn r0, 1",
            "sub r3, r6, 4",
            "add r2, r6, 0x3fc",
            "str r0, [r3, 4]!",
            "cmp r3, r2",
            "bne 0xeeb0",
            "cmp r1, 0",
            "movle fp, 0",
            "ldrle r2, [r4, 8]",
            "strle fp, [sp, 0x30]",
            "ble 0xef44",
            "ldr r3, [r4, 4]",
            "mov sl, 0",
            "mov r8, r6",
            "cmp r3, 0",
            "lslgt r6, sl, 2",
            "movgt r7, 0",
            "bgt 0xef00",
            "b 0xf2bc",
            "ldr r3, [r4, 4]",
            "add r7, r7, 1",
            "cmp r3, r7",
            "ble 0xf2bc",
            "ldr r2, [r5]",
            "mov r0, r5",
            "ldr r3, [r4]",
            "mov r1, r4",
            "ldr r2, [r2, r6]",
            "ldr r3, [r3, r6]",
            "ldrb r2, [r2, r7]",
            "ldrb r3, [r3, r7]",
            "str r8, [sp]",
            "bl fcn.0000df44",
            "cmp r0, 0",
            "bne 0xeef0",
            "ldr r2, [r4, 8]",
            "mov r6, r8",
            "mov fp, sl",
            "str sl, [sp, 0x2c]",
            "str r7, [sp, 0x30]",
            "ldr r3, [sp, 0x2c]",
            "cmp r2, r3",
            "beq 0xf3ec",
            "sub sl, r2, 1",
            "cmp r3, sl",
            "bge 0xf318",
            "ldr r3, [r4, 4]",
            "lsl r8, sl, 2",
            "cmp r3, 0",
            "movgt r7, 0",
            "bgt 0xef84",
            "b 0xf304",
            "ldr r3, [r4, 4]",
            "add r7, r7, 1",
            "cmp r3, r7",
            "ble 0xf304",
            "ldr r2, [r5]",
            "mov r0, r5",
            "ldr r3, [r4]",
            "mov r1, r4",
            "ldr r2, [r2, r8]",
            "ldr r3, [r3, r8]",
            "ldrb r2, [r2, r7]",
            "ldrb r3, [r3, r7]",
            "str r6, [sp]",
            "bl fcn.0000df44",
            "cmp r0, 0",
            "bne 0xef74",
            "ldr sb, [sp, 0x30]",
            "ldr r8, [sp, 0x30]",
            "cmp sb, r7",
            "movge sb, r7",
            "cmp r8, r7",
            "movge fp, sl",
            "blt 0xf384",
            "cmp sb, 0",
            "ble 0xf04c",
            "ldr r1, [sp, 0x2c]",
            "mov sl, 0",
            "mov r8, r6",
            "lsl r1, r1, 2",
            "str r1, [sp, 0x3c]",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, fp",
            "bgt 0xf2f0",
            "ldr r6, [sp, 0x3c]",
            "mov r7, r2",
            "b 0xf00c",
            "cmp fp, r7",
            "blt 0xf2f0",
            "ldr r2, [r5]",
            "mov r0, r5",
            "ldr r3, [r4]",
            "mov r1, r4",
            "add r7, r7, 1",
            "ldr r2, [r2, r6]",
            "ldr r3, [r3, r6]",
            "add r6, r6, 4",
            "ldrb r2, [r2, sl]",
            "ldrb r3, [r3, sl]",
            "str r8, [sp]",
            "bl fcn.0000df44",
            "cmp r0, 0",
            "bne 0xf004",
            "mov r6, r8",
            "mov sb, sl",
            "ldr sl, [r4, 4]",
            "ldr r3, [sp, 0x30]",
            "sub sl, sl, 1",
            "cmp r3, sl",
            "bge 0xf0cc",
            "ldr r1, [sp, 0x2c]",
            "mov r8, r6",
            "lsl r1, r1, 2",
            "str r1, [sp, 0x3c]",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, fp",
            "bgt 0xf2dc",
            "ldr r6, [sp, 0x3c]",
            "mov r7, r2",
            "b 0xf090",
            "cmp fp, r7",
            "blt 0xf2dc",
            "ldr r2, [r5]",
            "mov r0, r5",
            "ldr r3, [r4]",
            "mov r1, r4",
            "add r7, r7, 1",
            "ldr r2, [r2, r6]",
            "ldr r3, [r3, r6]",
            "add r6, r6, 4",
            "ldrb r2, [r2, sl]",
            "ldrb r3, [r3, sl]",
            "str r8, [sp]",
            "bl fcn.0000df44",
            "cmp r0, 0",
            "bne 0xf088",
            "str sl, [sp, 0x30]",
            "cmp sb, 0",
            "bne 0xf408",
            "ldr r3, [r4, 4]",
            "ldr r1, [sp, 0x30]",
            "ldr r2, [sp, 0x2c]",
            "sub r3, r3, 1",
            "cmp r2, 0",
            "cmpeq r3, r1",
            "rsbne r3, r2, 1",
            "addne r7, r1, 1",
            "addne fp, r3, fp",
            "beq 0xf320",
            "mov r0, r7",
            "mov r1, fp",
            "bl rsym.gdImageCreate",
            "subs r6, r0, 0",
            "beq 0xf36c",
            "ldr r3, [sp, 0x40]",
            "cmp r3, 0",
            "moveq r1, r5",
            "movne r1, r4",
            "bl rsym.gdImagePaletteCopy",
            "ldr r8, [sp, 0x2c]",
            "mov r2, 0",
            "mov r0, r6",
            "mov r1, r4",
            "mov r3, r2",
            "str sb, [sp]",
            "str r8, [sp, 4]",
            "str r7, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl rsym.gdImageCopy",
            "ldr ip, [sp, 0x38]",
            "cmp ip, 0",
            "beq 0xf160",
            "mov r0, ip",
            "bl rsym.gdImageDestroy",
            "ldr r1, [sp, 0x34]",
            "cmp r1, 0",
            "blt 0xf20c",
            "ldr r3, [r6, 8]",
            "cmp r3, 0",
            "ble 0xf20c",
            "ldr r2, [sp, 0x2c]",
            "mov fp, 0",
            "mov sl, fp",
            "lsl r7, r2, 2",
            "ldr r2, [r6, 4]",
            "cmp r2, 0",
            "lslgt r8, fp, 2",
            "movgt r4, 0",
            "bgt 0xf1b0",
            "b 0xf1fc",
            "ldr r3, [r6, 4]",
            "add r4, r4, 1",
            "cmp r3, r4",
            "ble 0xf39c",
            "ldr r2, [r5]",
            "mov r0, r5",
            "ldr r3, [r6]",
            "mov r1, r6",
            "ldr r2, [r2, r7]",
            "ldr r3, [r3, r8]",
            "add r2, r2, sb",
            "ldrb r2, [r2, r4]",
            "ldrb r3, [r3, r4]",
            "str sl, [sp]",
            "bl fcn.0000df44",
            "cmp r0, 0",
            "beq 0xf1a0",
            "ldr r3, [sp, 0x34]",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, fp",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r6, 8]",
            "add fp, fp, 1",
            "add r7, r7, 4",
            "cmp r3, fp",
            "bgt 0xf188",
            "mov r4, r6",
            "str r6, [sp, 0x38]",
            "ldr r3, [sp, 0x44]",
            "cmp r3, 0",
            "beq 0xf390",
            "mov r7, 1",
            "mov r0, r3",
            "ldr r8, [sp, 0x2c]",
            "bl rsym.gdImageDestroy",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0000ddd8",
            "ldr r1, [r4, 4]",
            "mov r6, r0",
            "ldr r2, [r4, 8]",
            "add lr, r4, 0x410",
            "str r8, [sp]",
            "mov r3, sb",
            "ldr r8, [sp, 0x48]",
            "ldr ip, [sp, 0x40]",
            "ldr r0, [sp, 0x4c]",
            "str r8, [sp, 4]",
            "ldr r8, [sp, 0x34]",
            "cmp ip, 0",
            "ldreq r5, [sp, 0x40]",
            "addne r5, r4, 0x10",
            "add ip, r4, 0x810",
            "str r7, [sp, 0x10]",
            "str r8, [sp, 8]",
            "ldr r8, [sp, 0x47c]",
            "str r6, [sp, 0x14]",
            "str r5, [sp, 0x18]",
            "str r8, [sp, 0xc]",
            "str lr, [sp, 0x1c]",
            "str ip, [sp, 0x20]",
            "str r4, [sp, 0x24]",
            "bl fcn.0000e51c",
            "ldr ip, [sp, 0x38]",
            "cmp ip, 0",
            "beq 0xf2b0",
            "mov r0, ip",
            "bl rsym.gdImageDestroy",
            "add sp, sp, 0x54",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r4, 8]",
            "add sl, sl, 1",
            "cmp r2, sl",
            "bgt 0xeedc",
            "mov fp, 0",
            "mov r6, r8",
            "str fp, [sp, 0x30]",
            "b 0xef44",
            "ldr ip, [sp, 0x30]",
            "sub sl, sl, 1",
            "cmp ip, sl",
            "blt 0xf070",
            "b 0xf0cc",
            "add sl, sl, 1",
            "cmp sb, sl",
            "bgt 0xefec",
            "mov r6, r8",
            "b 0xf04c",
            "ldr ip, [sp, 0x2c]",
            "sub sl, sl, 1",
            "sub r8, r8, 4",
            "cmp ip, sl",
            "blt 0xef64",
            "ldr sb, [sp, 0x30]",
            "b 0xefd0",
            "ldr r2, [r4, 8]",
            "ldr r8, [sp, 0x34]",
            "sub r2, r2, 1",
            "mvn r3, r8",
            "lsr r3, r3, 0x1f",
            "cmp fp, r2",
            "orrne r3, r3, 1",
            "cmp r3, 0",
            "streq sb, [sp, 0x2c]",
            "beq 0xf214",
            "ldr ip, [sp, 0x30]",
            "add fp, fp, 1",
            "mov r1, fp",
            "str sb, [sp, 0x2c]",
            "add r7, ip, 1",
            "mov r0, r7",
            "bl rsym.gdImageCreate",
            "subs r6, r0, 0",
            "bne 0xf110",
            "ldr r2, [sp, 0x44]",
            "cmp r2, 0",
            "beq 0xf29c",
            "mov r0, r2",
            "bl rsym.gdImageDestroy",
            "b 0xf29c",
            "mov fp, sl",
            "str r7, [sp, 0x30]",
            "b 0xefd0",
            "ldr r8, [sp, 0x2c]",
            "mov r7, 1",
            "b 0xf230",
            "ldr r3, [r6, 8]",
            "b 0xf1fc",
            "mov r1, 1",
            "mov r2, 0x100",
            "bl rsym.gdImageCreatePaletteFromTrueColor",
            "cmp r0, 0",
            "str r0, [sp, 0x38]",
            "movne r4, r0",
            "bne 0xee70",
            "b 0xf2b0",
            "mov r0, r5",
            "mov r1, 1",
            "mov r2, 0x100",
            "bl rsym.gdImageCreatePaletteFromTrueColor",
            "cmp r0, 0",
            "str r0, [sp, 0x44]",
            "beq 0xf2b0",
            "ldr r1, [r4, 8]",
            "mov r5, r0",
            "b 0xeea0",
            "mov fp, 0",
            "mov r1, 1",
            "str r1, [sp, 0x2c]",
            "mov r7, fp",
            "mov sb, r1",
            "str fp, [sp, 0x34]",
            "b 0xf0fc",
            "ldr r8, [sp, 0x2c]",
            "rsb r7, sb, 1",
            "ldr ip, [sp, 0x30]",
            "rsb r3, r8, 1",
            "add r7, r7, ip",
            "add fp, r3, fp",
            "b 0xf0fc"
        ]
    },
    "fcn.0000df44": {
        "function_address": "0x0000df44",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0xc",
            "ldr r4, [sp, 0x20]",
            "mov ip, r0",
            "mov r5, r2",
            "mov r6, r3",
            "cmp r4, 0",
            "beq 0xdfd0",
            "ldr r0, [r4, r2, lsl 2]",
            "cmn r0, 2",
            "beq 0xdf84",
            "cmp r3, r0",
            "movne r0, 0",
            "moveq r0, 1",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "add r0, r2, 4",
            "add lr, r5, 0x600",
            "ldr r7, [ip, r0, lsl 2]",
            "add lr, lr, 0xe",
            "add r2, r2, 0x104",
            "add r3, r5, 0x204",
            "ldr r3, [ip, r3, lsl 2]",
            "mov r0, r1",
            "ldr r2, [ip, r2, lsl 2]",
            "mov r1, r7",
            "ldr ip, [ip, lr, lsl 2]",
            "str ip, [sp]",
            "bl rsym.gdImageColorExactAlpha",
            "mov r3, r0",
            "cmp r6, r0",
            "movne r0, 0",
            "moveq r0, 1",
            "str r3, [r4, r5, lsl 2]",
            "b 0xdf7c",
            "cmp r2, r3",
            "movne r0, 0",
            "moveq r0, 1",
            "b 0xdf7c"
        ]
    },
    "rsym.gdImagePaletteCopy": {
        "function_address": "0x000032e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf40]!"
        ]
    },
    "fcn.0000ddd8": {
        "function_address": "0x0000ddd8",
        "instructions": [
            "cmp r0, 2",
            "movle r0, 1",
            "bxle lr",
            "cmp r0, 4",
            "movle r0, 2",
            "bxle lr",
            "cmp r0, 8",
            "movle r0, 3",
            "bxle lr",
            "cmp r0, 0x10",
            "movle r0, 4",
            "bxle lr",
            "cmp r0, 0x20",
            "movle r0, 5",
            "bxle lr",
            "cmp r0, 0x40",
            "movle r0, 6",
            "bxle lr",
            "cmp r0, 0x80",
            "movle r0, 7",
            "bxle lr",
            "cmp r0, 0x100",
            "movgt r0, 0",
            "movle r0, 8",
            "bx lr"
        ]
    },
    "fcn.0000e51c": {
        "function_address": "0x0000e51c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x7600",
            "sub sp, sp, 0xbc",
            "bic r3, r3, r3, asr 31",
            "add r6, sp, 0x7000",
            "add r5, sp, 0x20",
            "str r3, [sp, 0xc]",
            "mov r4, r0",
            "ldr r3, [r6, 0x6e0]",
            "add lr, sp, 0x7000",
            "ldr ip, [r6, 0x6ec]",
            "mov sb, r1",
            "mov fp, r2",
            "mov r1, 0",
            "movw r2, 0x7698",
            "bic r3, r3, r3, asr 31",
            "mov r0, r5",
            "ldr sl, [r6, 0x6f4]",
            "ldr r7, [lr, 0x6fc]",
            "ldr r8, [lr, 0x700]",
            "ldr r6, [r6, 0x6f8]",
            "str r3, [sp, 0x10]",
            "str ip, [sp, 4]",
            "bl sym.imp.memset",
            "ldr ip, [sp, 4]",
            "add r3, sp, 0x7000",
            "ldr r3, [r3, 0x6f0]",
            "mov r0, 0x21",
            "str fp, [r5, 4]",
            "cmp ip, 0",
            "uxtbge r1, ip",
            "movlt r2, 0x64",
            "ubfxge ip, ip, 8, 8",
            "strlt r2, [sp, 0x1c]",
            "movlt ip, 0",
            "strge r1, [sp, 0x1c]",
            "cmp r3, 0",
            "mul r2, sb, fp",
            "movge lr, r3",
            "movlt r1, 4",
            "lslge r3, lr, 2",
            "strlt r1, [sp, 0x14]",
            "add lr, sp, 0x7600",
            "uxtbge r3, r3",
            "add lr, lr, 0xb8",
            "str r2, [r5, 0x10]",
            "strge r3, [sp, 0x14]",
            "cmp sl, 1",
            "uxtbgt r1, sl",
            "movw r3, 0x8968",
            "movt r3, 0xffff",
            "addgt r2, sl, 1",
            "str sb, [lr, r3]",
            "strgt r1, [sp, 8]",
            "movle r3, 3",
            "movle lr, 2",
            "mov r1, r4",
            "strgt r2, [sp, 0x18]",
            "strle r3, [sp, 0x18]",
            "strle lr, [sp, 8]",
            "str ip, [sp, 4]",
            "bl rsym.gdPutC",
            "mov r0, 0xf9",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 4",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add r1, sp, 0x7000",
            "ldr r0, [sp, 0x14]",
            "ldr r1, [r1, 0x6e8]",
            "cmp r1, 0",
            "orrge r0, r0, 1",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldr r0, [sp, 0x1c]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldr ip, [sp, 4]",
            "mov r1, r4",
            "mov r0, ip",
            "bl rsym.gdPutC",
            "add r2, sp, 0x7600",
            "mov r1, r4",
            "ldrb r0, [r2, 0xe8]",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0x2c",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r1, r4",
            "ldr r0, [sp, 0xc]",
            "bl fcn.0000df1c",
            "mov r1, r4",
            "ldr r0, [sp, 0x10]",
            "bl fcn.0000df1c",
            "movw r3, 0x8968",
            "add lr, sp, 0x7600",
            "movt r3, 0xffff",
            "add lr, lr, 0xb8",
            "mov r1, r4",
            "ldr r0, [lr, r3]",
            "bl fcn.0000df1c",
            "mov r1, r4",
            "ldr r0, [r5, 4]",
            "bl fcn.0000df1c",
            "cmp r7, 0",
            "cmpne r6, 0",
            "moveq r2, 0",
            "movne r2, 1",
            "moveq r1, r2",
            "beq 0xe6f0",
            "cmp r8, 0",
            "moveq r1, r8",
            "movne r1, 0x80",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "movne r3, 0x40",
            "cmp r2, 0",
            "orr r3, r3, r1",
            "beq 0xe774",
            "cmp r8, 0",
            "beq 0xe774",
            "sub r1, sl, 1",
            "mov r2, 1",
            "orr r3, r3, r1",
            "lsl sl, r2, sl",
            "uxtb r0, r3",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "cmp sl, 0",
            "ble 0xe780",
            "mov sb, 0",
            "mov fp, sb",
            "ldrb r0, [r6, sb]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldrb r0, [r7, sb]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add fp, fp, 1",
            "ldrb r0, [r8, sb]",
            "mov r1, r4",
            "add sb, sb, 4",
            "bl rsym.gdPutC",
            "cmp sl, fp",
            "bgt 0xe73c",
            "b 0xe780",
            "uxtb r0, r3",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldr r0, [sp, 8]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add r3, sp, 0x7000",
            "ldr r0, [sp, 0x18]",
            "mov r1, r4",
            "ldr r2, [r3, 0x704]",
            "mov r3, r5",
            "bl fcn.0000e2c4",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add sp, sp, 0x2bc",
            "add sp, sp, 0x7400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.gdImageCreatePaletteFromTrueColor": {
        "function_address": "0x00003138",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x60]!"
        ]
    },
    "sym.gdImageCreateFromGifCtx": {
        "function_address": "0x0000d9e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x730",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "add r4, sp, 0x720",
            "mov r7, 0",
            "ldr r6, [0x0000dd6c]",
            "mov r0, r4",
            "mov r1, 6",
            "mov r2, r5",
            "str r7, [sp, 0x730]",
            "bl rsym.gdGetBuf",
            "cmp r0, r7",
            "add r6, pc, r6",
            "bgt 0xda34",
            "mov r4, r7",
            "mov r0, r4",
            "add sp, sp, 0x33c",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [0x0000dd70]",
            "mov r0, r4",
            "mov r2, 3",
            "add r1, r6, r1",
            "bl sym.imp.strncmp",
            "subs r8, r0, 0",
            "bne 0xda20",
            "ldr r1, [0x0000dd74]",
            "add r7, r4, 3",
            "mov r0, r7",
            "mov r2, 3",
            "add r1, r6, r1",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0xda90",
            "ldr r1, [0x0000dd78]",
            "mov r0, r7",
            "mov r2, 3",
            "add r1, r6, r1",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "movne r4, r8",
            "bne 0xda24",
            "mov r0, r4",
            "mov r1, 7",
            "mov r2, r5",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xdbec",
            "ldrb r3, [sp, 0x724]",
            "ldrb r8, [sp, 0x721]",
            "ldrb r7, [sp, 0x720]",
            "ldrb sl, [sp, 0x723]",
            "lsrs fp, r3, 7",
            "ldrb sb, [sp, 0x722]",
            "bne 0xdbc8",
            "add r6, sp, 0x730",
            "mvn r3, 0",
            "add r6, r6, 7",
            "str r3, [sp, 0x1c]",
            "add ip, sp, 0x620",
            "add r3, sp, 0x730",
            "str ip, [sp, 0x14]",
            "str r3, [sp, 0x18]",
            "mov r0, r6",
            "mov r1, 1",
            "mov r2, r5",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xdbec",
            "ldrb r3, [sp, 0x737]",
            "cmp r3, 0x3b",
            "beq 0xdbec",
            "cmp r3, 0x21",
            "beq 0xdbf4",
            "cmp r3, 0x2c",
            "bne 0xdae4",
            "mov r0, r4",
            "mov r1, 9",
            "mov r2, r5",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xdbec",
            "ldrb r2, [sp, 0x725]",
            "orr r8, r7, r8, lsl 8",
            "ldrb r1, [sp, 0x721]",
            "ldrb r6, [sp, 0x724]",
            "ldrb r3, [sp, 0x720]",
            "ldrb r7, [sp, 0x728]",
            "ldrb ip, [sp, 0x722]",
            "orr r6, r6, r2, lsl 8",
            "ldrb r0, [sp, 0x727]",
            "orr r3, r3, r1, lsl 8",
            "ldrb r2, [sp, 0x723]",
            "ldrb r1, [sp, 0x726]",
            "add r3, r6, r3",
            "cmp r8, r3",
            "blt 0xdbec",
            "orr r8, r1, r0, lsl 8",
            "orr r3, ip, r2, lsl 8",
            "orr sl, sb, sl, lsl 8",
            "add r3, r8, r3",
            "cmp sl, r3",
            "blt 0xdbec",
            "mov r0, r6",
            "mov r1, r8",
            "bl rsym.gdImageCreate",
            "subs r4, r0, 0",
            "beq 0xda24",
            "ldrb ip, [sp, 0x728]",
            "tst r7, 0x80",
            "movw r3, 0x1830",
            "ubfx ip, ip, 6, 1",
            "str ip, [r4, r3]",
            "bne 0xdd14",
            "cmp fp, 0",
            "bne 0xdc78",
            "mov r0, r4",
            "mov r4, 0",
            "bl rsym.gdImageDestroy",
            "b 0xda24",
            "and r3, r3, 7",
            "mov r1, 2",
            "add r2, sp, 0x328",
            "mov r0, r5",
            "lsl r1, r1, r3",
            "sub r2, r2, 8",
            "bl fcn.0000d74c",
            "cmp r0, 0",
            "beq 0xdac4",
            "mov r4, 0",
            "b 0xda24",
            "mov r0, r6",
            "mov r1, 1",
            "mov r2, r5",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xdbec",
            "ldrb r3, [sp, 0x737]",
            "cmp r3, 0xf9",
            "beq 0xdc34",
            "mov r0, r5",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "bl fcn.0000d1d8",
            "cmp r0, 0",
            "bgt 0xdc18",
            "b 0xdae4",
            "ldr r1, [sp, 0x14]",
            "mov ip, 0",
            "mov r0, r5",
            "ldr r2, [sp, 0x18]",
            "str ip, [r1]",
            "bl fcn.0000d1d8",
            "ldrb r3, [sp, 0x620]",
            "tst r3, 1",
            "ldrbne r3, [sp, 0x623]",
            "strne r3, [sp, 0x1c]",
            "mov r0, r5",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "bl fcn.0000d1d8",
            "cmp r0, 0",
            "bgt 0xdc5c",
            "b 0xdae4",
            "add lr, sp, 0x320",
            "str ip, [sp, 4]",
            "mov r0, r4",
            "add ip, sp, 0x730",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r8",
            "str lr, [sp]",
            "str ip, [sp, 8]",
            "bl fcn.0000d7c0",
            "ldr ip, [sp, 0x1c]",
            "cmn ip, 1",
            "beq 0xdcb8",
            "mov r0, r4",
            "mov r1, ip",
            "bl rsym.gdImageColorTransparent",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "beq 0xdd04",
            "subs r3, r3, 1",
            "bmi 0xda24",
            "add r2, r3, 0x304",
            "ldr r1, [r4, r2, lsl 2]",
            "cmp r1, 0",
            "addne r2, r4, r2, lsl 2",
            "bne 0xdcf4",
            "b 0xda24",
            "ldr r0, [r2, -4]!",
            "cmp r0, 0",
            "beq 0xdcfc",
            "mov r3, r1",
            "subs r1, r3, 1",
            "bpl 0xdce4",
            "str r3, [r4, 0xc]",
            "b 0xda24",
            "mov r0, r4",
            "mov r4, r3",
            "bl rsym.gdImageDestroy",
            "b 0xda24",
            "and r3, r7, 7",
            "mov r1, 1",
            "add r3, r3, 1",
            "add r7, sp, 0x20",
            "mov r0, r5",
            "lsl r1, r1, r3",
            "mov r2, r7",
            "bl fcn.0000d74c",
            "cmp r0, 0",
            "bne 0xdbb8",
            "ldrb ip, [sp, 0x728]",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r8",
            "str r7, [sp]",
            "ubfx ip, ip, 6, 1",
            "str ip, [sp, 4]",
            "add ip, sp, 0x730",
            "str ip, [sp, 8]",
            "bl fcn.0000d7c0",
            "b 0xdca0"
        ]
    },
    "rsym.gdGetBuf": {
        "function_address": "0x000035b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd60]!"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x0000333c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf08]!"
        ]
    },
    "sym.imp.memcmp": {
        "function_address": "0x0000336c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xee8]!"
        ]
    },
    "fcn.0000d74c": {
        "function_address": "0x0000d74c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r8, r1, 0",
            "sub sp, sp, 8",
            "mov r6, r0",
            "ble 0xd7b4",
            "mov r4, r2",
            "mov r5, 0",
            "add r7, sp, 4",
            "b 0xd790",
            "ldrb r3, [sp, 5]",
            "cmp r8, r5",
            "ldrb r2, [sp, 4]",
            "strb r2, [r4], 1",
            "strb r3, [r4, 0xff]",
            "ldrb r3, [sp, 6]",
            "strb r3, [r4, 0x1ff]",
            "ble 0xd7b4",
            "mov r0, r7",
            "mov r1, 3",
            "mov r2, r6",
            "add r5, r5, 1",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "bgt 0xd770",
            "mov r0, 1",
            "b 0xd7b8",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0000d1d8": {
        "function_address": "0x0000d1d8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "sub sp, sp, 8",
            "mov r6, r1",
            "mov r5, r2",
            "add r0, sp, 7",
            "mov r1, 1",
            "mov r2, r4",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xd228",
            "ldrb r1, [sp, 7]",
            "cmp r1, 0",
            "movne r3, 0",
            "moveq r3, 1",
            "str r3, [r5]",
            "bne 0xd230",
            "mov r0, r1",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "b 0xd220",
            "mov r0, r6",
            "mov r2, r4",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xd228",
            "ldrb r1, [sp, 7]",
            "b 0xd21c"
        ]
    },
    "fcn.0000d7c0": {
        "function_address": "0x0000d7c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x10000",
            "movw r0, 0x167",
            "sub sp, sp, 0x16c",
            "mov r7, r1",
            "movt r0, 1",
            "mov sb, r2",
            "add r0, sp, r0",
            "mov r1, 1",
            "mov r2, r7",
            "mov sl, r3",
            "add r3, sp, 0x10000",
            "ldr r4, [r3, 0x190]",
            "ldr fp, [r3, 0x198]",
            "bl rsym.gdGetBuf",
            "cmp r0, 0",
            "ble 0xd930",
            "add ip, sp, 0x10000",
            "add ip, ip, 0x100",
            "ldrb ip, [ip, 0x67]",
            "cmp ip, 0xc",
            "str ip, [sp, 0xc]",
            "bhi 0xd930",
            "add ip, r5, 0x800",
            "add r0, r5, 0xc00",
            "add r8, r4, 0x100",
            "add r6, r4, 0x200",
            "mov r1, r5",
            "add ip, ip, 0xc",
            "add r0, r0, 0xc",
            "mov r3, 0",
            "mov r2, 1",
            "ldrb lr, [r4, r3]",
            "str lr, [r1, 0x10]",
            "ldrb lr, [r8, r3]",
            "str lr, [r1, 0x410]",
            "add r1, r1, 4",
            "ldrb lr, [r6, r3]",
            "add r3, r3, 1",
            "cmp r3, 0x100",
            "str r2, [r0, 4]!",
            "str lr, [ip, 4]!",
            "bne 0xd844",
            "add r8, sp, 0x168",
            "str r3, [r5, 0xc]",
            "sub r8, r8, 0x154",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r3, [sp, 0xc]",
            "str fp, [sp]",
            "bl fcn.0000d35c",
            "cmp r0, 0",
            "blt 0xd930",
            "mov r1, 0",
            "mov r6, r1",
            "mov r4, r1",
            "str r1, [sp, 0xc]",
            "add r1, sp, 0x10000",
            "mov r0, r7",
            "add r1, r1, 0x100",
            "mov r2, 0",
            "ldrb r3, [r1, 0x67]",
            "mov r1, r8",
            "str fp, [sp]",
            "bl fcn.0000d35c",
            "subs r3, r0, 0",
            "blt 0xd910",
            "cmp r3, 0xff",
            "mov r0, r5",
            "movgt r3, 0",
            "add r2, r3, 0x304",
            "ldr r1, [r5, r2, lsl 2]",
            "cmp r1, 0",
            "mov r1, r4",
            "movne ip, 0",
            "add r4, r4, 1",
            "strne ip, [r5, r2, lsl 2]",
            "mov r2, r6",
            "bl rsym.gdImageSetPixel",
            "cmp r4, sb",
            "beq 0xd93c",
            "cmp r6, sl",
            "blt 0xd8a8",
            "add r2, sp, 0x10000",
            "mov r0, r7",
            "add r2, r2, 0x100",
            "mov r1, r8",
            "ldrb r3, [r2, 0x67]",
            "mov r2, 0",
            "str fp, [sp]",
            "bl fcn.0000d35c",
            "add sp, sp, 0x16c",
            "add sp, sp, 0x10000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r1, sp, 0x10000",
            "ldr r1, [r1, 0x194]",
            "cmp r1, 0",
            "beq 0xd9ac",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 3",
            "addls pc, pc, r2, lsl 2",
            "b 0xd970",
            "b 0xd9c4",
            "b 0xd9c4",
            "b 0xd9bc",
            "b 0xd96c",
            "add r6, r6, 2",
            "cmp r6, sl",
            "movlt r4, 0",
            "blt 0xd8a8",
            "ldr r3, [sp, 0xc]",
            "add r3, r3, 1",
            "cmp r3, 2",
            "str r3, [sp, 0xc]",
            "beq 0xd9d8",
            "cmp r3, 3",
            "beq 0xd9cc",
            "cmp r3, 1",
            "bne 0xd910",
            "mov r6, 4",
            "mov r4, 0",
            "b 0xd908",
            "add ip, sp, 0x10000",
            "add r6, r6, 1",
            "ldr r4, [ip, 0x194]",
            "b 0xd908",
            "add r6, r6, 4",
            "b 0xd970",
            "add r6, r6, 8",
            "b 0xd970",
            "mov r6, 1",
            "mov r4, 0",
            "b 0xd908",
            "ldr r6, [sp, 0xc]",
            "mov r4, 0",
            "b 0xd908"
        ]
    },
    "rsym.gdImageColorTransparent": {
        "function_address": "0x000031d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xff8]!"
        ]
    },
    "sym.gdImageSubSharpen": {
        "function_address": "0x0000aac4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r3",
            "mov r5, r0",
            "ubfx r0, r1, 0x10, 8",
            "mov r8, r2",
            "mov r4, r1",
            "ldr r7, [sp, 0x20]",
            "bl fcn.00014a90",
            "mov r1, r6",
            "bl fcn.00014b3c",
            "ubfx r3, r5, 0x10, 8",
            "mov sl, r0",
            "ubfx r0, r8, 0x10, 8",
            "add r0, r0, r3",
            "bl fcn.00014a90",
            "mov r1, r7",
            "bl fcn.00014b3c",
            "mov r1, r0",
            "mov r0, sl",
            "bl fcn.000148f8",
            "mov sb, r0",
            "ubfx r0, r4, 8, 8",
            "bl fcn.00014a90",
            "mov r1, r6",
            "bl fcn.00014b3c",
            "ubfx r3, r5, 8, 8",
            "mov sl, r0",
            "ubfx r0, r8, 8, 8",
            "add r0, r0, r3",
            "bl fcn.00014a90",
            "mov r1, r7",
            "bl fcn.00014b3c",
            "mov r1, r0",
            "mov r0, sl",
            "bl fcn.000148f8",
            "mov sl, r0",
            "uxtb r0, r4",
            "bl fcn.00014a90",
            "mov r1, r6",
            "bl fcn.00014b3c",
            "mov r6, r0",
            "and r0, r5, 0xff",
            "uxtab r0, r0, r8",
            "bl fcn.00014a90",
            "mov r1, r7",
            "bl fcn.00014b3c",
            "mov r1, r0",
            "mov r0, r6",
            "bl fcn.000148f8",
            "mov r5, r0",
            "ubfx r0, r4, 0x18, 7",
            "bl fcn.00014a90",
            "mov r1, 0",
            "mov r4, r0",
            "movt r1, 0x437f",
            "mov r0, sb",
            "bl fcn.00014f1c",
            "cmp r0, 0",
            "movne sb, 0",
            "movne r7, 0",
            "movtne sb, 0x437f",
            "bne 0xabd8",
            "mov r0, sb",
            "mov r1, 0",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "mov r7, 1",
            "moveq r7, 0",
            "uxtb r7, r7",
            "mov r1, 0",
            "mov r0, sl",
            "movt r1, 0x437f",
            "bl fcn.00014f1c",
            "cmp r0, 0",
            "movne sl, 0",
            "movne r6, 0",
            "movtne sl, 0x437f",
            "bne 0xac18",
            "mov r0, sl",
            "mov r1, 0",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "mov r6, 1",
            "moveq r6, 0",
            "uxtb r6, r6",
            "mov r1, 0",
            "mov r0, r5",
            "movt r1, 0x437f",
            "bl fcn.00014f1c",
            "cmp r0, 0",
            "movne r5, 0",
            "movne r8, 0",
            "movtne r5, 0x437f",
            "bne 0xac58",
            "mov r0, r5",
            "mov r1, 0",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "mov r8, 1",
            "moveq r8, 0",
            "uxtb r8, r8",
            "cmp r7, 0",
            "movne r7, 0",
            "bne 0xac70",
            "mov r0, sb",
            "bl fcn.00014f30",
            "lsl r7, r0, 0x10",
            "cmp r6, 0",
            "movne r6, 0",
            "bne 0xac88",
            "mov r0, sl",
            "bl fcn.00014f30",
            "lsl r6, r0, 8",
            "cmp r8, 0",
            "movne r5, 0",
            "bne 0xaca0",
            "mov r0, r5",
            "bl fcn.00014f30",
            "mov r5, r0",
            "mov r0, r4",
            "bl fcn.00014f30",
            "add r7, r7, r0, lsl 24",
            "add r6, r7, r6",
            "add r0, r6, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00014a90": {
        "function_address": "0x00014a90",
        "instructions": [
            "ands r3, r0, 0x80000000",
            "rsbmi r0, r0, 0",
            "movs ip, r0",
            "bxeq lr",
            "orr r3, r3, 0x4b000000",
            "mov r1, r0",
            "mov r0, 0",
            "b 0x14af0",
            "sub r3, r3, 0x800000",
            "clz r2, ip",
            "subs r2, r2, 8",
            "sub r3, r3, r2, lsl 23",
            "blt 0x14b20",
            "add r3, r3, r1, lsl r2",
            "lsl ip, r0, r2",
            "rsb r2, r2, 0x20",
            "cmp ip, 0x80000000",
            "adc r0, r3, r0, lsr r2",
            "biceq r0, r0, 1",
            "bx lr",
            "add r2, r2, 0x20",
            "lsl ip, r1, r2",
            "rsb r2, r2, 0x20",
            "orrs r0, r0, ip, lsl 1",
            "adc r0, r3, r1, lsr r2",
            "biceq r0, r0, ip, lsr 31",
            "bx lr"
        ]
    },
    "fcn.00014b3c": {
        "function_address": "0x00014b3c",
        "instructions": [
            "mov ip, 0xff",
            "ands r2, ip, r0, lsr 23",
            "andsne r3, ip, r1, lsr 23",
            "teqne r2, ip",
            "teqne r3, ip",
            "beq 0x14c50",
            "add r2, r2, r3",
            "eor ip, r0, r1",
            "lsls r0, r0, 9",
            "lslsne r1, r1, 9",
            "beq 0x14bac",
            "mov r3, 0x8000000",
            "orr r0, r3, r0, lsr 5",
            "orr r1, r3, r1, lsr 5",
            "umull r3, r1, r0, r1",
            "and r0, ip, 0x80000000",
            "cmp r1, 0x800000",
            "lsllo r1, r1, 1",
            "orrlo r1, r1, r3, lsr 31",
            "lsllo r3, r3, 1",
            "orr r0, r0, r1",
            "sbc r2, r2, 0x7f",
            "cmp r2, 0xfd",
            "bhi 0x14bdc",
            "cmp r3, 0x80000000",
            "adc r0, r0, r2, lsl 23",
            "biceq r0, r0, 1",
            "bx lr",
            "teq r0, 0",
            "and ip, ip, 0x80000000",
            "lsleq r1, r1, 9",
            "orr r0, ip, r0, lsr 9",
            "orr r0, r0, r1, lsr 9",
            "subs r2, r2, 0x7f",
            "rsbsgt r3, r2, 0xff",
            "orrgt r0, r0, r2, lsl 23",
            "bxgt lr",
            "orr r0, r0, 0x800000",
            "mov r3, 0",
            "subs r2, r2, 1",
            "teq r2, 0",
            "and ip, r0, 0x80000000",
            "lsleq r0, r0, 1",
            "tsteq r0, 0x800000",
            "subeq r2, r2, 1",
            "beq 0x14c1c",
            "orr r0, r0, ip",
            "teq r3, 0",
            "and ip, r1, 0x80000000",
            "lsleq r1, r1, 1",
            "tsteq r1, 0x800000",
            "subeq r3, r3, 1",
            "beq 0x14c38",
            "orr r1, r1, ip",
            "b 0x14b54",
            "and r3, ip, r1, lsr 23",
            "teq r2, ip",
            "teqne r3, ip",
            "beq 0x14c78",
            "bics ip, r0, 0x80000000",
            "bicsne ip, r1, 0x80000000",
            "bne 0x14c14",
            "teq r0, 0",
            "teqne r0, 0x80000000",
            "moveq r0, r1",
            "teqne r1, 0",
            "teqne r1, 0x80000000",
            "beq 0x14cc8",
            "teq r2, ip",
            "bne 0x14ca0",
            "lsls r2, r0, 9",
            "bne 0x14cc8",
            "teq r3, ip",
            "bne 0x14cb4",
            "lsls r3, r1, 9",
            "movne r0, r1",
            "bne 0x14cc8"
        ]
    },
    "fcn.000148f8": {
        "function_address": "0x000148f8",
        "instructions": [
            "lsls r2, r0, 1",
            "lslsne r3, r1, 1",
            "teqne r2, r3",
            "mvnsne ip, r2, asr 24",
            "mvnsne ip, r3, asr 24",
            "beq 0x14a04",
            "lsr r2, r2, 0x18",
            "rsbs r3, r2, r3, lsr 24",
            "addgt r2, r2, r3",
            "eorgt r1, r0, r1",
            "eorgt r0, r1, r0",
            "eorgt r1, r0, r1",
            "rsblt r3, r3, 0",
            "cmp r3, 0x19",
            "bxhi lr",
            "tst r0, 0x80000000",
            "orr r0, r0, 0x800000",
            "bic r0, r0, 0xff000000",
            "rsbne r0, r0, 0",
            "tst r1, 0x80000000",
            "orr r1, r1, 0x800000",
            "bic r1, r1, 0xff000000",
            "rsbne r1, r1, 0",
            "teq r2, r3",
            "beq 0x149ec",
            "sub r2, r2, 1",
            "adds r0, r0, r1, asr r3",
            "rsb r3, r3, 0x20",
            "lsl r1, r1, r3",
            "and r3, r0, 0x80000000",
            "bpl 0x1497c",
            "rsbs r1, r1, 0",
            "rsc r0, r0, 0",
            "cmp r0, 0x800000",
            "blo 0x149b4",
            "cmp r0, 0x1000000",
            "blo 0x149a0",
            "lsrs r0, r0, 1",
            "rrx r1, r1",
            "add r2, r2, 1",
            "cmp r2, 0xfe",
            "bhs 0x14a58",
            "cmp r1, 0x80000000",
            "adc r0, r0, r2, lsl 23",
            "biceq r0, r0, 1",
            "orr r0, r0, r3",
            "bx lr",
            "lsls r1, r1, 1",
            "adc r0, r0, r0",
            "tst r0, 0x800000",
            "sub r2, r2, 1",
            "bne 0x149a0",
            "clz ip, r0",
            "sub ip, ip, 8",
            "subs r2, r2, ip",
            "lsl r0, r0, ip",
            "addge r0, r0, r2, lsl 23",
            "rsblt r2, r2, 0",
            "orrge r0, r0, r3",
            "orrlt r0, r3, r0, lsr r2",
            "bx lr",
            "teq r2, 0",
            "eor r1, r1, 0x800000",
            "eoreq r0, r0, 0x800000",
            "addeq r2, r2, 1",
            "subne r3, r3, 1",
            "b 0x1495c",
            "lsl r3, r1, 1",
            "mvns ip, r2, asr 24",
            "mvnsne ip, r3, asr 24",
            "beq 0x14a64",
            "teq r2, r3",
            "beq 0x14a28",
            "teq r2, 0",
            "moveq r0, r1",
            "bx lr",
            "teq r0, r1",
            "movne r0, 0",
            "bxne lr",
            "tst r2, 0xff000000",
            "bne 0x14a48",
            "lsls r0, r0, 1",
            "orrhs r0, r0, 0x80000000",
            "bx lr",
            "adds r2, r2, 0x2000000",
            "addlo r0, r0, 0x800000",
            "bxlo lr",
            "and r3, r0, 0x80000000",
            "orr r0, r3, 0x7f000000",
            "orr r0, r0, 0x800000",
            "bx lr",
            "mvns r2, r2, asr 24",
            "movne r0, r1",
            "mvnseq r3, r3, asr 24",
            "movne r1, r0",
            "lsls r2, r0, 9",
            "lslseq r3, r1, 9",
            "teqeq r0, r1",
            "orrne r0, r0, 0x400000",
            "bx lr"
        ]
    },
    "fcn.00014f1c": {
        "function_address": "0x00014f1c",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00014ea8",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00014ee0": {
        "function_address": "0x00014ee0",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00014eb8",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00014f30": {
        "function_address": "0x00014f30",
        "instructions": [
            "lsl r2, r0, 1",
            "cmp r2, 0x7f000000",
            "blo 0x14f60",
            "mov r3, 0x9e",
            "subs r2, r3, r2, lsr 24",
            "bls 0x14f68",
            "lsl r3, r0, 8",
            "orr r3, r3, 0x80000000",
            "tst r0, 0x80000000",
            "lsr r0, r3, r2",
            "rsbne r0, r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "cmn r2, 0x61",
            "bne 0x14f78",
            "lsls r2, r0, 9",
            "bne 0x14f84",
            "ands r0, r0, 0x80000000",
            "mvneq r0, 0x80000000",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "sym.printwbmp": {
        "function_address": "0x00013c40",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r3, [r0, 8]",
            "ldr r7, [0x00013d98]",
            "cmp r3, 0",
            "add r7, pc, r7",
            "pople {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r8, [0x00013d9c]",
            "mov r6, 0",
            "mov sb, 0x20",
            "mov sl, 0x23",
            "mov fp, 0xa",
            "ldr r3, [r5, 4]",
            "cmp r3, 0",
            "movgt r4, 0",
            "bgt 0x13cc0",
            "b 0x13d18",
            "ldr r3, [r7, r8]",
            "ldr r1, [r3]",
            "ldr r3, [r1, 0x4c]",
            "cmp r3, 0",
            "beq 0x13d68",
            "ldr r3, [r1, 0x10]",
            "ldr r2, [r1, 0x1c]",
            "cmp r3, r2",
            "strblo sl, [r3], 1",
            "strlo r3, [r1, 0x10]",
            "bhs 0x13d74",
            "ldr r3, [r5, 4]",
            "add r4, r4, 1",
            "cmp r3, r4",
            "ble 0x13d18",
            "mla r3, r6, r3, r4",
            "ldr r2, [r5, 0xc]",
            "ldr r3, [r2, r3, lsl 2]",
            "cmp r3, 0",
            "beq 0x13c84",
            "ldr r3, [r7, r8]",
            "ldr r1, [r3]",
            "ldr r3, [r1, 0x4c]",
            "cmp r3, 0",
            "beq 0x13d5c",
            "ldr r3, [r1, 0x10]",
            "ldr r2, [r1, 0x1c]",
            "cmp r3, r2",
            "strblo sb, [r3], 1",
            "strlo r3, [r1, 0x10]",
            "blo 0x13cb0",
            "mov r0, 0x20",
            "add r4, r4, 1",
            "bl sym.imp.__fputc_unlocked",
            "ldr r3, [r5, 4]",
            "cmp r3, r4",
            "bgt 0x13cc0",
            "ldr r3, [r7, r8]",
            "ldr r1, [r3]",
            "ldr r3, [r1, 0x4c]",
            "cmp r3, 0",
            "beq 0x13d80",
            "ldr r3, [r1, 0x10]",
            "ldr r2, [r1, 0x1c]",
            "cmp r3, r2",
            "movlo r2, fp",
            "strblo r2, [r3], 1",
            "strlo r3, [r1, 0x10]",
            "bhs 0x13d8c",
            "ldr r3, [r5, 8]",
            "add r6, r6, 1",
            "cmp r3, r6",
            "bgt 0x13c70",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, 0x20",
            "bl sym.imp.fputc",
            "b 0x13cb0",
            "mov r0, 0x23",
            "bl sym.imp.fputc",
            "b 0x13cb0",
            "mov r0, 0x23",
            "bl sym.imp.__fputc_unlocked",
            "b 0x13cb0",
            "mov r0, 0xa",
            "bl sym.imp.fputc",
            "b 0x13d48",
            "mov r0, 0xa",
            "bl sym.imp.__fputc_unlocked",
            "b 0x13d48"
        ]
    },
    "sym.imp.__fputc_unlocked": {
        "function_address": "0x00003678",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xce0]!"
        ]
    },
    "sym.imp.fputc": {
        "function_address": "0x000034e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdf0]!"
        ]
    },
    "sym.gdImageCreateFromGd": {
        "function_address": "0x0000b378",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "bl rsym.gdImageCreateFromGdCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "rsym.gdImageCreateFromGdCtx": {
        "function_address": "0x00003180",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x30]!"
        ]
    },
    "sym.gdImageCharUp": {
        "function_address": "0x0000801c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "ldr ip, [sp, 0x30]",
            "mov sb, r0",
            "mov r7, r2",
            "ldr r1, [r1, 4]",
            "str r3, [sp, 4]",
            "ldr fp, [sp, 0x34]",
            "cmp r1, ip",
            "bgt 0x8104",
            "ldr r3, [r6]",
            "add r3, r1, r3",
            "cmp ip, r3",
            "bge 0x8104",
            "ldr r3, [r6, 8]",
            "rsb r1, r1, ip",
            "ldr r0, [r6, 0xc]",
            "ldr ip, [sp, 4]",
            "mul r4, r0, r3",
            "rsb r2, r3, ip",
            "cmp ip, r2",
            "movgt sl, ip",
            "mul r8, r1, r4",
            "ble 0x8104",
            "add r1, r0, r7",
            "cmp r7, r1",
            "movlt r4, r7",
            "movlt r5, 0",
            "blt 0x80a8",
            "b 0x80f4",
            "add r4, r4, 1",
            "add r2, r7, r0",
            "cmp r2, r4",
            "ble 0x80ec",
            "ldr r2, [r6, 0x10]",
            "mla r2, r5, r3, r2",
            "add r5, r5, 1",
            "ldrsb r2, [r2, r8]",
            "cmp r2, 0",
            "beq 0x8098",
            "mov r1, r4",
            "mov r0, sb",
            "mov r2, sl",
            "mov r3, fp",
            "bl rsym.gdImageSetPixel",
            "ldr r0, [r6, 0xc]",
            "add r4, r4, 1",
            "ldr r3, [r6, 8]",
            "add r2, r7, r0",
            "cmp r2, r4",
            "bgt 0x80a8",
            "ldr r1, [sp, 4]",
            "rsb r2, r3, r1",
            "sub sl, sl, 1",
            "add r8, r8, 1",
            "cmp r2, sl",
            "blt 0x8080",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdImagePngCtxEx": {
        "function_address": "0x00010398",
        "instructions": [
            "ldr r3, [0x00010d7c]",
            "mov ip, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x860",
            "sub sp, sp, 0xc",
            "ldr r5, [0x00010d80]",
            "add r3, pc, r3",
            "str r3, [sp, 0x1c]",
            "movw r3, 0x1010",
            "str r0, [sp, 0x18]",
            "ldr lr, [r0, r3]",
            "mov r3, ip",
            "ldr r6, [sp, 0x1c]",
            "str r2, [sp, 0x30]",
            "ldr r0, [0x00010d84]",
            "ldr r2, [0x00010d88]",
            "add r5, r6, r5",
            "str lr, [sp, 0x85c]",
            "add r0, r6, r0",
            "ldr r8, [sp, 0x18]",
            "add r2, r6, r2",
            "ldr lr, [sp, 0x18]",
            "ldr r6, [sp, 0x18]",
            "ldr r8, [r8, 4]",
            "ldr lr, [lr, 8]",
            "ldr r6, [r6, 0xc]",
            "str r1, [sp, 0x2c]",
            "mov r1, r5",
            "str r8, [sp, 0x28]",
            "str lr, [sp, 0x20]",
            "str r6, [sp, 0x24]",
            "str ip, [sp, 0x858]",
            "bl sym.imp.png_create_write_struct",
            "cmp r0, 0",
            "str r0, [sp, 0x864]",
            "beq 0x10c10",
            "bl sym.imp.png_create_info_struct",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [sp, 0x860]",
            "beq 0x10c38",
            "mov r0, r5",
            "bl sym.imp._setjmp",
            "cmp r0, 0",
            "bne 0x10764",
            "ldr r3, [sp, 0x1c]",
            "ldr r2, [0x00010d8c]",
            "ldr r6, [sp, 0x1c]",
            "ldr r1, [sp, 0x2c]",
            "add r2, r3, r2",
            "ldr r3, [0x00010d90]",
            "ldr r0, [sp, 0x864]",
            "add r3, r6, r3",
            "bl sym.imp.png_set_write_fn",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x30]",
            "bl sym.imp.png_set_compression_level",
            "ldr r8, [sp, 0x18]",
            "movw r3, 0x1c38",
            "ldr r3, [r8, r3]",
            "cmp r3, 0",
            "bne 0x107a4",
            "ldr lr, [r8, 0xc]",
            "ldr r3, [sp, 0x85c]",
            "cmp lr, r3",
            "bgt 0x10a18",
            "mvn r3, 0",
            "str r3, [sp, 0x85c]",
            "add r2, sp, 0x58",
            "mvn r1, 0",
            "sub r3, r2, 0x10",
            "add r2, r2, 0x3f0",
            "str r1, [r3, 4]!",
            "cmp r3, r2",
            "bne 0x104b8",
            "cmp lr, 0",
            "movle lr, 0",
            "movle r1, 1",
            "strle lr, [sp, 0x24]",
            "ble 0x10554",
            "ldr ip, [sp, 0x18]",
            "mov r3, 0",
            "lsl r4, lr, 2",
            "mov r0, r3",
            "str r3, [sp, 0x24]",
            "add r2, ip, 0xc00",
            "add ip, sp, 0x58",
            "add r2, r2, 0xc",
            "ldr r1, [r2, 4]!",
            "sub r5, ip, 0xc",
            "cmp r1, 0",
            "streq r0, [r5, r3]",
            "add r3, r3, 4",
            "addeq r0, r0, 1",
            "cmp r3, r4",
            "bne 0x104f8",
            "cmp lr, r0",
            "str r0, [sp, 0x24]",
            "ldrle r1, [sp, 0x24]",
            "movgt r1, r0",
            "movgt r3, 1",
            "strgt r3, [sp, 0x858]",
            "cmp r1, 2",
            "movle r1, 1",
            "ble 0x10554",
            "cmp r1, 4",
            "movle r1, 2",
            "ble 0x10554",
            "cmp r1, 0x10",
            "movgt r1, 8",
            "movle r1, 4",
            "ldr r0, [sp, 0x18]",
            "movw r3, 0x1830",
            "ldr r4, [r0, r3]",
            "movw r3, 0x1c38",
            "ldr ip, [r0, r3]",
            "subs r4, r4, 0",
            "movne r4, 1",
            "cmp ip, 0",
            "mov lr, r4",
            "bne 0x107b8",
            "str r1, [sp]",
            "mov r1, 3",
            "ldr r2, [sp, 0x28]",
            "ldr r3, [sp, 0x20]",
            "str r1, [sp, 4]",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "str r4, [sp, 8]",
            "movw r4, 0x1c38",
            "str ip, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "bl sym.imp.png_set_IHDR",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [r2, r4]",
            "cmp r3, 0",
            "bne 0x10810",
            "ldr ip, [sp, 0x18]",
            "ldr r3, [ip, 0xc]",
            "cmp r3, 0",
            "ble 0x106dc",
            "lsl r3, r3, 2",
            "ldr lr, [sp, 0x18]",
            "add r0, ip, 0xc00",
            "add ip, r3, 0xc00",
            "add r0, r0, 0xc",
            "add ip, ip, 0xc",
            "mov r2, r0",
            "mov r3, 0",
            "add ip, lr, ip",
            "ldr r1, [r2, 4]!",
            "cmp r1, 0",
            "bne 0x10608",
            "ldr r1, [r2, 0xc28]",
            "cmp r1, 0",
            "addne r3, r3, 1",
            "cmp r2, ip",
            "bne 0x105f0",
            "cmp r3, 0",
            "beq 0x106dc",
            "ldr r2, [sp, 0x858]",
            "add r5, sp, 0x58",
            "ldr r1, [sp, 0x18]",
            "ldr r8, [sp, 0x24]",
            "cmp r2, 0",
            "ldr r7, [sp, 0x18]",
            "moveq r2, 1",
            "ldr r4, [r1, 0xc]",
            "streq r2, [sp, 0x858]",
            "mov r2, 0",
            "sub r6, r8, 1",
            "mov lr, r2",
            "mov r1, r2",
            "ldr ip, [r0, 4]!",
            "add r8, r7, r2",
            "add r8, r8, 0x1800",
            "cmp ip, 0",
            "bne 0x1069c",
            "ldr ip, [r8, 0x38]",
            "add r8, sp, 0x860",
            "sub sb, r5, 0xc",
            "add r8, r8, 8",
            "add sl, r8, lr",
            "mov r8, sb",
            "cmp ip, 0",
            "lsl fp, ip, 1",
            "strne lr, [sb, r2]",
            "streq r6, [sb, r2]",
            "addne lr, lr, 1",
            "addne ip, fp, ip, asr 6",
            "subeq r6, r6, 1",
            "mvnne ip, ip",
            "strbne ip, [sl, -0x11c]",
            "add r1, r1, 1",
            "add r2, r2, 4",
            "cmp r4, r1",
            "bgt 0x1064c",
            "mov r1, 0",
            "add r2, sp, 0x740",
            "str r1, [sp]",
            "add r2, r2, 0xc",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_set_tRNS",
            "ldr ip, [sp, 0x18]",
            "movw r3, 0x1c38",
            "ldr r3, [ip, r3]",
            "cmp r3, 0",
            "bne 0x1087c",
            "ldr r1, [sp, 0x858]",
            "cmp r1, 0",
            "bne 0x10b54",
            "ldr lr, [sp, 0x24]",
            "cmp lr, 0",
            "ble 0x10744",
            "ldr ip, [sp, 0x24]",
            "add r4, sp, 0x450",
            "ldr r8, [sp, 0x18]",
            "add r4, r4, 8",
            "sub r4, r4, 0xc",
            "add r0, r8, 0x800",
            "add r5, ip, ip, lsl 1",
            "mov r2, r8",
            "add r0, r0, 0xc",
            "ldr ip, [r2, 0x10]",
            "mov r3, r4",
            "ldr lr, [r0, 4]!",
            "strb ip, [r3, r1]!",
            "add r1, r1, 3",
            "ldr ip, [r2, 0x410]",
            "cmp r1, r5",
            "strb lr, [r3, 2]",
            "add r2, r2, 4",
            "strb ip, [r3, 1]",
            "bne 0x10718",
            "add r2, sp, 0x450",
            "ldr r0, [sp, 0x864]",
            "add r2, r2, 8",
            "ldr r1, [sp, 0x860]",
            "sub r2, r2, 0xc",
            "ldr r3, [sp, 0x24]",
            "bl sym.imp.png_set_PLTE",
            "b 0x1087c",
            "ldr lr, [sp, 0x1c]",
            "mov r1, 1",
            "ldr r3, [0x00010d94]",
            "mov r2, 0x2d",
            "ldr r0, [0x00010d98]",
            "ldr r3, [lr, r3]",
            "add r0, lr, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "add r0, sp, 0x860",
            "add r1, sp, 0x860",
            "add r0, r0, 4",
            "bl sym.imp.png_destroy_write_struct",
            "add sp, sp, 0x6c",
            "add sp, sp, 0x800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r6, [sp, 0x18]",
            "movw r3, 0x1830",
            "ldr lr, [r6, r3]",
            "subs lr, lr, 0",
            "movne lr, 1",
            "ldr r1, [sp, 0x18]",
            "movw r3, 0x1c44",
            "ldr ip, [r1, r3]",
            "cmp ip, 0",
            "bne 0x109f4",
            "mov r1, 8",
            "ldr r2, [sp, 0x28]",
            "str r1, [sp]",
            "mov r4, 2",
            "ldr r3, [sp, 0x20]",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "str r4, [sp, 4]",
            "movw r4, 0x1c38",
            "str lr, [sp, 8]",
            "str ip, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "bl sym.imp.png_set_IHDR",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [r2, r4]",
            "cmp r3, 0",
            "beq 0x105bc",
            "movw r3, 0x1c44",
            "ldr r2, [r2, r3]",
            "cmp r2, 0",
            "bne 0x1087c",
            "ldr r3, [sp, 0x85c]",
            "cmp r3, 0",
            "blt 0x1087c",
            "ldr r6, [sp, 0x18]",
            "movw r3, 0x1010",
            "add r8, sp, 0x800",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "ldr ip, [r6, r3]",
            "mov r3, r2",
            "ubfx lr, ip, 0x10, 8",
            "ubfx r5, ip, 8, 8",
            "and ip, ip, 0xff",
            "strh lr, [r8, 0x4e]",
            "strh ip, [r8, 0x52]",
            "add ip, sp, 0x840",
            "strh r5, [r8, 0x50]",
            "add ip, ip, 0xc",
            "str ip, [sp]",
            "bl sym.imp.png_set_tRNS",
            "ldr r3, [r6, r4]",
            "cmp r3, 0",
            "beq 0x105bc",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_write_info",
            "ldr r0, [sp, 0x864]",
            "bl sym.imp.png_set_packing",
            "ldr lr, [sp, 0x18]",
            "movw r3, 0x1c38",
            "ldr r3, [lr, r3]",
            "cmp r3, 0",
            "beq 0x10a3c",
            "movw r3, 0x1c44",
            "mov r0, 4",
            "ldr r5, [lr, r3]",
            "movw r3, 0x1c3c",
            "ldr r1, [sp, 0x20]",
            "ldr sb, [lr, r3]",
            "bl rsym.overflow2",
            "cmp r5, 0",
            "moveq r7, 3",
            "movne r7, 4",
            "subs r6, r0, 0",
            "bne 0x10798",
            "ldr r1, [sp, 0x20]",
            "lsl r0, r1, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x3c]",
            "mov fp, r0",
            "beq 0x10d1c",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "ble 0x10d60",
            "ldr r8, [sp, 0x28]",
            "mov r4, r6",
            "str sb, [sp, 0x38]",
            "mul r8, r8, r7",
            "str r8, [sp, 0x34]",
            "ldr r8, [sp, 0x28]",
            "mov r0, r8",
            "mov r1, r7",
            "bl rsym.overflow2",
            "subs sb, r0, 0",
            "bne 0x10c70",
            "ldr r0, [sp, 0x34]",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [fp, r6]",
            "beq 0x10c70",
            "ldr lr, [sp, 0x38]",
            "cmp r8, 0",
            "ldr sl, [lr, r6]",
            "ble 0x1099c",
            "mov r1, sb",
            "ldr r2, [sl], 4",
            "mov r3, r0",
            "cmp r5, 0",
            "add r1, r1, 1",
            "ubfx ip, r2, 0x18, 7",
            "ubfx sb, r2, 0x10, 8",
            "lsl lr, ip, 1",
            "strb sb, [r3], 1",
            "ubfx sb, r2, 8, 8",
            "add ip, lr, ip, lsr 6",
            "add lr, r3, 1",
            "strb sb, [r0, 1]",
            "add r0, lr, 1",
            "mvn ip, ip",
            "strb r2, [r3, 1]",
            "addne r0, r0, 1",
            "strbne ip, [lr, 1]",
            "cmp r1, r8",
            "bne 0x10950",
            "ldr r0, [sp, 0x20]",
            "add r4, r4, 1",
            "add r6, r6, 4",
            "cmp r0, r4",
            "bgt 0x10914",
            "ldr r1, [sp, 0x3c]",
            "mov r4, 0",
            "ldr r0, [sp, 0x864]",
            "mov r5, r1",
            "bl sym.imp.png_write_image",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_write_end",
            "ldr r6, [sp, 0x20]",
            "ldr r0, [r5], 4",
            "add r4, r4, 1",
            "bl rsym.gdFree",
            "cmp r6, r4",
            "bgt 0x109d4",
            "ldr r0, [sp, 0x3c]",
            "bl rsym.gdFree",
            "b 0x10bfc",
            "mov r4, 8",
            "mov ip, 0",
            "str r4, [sp]",
            "mov r4, 6",
            "ldr r2, [sp, 0x28]",
            "ldr r0, [sp, 0x864]",
            "ldr r3, [sp, 0x20]",
            "ldr r1, [sp, 0x860]",
            "b 0x107e8",
            "ldr r3, [sp, 0x85c]",
            "cmp r3, 0",
            "blt 0x104a8",
            "ldr r3, [sp, 0x85c]",
            "add r3, r3, 0x304",
            "ldr r3, [r8, r3, lsl 2]",
            "cmp r3, 0",
            "beq 0x104a8",
            "b 0x104a0",
            "ldr r3, [sp, 0x858]",
            "cmp r3, 0",
            "beq 0x10be0",
            "mov r0, 4",
            "ldr r1, [sp, 0x20]",
            "bl rsym.overflow2",
            "subs r5, r0, 0",
            "bne 0x10798",
            "ldr r1, [sp, 0x20]",
            "lsl r0, r1, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x40]",
            "beq 0x10d1c",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "ble 0x10d44",
            "ldr r6, [sp, 0x40]",
            "mov fp, r5",
            "ldr sb, [sp, 0x28]",
            "movw sl, 0xf7e4",
            "movt sl, 0xffff",
            "mov r7, r6",
            "str r6, [sp, 0x44]",
            "mov r6, r5",
            "ldr r5, [sp, 0x18]",
            "mov r4, sb",
            "mov r0, sb",
            "lsl r8, r6, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [r7], 4",
            "beq 0x10cc4",
            "cmp r4, 0",
            "movgt r3, fp",
            "bgt 0x10ad4",
            "b 0x10b00",
            "ldr r0, [r7, -4]",
            "ldr r2, [r5]",
            "add ip, sp, 0x860",
            "add ip, ip, 8",
            "ldr r2, [r2, r8]",
            "ldrb r2, [r2, r3]",
            "add r2, ip, r2, lsl 2",
            "ldr r2, [r2, sl]",
            "strb r2, [r0, r3]",
            "add r3, r3, 1",
            "cmp r3, r4",
            "bne 0x10ad0",
            "ldr lr, [sp, 0x20]",
            "add r6, r6, 1",
            "cmp lr, r6",
            "bgt 0x10aa8",
            "ldr r0, [sp, 0x864]",
            "mov r4, 0",
            "ldr r1, [sp, 0x40]",
            "ldr r6, [sp, 0x44]",
            "bl sym.imp.png_write_image",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_write_end",
            "ldr r5, [sp, 0x20]",
            "ldr r0, [r6], 4",
            "add r4, r4, 1",
            "bl rsym.gdFree",
            "cmp r5, r4",
            "bgt 0x10b34",
            "ldr r0, [sp, 0x40]",
            "bl rsym.gdFree",
            "b 0x10bfc",
            "ldr r0, [sp, 0x18]",
            "ldr lr, [r0, 0xc]",
            "cmp lr, 0",
            "ble 0x10744",
            "add r1, sp, 0x58",
            "movw ip, 0xfbe4",
            "sub r1, r1, 0xc",
            "add r3, r0, 0x10",
            "add lr, r1, lr, lsl 2",
            "movt ip, 0xffff",
            "ldr r2, [r1], 4",
            "cmp r2, 0",
            "add r2, r2, r2, lsl 1",
            "blt 0x10bb4",
            "ldr r4, [r3]",
            "add r6, sp, 0x860",
            "add r6, r6, 8",
            "add r2, r6, r2",
            "add r0, r2, ip",
            "strb r4, [r2, ip]",
            "ldr r2, [r3, 0x400]",
            "strb r2, [r0, 1]",
            "ldr r2, [r3, 0x800]",
            "strb r2, [r0, 2]",
            "cmp r1, lr",
            "add r3, r3, 4",
            "bne 0x10b7c",
            "add r2, sp, 0x450",
            "ldr r0, [sp, 0x864]",
            "add r2, r2, 8",
            "ldr r1, [sp, 0x860]",
            "sub r2, r2, 0xc",
            "ldr r3, [sp, 0x24]",
            "bl sym.imp.png_set_PLTE",
            "b 0x1087c",
            "ldr r2, [sp, 0x18]",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [r2]",
            "bl sym.imp.png_write_image",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_write_end",
            "add r0, sp, 0x860",
            "add r1, sp, 0x860",
            "add r0, r0, 4",
            "bl sym.imp.png_destroy_write_struct",
            "b 0x10798",
            "ldr r8, [sp, 0x1c]",
            "mov r1, 1",
            "ldr r3, [0x00010d94]",
            "mov r2, 0x31",
            "ldr r0, [0x00010d9c]",
            "ldr r3, [r8, r3]",
            "add r0, r8, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0x10798",
            "ldr ip, [sp, 0x1c]",
            "mov r1, 1",
            "ldr r3, [0x00010d94]",
            "mov r2, 0x31",
            "ldr r0, [0x00010da0]",
            "ldr r3, [ip, r3]",
            "add r0, ip, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "add r0, sp, 0x860",
            "mov r1, r4",
            "add r0, r0, 4",
            "bl sym.imp.png_destroy_write_struct",
            "b 0x10798",
            "ldr ip, [sp, 0x1c]",
            "mov r1, 1",
            "ldr r3, [0x00010d94]",
            "mov r2, 0x26",
            "ldr r0, [0x00010da4]",
            "ldr r3, [ip, r3]",
            "add r0, ip, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "cmp r4, 0",
            "beq 0x10cb8",
            "ldr r6, [sp, 0x3c]",
            "mov r5, 0",
            "ldr r0, [r6], 4",
            "add r5, r5, 1",
            "bl rsym.gdFree",
            "cmp r4, r5",
            "bgt 0x10ca4",
            "ldr r0, [sp, 0x3c]",
            "bl rsym.gdFree",
            "b 0x10798",
            "ldr r8, [sp, 0x1c]",
            "mov r4, r0",
            "ldr r3, [0x00010d94]",
            "mov r5, r6",
            "ldr r0, [0x00010da4]",
            "mov r1, 1",
            "mov r2, 0x26",
            "ldr r6, [sp, 0x44]",
            "ldr r3, [r8, r3]",
            "add r0, r8, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "cmp r5, 0",
            "beq 0x10d10",
            "ldr r0, [r6], 4",
            "add r4, r4, 1",
            "bl rsym.gdFree",
            "cmp r4, r5",
            "blt 0x10cfc",
            "ldr r0, [sp, 0x40]",
            "bl rsym.gdFree",
            "b 0x10798",
            "ldr r6, [sp, 0x1c]",
            "mov r1, 1",
            "ldr r3, [0x00010d94]",
            "mov r2, 0x2e",
            "ldr r0, [0x00010da8]",
            "ldr r3, [r6, r3]",
            "add r0, r6, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0x10798",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x40]",
            "bl sym.imp.png_write_image",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_write_end",
            "b 0x10b48",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x3c]",
            "bl sym.imp.png_write_image",
            "ldr r0, [sp, 0x864]",
            "ldr r1, [sp, 0x860]",
            "bl sym.imp.png_write_end",
            "b 0x109e8"
        ]
    },
    "sym.imp.png_create_write_struct": {
        "function_address": "0x00003630",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd10]!"
        ]
    },
    "sym.imp.png_create_info_struct": {
        "function_address": "0x0000345c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe48]!"
        ]
    },
    "sym.imp._setjmp": {
        "function_address": "0x000035a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd70]!"
        ]
    },
    "sym.imp.png_set_write_fn": {
        "function_address": "0x00003108",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x80]!"
        ]
    },
    "sym.imp.png_set_compression_level": {
        "function_address": "0x00003360",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xef0]!"
        ]
    },
    "sym.imp.png_set_IHDR": {
        "function_address": "0x0000303c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x108]!"
        ]
    },
    "sym.imp.png_set_tRNS": {
        "function_address": "0x000035dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd48]!"
        ]
    },
    "sym.imp.png_set_PLTE": {
        "function_address": "0x00003000",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x130]!"
        ]
    },
    "sym.imp.png_destroy_write_struct": {
        "function_address": "0x00003498",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe20]!"
        ]
    },
    "sym.imp.png_write_info": {
        "function_address": "0x000034d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdf8]!"
        ]
    },
    "sym.imp.png_set_packing": {
        "function_address": "0x000034bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe08]!"
        ]
    },
    "sym.imp.png_write_image": {
        "function_address": "0x00003684",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xcd8]!"
        ]
    },
    "sym.imp.png_write_end": {
        "function_address": "0x000031e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xff0]!"
        ]
    },
    "sym.gdImageFilledEllipse": {
        "function_address": "0x00009d10",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr sb, [sp, 0x48]",
            "asr r4, r3, 1",
            "mov r8, r2",
            "ldr r6, [sp, 0x4c]",
            "add r5, r4, r1",
            "rsb fp, r4, r1",
            "mov r3, r5",
            "asr sb, sb, 1",
            "mov r1, fp",
            "mov r7, r0",
            "stm sp, {r2, r6}",
            "mul sb, sb, sb",
            "bl rsym.gdImageLine",
            "mul r3, r4, r4",
            "lsl r1, sb, 1",
            "cmp r4, 0",
            "str r1, [sp, 0x1c]",
            "lsl r3, r3, 1",
            "str r3, [sp, 0x18]",
            "ble 0x9e54",
            "mul sb, r4, sb",
            "mov r2, 0",
            "mov sl, r8",
            "str r4, [sp, 0x10]",
            "mvn r3, 1",
            "str r2, [sp, 0xc]",
            "lsl r1, sb, 1",
            "cmp sb, 0",
            "str r1, [sp, 0x14]",
            "ble 0x9e24",
            "ldr r2, [sp, 0xc]",
            "add sl, sl, 1",
            "ldr r1, [sp, 0x18]",
            "sub r8, r8, 1",
            "add r2, r2, r1",
            "rsb sb, r2, sb",
            "str r2, [sp, 0xc]",
            "cmp sb, 0",
            "ble 0x9e24",
            "cmp r3, r8",
            "beq 0x9e0c",
            "cmp fp, r5",
            "bgt 0x9e0c",
            "mov r4, fp",
            "mov r1, r4",
            "mov r0, r7",
            "mov r2, sl",
            "mov r3, r6",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r5, r4",
            "bge 0x9dc8",
            "mov r4, fp",
            "mov r1, r4",
            "mov r0, r7",
            "mov r2, r8",
            "mov r3, r6",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r5, r4",
            "bge 0x9dec",
            "ldr r2, [sp, 0x10]",
            "cmp r2, 0",
            "ble 0x9e54",
            "cmp sb, 0",
            "mov r3, r8",
            "bgt 0x9d90",
            "ldr r2, [sp, 0x14]",
            "add fp, fp, 1",
            "ldr r1, [sp, 0x1c]",
            "sub r5, r5, 1",
            "rsb r2, r1, r2",
            "str r2, [sp, 0x14]",
            "ldr r2, [sp, 0x10]",
            "ldr r1, [sp, 0x14]",
            "sub r2, r2, 1",
            "str r2, [sp, 0x10]",
            "add sb, sb, r1",
            "b 0x9db4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdImageGd": {
        "function_address": "0x0000b540",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0000b450",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0000b450": {
        "function_address": "0x0000b450",
        "instructions": [
            "movw r3, 0x1c38",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "ldr r3, [r0, r3]",
            "mov r5, r0",
            "mov r6, r1",
            "cmp r3, 0",
            "beq 0xb534",
            "movw r0, 0xfffe",
            "bl rsym.gdPutWord",
            "ldr r0, [r5, 4]",
            "mov r1, r6",
            "bl rsym.gdPutWord",
            "ldr r0, [r5, 8]",
            "mov r1, r6",
            "bl rsym.gdPutWord",
            "mov r0, r5",
            "mov r1, r6",
            "bl rsym._gdPutColors",
            "ldr r2, [r5, 8]",
            "cmp r2, 0",
            "pople {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [r5, 4]",
            "mov r7, 0",
            "mov sb, r7",
            "movw r8, 0x1c38",
            "movw sl, 0x1c3c",
            "cmp r3, 0",
            "movgt r4, 0",
            "bgt 0xb4e8",
            "b 0xb520",
            "ldr r3, [r5, sl]",
            "ldr r3, [r3, r7]",
            "ldr r0, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "bl rsym.gdPutInt",
            "ldr r3, [r5, 4]",
            "cmp r3, r4",
            "ble 0xb51c",
            "ldr r3, [r5, r8]",
            "mov r1, r6",
            "cmp r3, 0",
            "bne 0xb4c8",
            "ldr r3, [r5]",
            "mov r1, r6",
            "ldr r3, [r3, r7]",
            "ldrb r0, [r3, r4]",
            "add r4, r4, 1",
            "bl rsym.gdPutC",
            "ldr r3, [r5, 4]",
            "cmp r3, r4",
            "bgt 0xb4e8",
            "ldr r2, [r5, 8]",
            "add sb, sb, 1",
            "add r7, r7, 4",
            "cmp r2, sb",
            "bgt 0xb4b8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "movw r0, 0xffff",
            "bl rsym.gdPutWord",
            "b 0xb474"
        ]
    },
    "sym.gdImagePngPtrEx": {
        "function_address": "0x00010db4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "mov r7, r2",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mov r2, r7",
            "mov r0, r6",
            "mov r1, r4",
            "bl rsym.gdImagePngCtxEx",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageWBMPCtx": {
        "function_address": "0x0001272c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r0, [0x00012860]",
            "sub sp, sp, 0xc",
            "mov sl, r1",
            "str r2, [sp, 4]",
            "mov r2, 1",
            "str r0, [sp]",
            "ldr r3, [sp]",
            "ldmib r6, {r0, r1}",
            "add r3, pc, r3",
            "str r3, [sp]",
            "bl rsym.createwbmp",
            "subs sb, r0, 0",
            "beq 0x12834",
            "ldr r2, [r6, 8]",
            "cmp r2, 0",
            "ble 0x127d8",
            "ldr r3, [r6, 4]",
            "mov r8, 0",
            "mov r7, r8",
            "mov fp, r8",
            "cmp r3, 0",
            "lslgt r5, r7, 2",
            "movgt r4, 0",
            "ble 0x127cc",
            "mov r1, r4",
            "mov r0, r6",
            "mov r2, r8",
            "add r4, r4, 1",
            "bl rsym.gdImageGetPixel",
            "cmp r0, sl",
            "add r7, r7, 1",
            "ldreq r3, [sb, 0xc]",
            "streq fp, [r3, r5]",
            "add r5, r5, 4",
            "ldr r3, [r6, 4]",
            "cmp r3, r4",
            "bgt 0x12794",
            "ldr r2, [r6, 8]",
            "add r8, r8, 1",
            "cmp r2, r8",
            "bgt 0x12784",
            "ldr r3, [0x00012864]",
            "mov r0, sb",
            "ldr ip, [sp]",
            "ldr r2, [sp, 4]",
            "ldr r1, [ip, r3]",
            "bl rsym.writewbmp",
            "cmp r0, 0",
            "bne 0x12808",
            "mov r0, sb",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.freewbmp",
            "ldr r0, [sp]",
            "mov r1, 1",
            "ldr r3, [0x00012868]",
            "mov r2, 0x14",
            "ldr ip, [sp]",
            "ldr r3, [r0, r3]",
            "ldr r0, [0x0001286c]",
            "ldr r3, [r3]",
            "add r0, ip, r0",
            "bl sym.imp.fwrite",
            "b 0x127f8",
            "ldr ip, [sp]",
            "mov r1, 1",
            "ldr r3, [0x00012868]",
            "mov r2, 0x16",
            "ldr r0, [0x00012870]",
            "ldr r3, [ip, r3]",
            "add r0, ip, r0",
            "ldr r3, [r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.fwrite"
        ]
    },
    "rsym.createwbmp": {
        "function_address": "0x000031c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0]!"
        ]
    },
    "rsym.writewbmp": {
        "function_address": "0x000034b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe10]!"
        ]
    },
    "sym.gdImageSetTile": {
        "function_address": "0x00004e38",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "movw sl, 0x1c38",
            "ldr r3, [r0, sl]",
            "mov r8, r0",
            "movw r2, 0x1020",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "str r1, [r8, r2]",
            "cmp r3, 0",
            "bne 0x4edc",
            "ldr r3, [r1, sl]",
            "cmp r3, 0",
            "bne 0x4edc",
            "ldr r2, [r1, 0xc]",
            "cmp r2, 0",
            "ble 0x4edc",
            "add r7, r0, 0x1400",
            "add r5, r1, 0x10",
            "add r7, r7, 0x20",
            "mov r4, r3",
            "b 0x4e90",
            "ldr r3, [r6, sl]",
            "cmp r3, 0",
            "add r0, r5, 0x1800",
            "ubfx ip, r4, 0x18, 7",
            "ldreq ip, [r0, 0x28]",
            "and r3, r4, 0xff",
            "ubfx r1, r4, 0x10, 8",
            "ldreq r3, [r5, 0x800]",
            "ubfx r2, r4, 8, 8",
            "ldreq r1, [r5]",
            "mov r0, r8",
            "ldreq r2, [r5, 0x400]",
            "add r4, r4, 1",
            "str ip, [sp]",
            "add r5, r5, 4",
            "bl rsym.gdImageColorResolveAlpha",
            "ldr r3, [r6, 0xc]",
            "str r0, [r7, 4]!",
            "cmp r3, r4",
            "bgt 0x4e8c",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.gdImageLine": {
        "function_address": "0x000089b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldr fp, [sp, 0x6c]",
            "mov r4, r0",
            "str r1, [sp, 0x2c]",
            "cmn fp, 7",
            "str r2, [sp, 0x28]",
            "str r3, [sp, 0x24]",
            "beq 0x8c18",
            "movw r3, 0x1c54",
            "add r6, sp, 0x2c",
            "ldr ip, [r0, r3]",
            "movw r3, 0x1c5c",
            "ldr lr, [r0, r3]",
            "add r7, sp, 0x28",
            "add r8, sp, 0x24",
            "add r5, sp, 0x68",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, r5",
            "stm sp, {ip, lr}",
            "bl fcn.00003954",
            "cmp r0, 0",
            "bne 0x8a1c",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r3, 0x1c58",
            "mov r0, r7",
            "ldr ip, [r4, r3]",
            "movw r3, 0x1c60",
            "ldr lr, [r4, r3]",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, r8",
            "stm sp, {ip, lr}",
            "bl fcn.00003954",
            "cmp r0, 0",
            "beq 0x8a14",
            "ldr ip, [sp, 0x24]",
            "movw r3, 0x1834",
            "ldr lr, [sp, 0x2c]",
            "ldr r5, [r4, r3]",
            "ldr r2, [sp, 0x28]",
            "rsb sl, lr, ip",
            "ldr r3, [sp, 0x68]",
            "cmp sl, 0",
            "rsblt sl, sl, 0",
            "cmp sl, 0",
            "beq 0x8de4",
            "rsb sb, r2, r3",
            "cmp sb, 0",
            "rsblt sb, sb, 0",
            "cmp sb, 0",
            "beq 0x8fac",
            "cmp sl, sb",
            "blt 0x8df8",
            "mov r0, sb",
            "bl fcn.00014178",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, sl",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.atan2",
            "bl sym.imp.cos",
            "mov r2, 0",
            "mov r3, 0",
            "mov r6, r0",
            "mov r7, r1",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "beq 0x8dac",
            "mov r1, 0",
            "mov r2, 1",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 0x14]",
            "ldr r3, [sp, 0x24]",
            "lsl r1, sb, 1",
            "ldr r5, [sp, 0x2c]",
            "rsb sb, sl, sb",
            "lsl sb, sb, 1",
            "ldr ip, [sp, 0xc]",
            "str r1, [sp, 0x10]",
            "rsb sl, sl, r1",
            "cmp r5, r3",
            "str sb, [sp, 0x20]",
            "ldrgt sb, [sp, 0x68]",
            "mvngt r2, 0",
            "ldrle sb, [sp, 0x28]",
            "ldr r1, [sp, 0x14]",
            "strle r3, [sp, 0x18]",
            "movle r3, 1",
            "add r8, sb, ip",
            "strgt r5, [sp, 0x18]",
            "add r7, r8, r1",
            "movgt r5, r3",
            "strgt r2, [sp, 0x1c]",
            "strle r3, [sp, 0x1c]",
            "cmp r8, r7",
            "bge 0x8b74",
            "mov r6, r8",
            "mov r2, r6",
            "mov r0, r4",
            "mov r1, r5",
            "mov r3, fp",
            "add r6, r6, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r6, r7",
            "blt 0x8b54",
            "ldr r2, [sp, 0x28]",
            "ldr r3, [sp, 0x68]",
            "rsb r3, r2, r3",
            "ldr r2, [sp, 0x1c]",
            "mul r3, r3, r2",
            "cmp r3, 0",
            "ble 0x8fc8",
            "ldr r2, [sp, 0x18]",
            "cmp r5, r2",
            "bge 0x8a14",
            "ldr r7, [sp, 0x18]",
            "ldr r6, [sp, 0x14]",
            "ldr ip, [sp, 0x20]",
            "str r4, [sp, 0x18]",
            "str fp, [sp, 0x14]",
            "b 0x8bbc",
            "cmp r7, r5",
            "ble 0x8a14",
            "cmp sl, 0",
            "add r5, r5, 1",
            "ldrge r1, [sp, 0xc]",
            "addge sb, sb, 1",
            "ldrlt r3, [sp, 0x10]",
            "addge sl, sl, ip",
            "addge r8, sb, r1",
            "add r4, r8, r6",
            "addlt sl, sl, r3",
            "cmp r8, r4",
            "bge 0x8bb4",
            "mov fp, r8",
            "mov r2, fp",
            "ldr r0, [sp, 0x18]",
            "mov r1, r5",
            "ldr r3, [sp, 0x14]",
            "add fp, fp, 1",
            "str ip, [sp, 8]",
            "bl rsym.gdImageSetPixel",
            "cmp fp, r4",
            "ldr ip, [sp, 8]",
            "bge 0x8bb4",
            "b 0x8bec",
            "movw lr, 0x1c38",
            "ldr ip, [sp, 0x68]",
            "ldr lr, [r0, lr]",
            "movw r5, 0x1c4c",
            "ldr r5, [r0, r5]",
            "str r1, [sp, 0x3c]",
            "cmp lr, 0",
            "str r2, [sp, 0x38]",
            "str r3, [sp, 0x34]",
            "str ip, [sp, 0x30]",
            "beq 0x8d9c",
            "movw r3, 0x1c54",
            "add r6, sp, 0x3c",
            "ldr ip, [r0, r3]",
            "movw r3, 0x1c5c",
            "ldr lr, [r0, r3]",
            "add r7, sp, 0x38",
            "add sl, sp, 0x34",
            "add r8, sp, 0x30",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, sl",
            "mov r3, r8",
            "stm sp, {ip, lr}",
            "bl fcn.00003954",
            "cmp r0, 0",
            "beq 0x8a14",
            "movw r3, 0x1c58",
            "mov r0, r7",
            "ldr ip, [r4, r3]",
            "movw r3, 0x1c60",
            "ldr lr, [r4, r3]",
            "mov r1, r6",
            "mov r2, r8",
            "mov r3, sl",
            "stm sp, {ip, lr}",
            "bl fcn.00003954",
            "cmp r0, 0",
            "beq 0x8a14",
            "ldr sb, [sp, 0x34]",
            "ldr r7, [sp, 0x3c]",
            "ldr fp, [sp, 0x30]",
            "ldr sl, [sp, 0x38]",
            "rsb r3, r7, sb",
            "rsb r1, sl, fp",
            "orrs r2, r1, r3",
            "beq 0x9188",
            "cmp r3, 0",
            "beq 0x91a8",
            "cmp r1, 0",
            "beq 0x91c4",
            "eor r0, r3, r3, asr 31",
            "sub r0, r0, r3, asr 31",
            "eor r2, r1, r1, asr 31",
            "sub r2, r2, r1, asr 31",
            "cmp r0, r2",
            "ble 0x90f0",
            "cmp r3, 0",
            "blt 0x920c",
            "lsl r8, r7, 0x10",
            "lsl r0, r1, 0x10",
            "asr r6, r8, 0x10",
            "mov r1, r3",
            "bl fcn.00013da0",
            "cmp sb, r6",
            "mov fp, r0",
            "blt 0x8a14",
            "lsl r7, sl, 0x10",
            "mov sb, r5",
            "mov r5, r4",
            "mvn sl, r7",
            "rsb r3, r0, 0",
            "str r3, [sp, 0xc]",
            "asr r4, r7, 0x10",
            "ubfx ip, r7, 8, 8",
            "mov r1, r6",
            "str ip, [sp]",
            "mov r0, r5",
            "mov r2, r4",
            "mov r3, sb",
            "add r8, r8, 0x10000",
            "bl fcn.00004b2c",
            "ubfx ip, sl, 8, 8",
            "mov r1, r6",
            "mov r3, sb",
            "mov r0, r5",
            "add r2, r4, 1",
            "str ip, [sp]",
            "bl fcn.00004b2c",
            "ldr r3, [sp, 0x34]",
            "asr r6, r8, 0x10",
            "ldr ip, [sp, 0xc]",
            "add r7, r7, fp",
            "cmp r6, r3",
            "add sl, sl, ip",
            "ble 0x8d3c",
            "b 0x8a14",
            "str ip, [sp]",
            "str r5, [sp, 4]",
            "bl rsym.gdImageLine",
            "b 0x8a14",
            "mov r0, r5",
            "bl fcn.00014178",
            "mov r2, r6",
            "mov r3, r7",
            "bl fcn.000144c0",
            "bl fcn.000147f0",
            "cmp r0, 0",
            "str r0, [sp, 0x14]",
            "bne 0x9238",
            "ldr r3, [sp, 0x14]",
            "mov ip, 1",
            "str ip, [sp, 0x14]",
            "str r3, [sp, 0xc]",
            "b 0x8af0",
            "mov r0, r4",
            "mov r1, lr",
            "str fp, [sp]",
            "bl fcn.0000889c",
            "b 0x8a14",
            "mov r0, sb",
            "bl fcn.00014178",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, sl",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.atan2",
            "bl sym.imp.sin",
            "mov r3, 0",
            "mov r2, 0",
            "mov r6, r0",
            "mov r7, r1",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "movne r3, 1",
            "strne r3, [sp, 0x10]",
            "bne 0x9050",
            "mov r0, r5",
            "bl fcn.00014178",
            "mov r2, r6",
            "mov r3, r7",
            "bl fcn.000144c0",
            "bl fcn.000147f0",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "bne 0x9050",
            "ldr r1, [sp, 0x10]",
            "mov r2, 1",
            "str r2, [sp, 0x10]",
            "str r1, [sp, 0xc]",
            "lsl r3, sl, 1",
            "ldr r5, [sp, 0x28]",
            "rsb sl, sb, sl",
            "str r3, [sp, 0x18]",
            "lsl sl, sl, 1",
            "ldr r3, [sp, 0x68]",
            "ldr ip, [sp, 0x18]",
            "str sl, [sp, 0x20]",
            "cmp r5, r3",
            "strgt r5, [sp, 0x14]",
            "movgt r5, r3",
            "ldrgt sl, [sp, 0x24]",
            "rsb sb, sb, ip",
            "ldrle sl, [sp, 0x2c]",
            "mvngt r1, 0",
            "strle r3, [sp, 0x14]",
            "movle r2, 1",
            "ldr r3, [sp, 0xc]",
            "ldr ip, [sp, 0x10]",
            "strgt r1, [sp, 0x1c]",
            "add r8, sl, r3",
            "strle r2, [sp, 0x1c]",
            "add r7, r8, ip",
            "cmp r8, r7",
            "bge 0x8f08",
            "mov r6, r8",
            "mov r1, r6",
            "mov r0, r4",
            "mov r2, r5",
            "mov r3, fp",
            "add r6, r6, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r6, r7",
            "blt 0x8ee8",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [sp, 0x24]",
            "ldr r1, [sp, 0x1c]",
            "rsb r3, r2, r3",
            "mul r3, r3, r1",
            "cmp r3, 0",
            "ble 0x9068",
            "ldr ip, [sp, 0x14]",
            "cmp r5, ip",
            "bge 0x8a14",
            "ldr r7, [sp, 0x14]",
            "ldr r6, [sp, 0x10]",
            "ldr ip, [sp, 0x20]",
            "str r4, [sp, 0x10]",
            "str fp, [sp, 0x14]",
            "b 0x8f50",
            "cmp r7, r5",
            "ble 0x8a14",
            "cmp sb, 0",
            "add r5, r5, 1",
            "ldrge r3, [sp, 0xc]",
            "addge sl, sl, 1",
            "ldrlt r2, [sp, 0x18]",
            "addge sb, sb, ip",
            "addge r8, sl, r3",
            "add r4, r8, r6",
            "addlt sb, sb, r2",
            "cmp r8, r4",
            "bge 0x8f48",
            "mov fp, r8",
            "mov r1, fp",
            "ldr r0, [sp, 0x10]",
            "mov r2, r5",
            "ldr r3, [sp, 0x14]",
            "add fp, fp, 1",
            "str ip, [sp, 8]",
            "bl rsym.gdImageSetPixel",
            "cmp fp, r4",
            "ldr ip, [sp, 8]",
            "bge 0x8f48",
            "b 0x8f80",
            "mov r1, r2",
            "mov r0, r4",
            "mov r2, lr",
            "mov r3, ip",
            "str fp, [sp]",
            "bl fcn.00008924",
            "b 0x8a14",
            "ldr r2, [sp, 0x18]",
            "cmp r5, r2",
            "bge 0x8a14",
            "ldr r7, [sp, 0x18]",
            "ldr r6, [sp, 0x14]",
            "ldr ip, [sp, 0x20]",
            "str r4, [sp, 0x18]",
            "str fp, [sp, 0x14]",
            "b 0x8ff4",
            "cmp r7, r5",
            "ble 0x8a14",
            "cmp sl, 0",
            "add r5, r5, 1",
            "ldrge r1, [sp, 0xc]",
            "subge sb, sb, 1",
            "ldrlt r3, [sp, 0x10]",
            "addge sl, sl, ip",
            "addge r8, sb, r1",
            "add r4, r8, r6",
            "addlt sl, sl, r3",
            "cmp r8, r4",
            "bge 0x8fec",
            "mov fp, r8",
            "mov r2, fp",
            "ldr r0, [sp, 0x18]",
            "mov r1, r5",
            "ldr r3, [sp, 0x14]",
            "add fp, fp, 1",
            "str ip, [sp, 8]",
            "bl rsym.gdImageSetPixel",
            "cmp fp, r4",
            "ldr ip, [sp, 8]",
            "bge 0x8fec",
            "b 0x9024",
            "ldr ip, [sp, 0x10]",
            "add r3, ip, ip, lsr 31",
            "asr r3, r3, 1",
            "rsb r3, r3, 0",
            "str r3, [sp, 0xc]",
            "b 0x8e80",
            "ldr r3, [sp, 0x14]",
            "cmp r5, r3",
            "bge 0x8a14",
            "ldr r7, [sp, 0x14]",
            "ldr r6, [sp, 0x10]",
            "ldr ip, [sp, 0x20]",
            "str r4, [sp, 0x10]",
            "str fp, [sp, 0x14]",
            "b 0x9094",
            "cmp r7, r5",
            "ble 0x8a14",
            "cmp sb, 0",
            "add r5, r5, 1",
            "ldrge r2, [sp, 0xc]",
            "subge sl, sl, 1",
            "ldrlt r1, [sp, 0x18]",
            "addge sb, sb, ip",
            "addge r8, sl, r2",
            "add r4, r8, r6",
            "addlt sb, sb, r1",
            "cmp r8, r4",
            "bge 0x908c",
            "mov fp, r8",
            "mov r1, fp",
            "ldr r0, [sp, 0x10]",
            "mov r2, r5",
            "ldr r3, [sp, 0x14]",
            "add fp, fp, 1",
            "str ip, [sp, 8]",
            "bl rsym.gdImageSetPixel",
            "cmp fp, r4",
            "ldr ip, [sp, 8]",
            "bge 0x908c",
            "b 0x90c4",
            "cmp r1, 0",
            "blt 0x91e0",
            "lsl sl, sl, 0x10",
            "lsl r0, r3, 0x10",
            "asr r6, sl, 0x10",
            "bl fcn.00013da0",
            "cmp r6, fp",
            "str r0, [sp, 0xc]",
            "bgt 0x8a14",
            "lsl r7, r7, 0x10",
            "mov sb, r5",
            "rsb fp, r0, 0",
            "mvn r8, r7",
            "mov r5, r4",
            "asr r4, r7, 0x10",
            "ubfx ip, r7, 8, 8",
            "mov r2, r6",
            "str ip, [sp]",
            "mov r0, r5",
            "mov r1, r4",
            "mov r3, sb",
            "add sl, sl, 0x10000",
            "bl fcn.00004b2c",
            "ubfx ip, r8, 8, 8",
            "mov r2, r6",
            "str ip, [sp]",
            "mov r3, sb",
            "ldr ip, [sp, 0xc]",
            "mov r0, r5",
            "add r1, r4, 1",
            "asr r6, sl, 0x10",
            "add r8, r8, fp",
            "add r7, r7, ip",
            "bl fcn.00004b2c",
            "ldr r3, [sp, 0x30]",
            "cmp r6, r3",
            "ble 0x9128",
            "b 0x8a14",
            "mov ip, 0xff",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, sl",
            "mov r3, r5",
            "str ip, [sp]",
            "bl fcn.00004b2c",
            "b 0x8a14",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, sl",
            "mov r3, fp",
            "str r5, [sp]",
            "bl fcn.0000889c",
            "b 0x8a14",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, r7",
            "mov r3, sb",
            "str r5, [sp]",
            "bl fcn.00008924",
            "b 0x8a14",
            "mov r2, fp",
            "rsb r1, fp, sl",
            "str r7, [sp, 0x34]",
            "rsb r3, sb, r7",
            "str fp, [sp, 0x38]",
            "mov r7, sb",
            "str sl, [sp, 0x30]",
            "mov fp, sl",
            "str sb, [sp, 0x3c]",
            "mov sl, r2",
            "b 0x90f8",
            "mov r2, sb",
            "rsb r3, sb, r7",
            "str sb, [sp, 0x3c]",
            "rsb r1, fp, sl",
            "str r7, [sp, 0x34]",
            "mov sb, r7",
            "str sl, [sp, 0x30]",
            "mov r7, r2",
            "mov sl, fp",
            "str fp, [sp, 0x38]",
            "b 0x8d04",
            "add r3, r0, r0, lsr 31",
            "asr r3, r3, 1",
            "rsb r3, r3, 0",
            "str r3, [sp, 0xc]",
            "b 0x8af0"
        ]
    },
    "fcn.00003954": {
        "function_address": "0x00003954",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr r4, [sp, 0x48]",
            "mov sl, r0",
            "mov r8, r1",
            "mov r6, r2",
            "ldr r5, [r0]",
            "mov r7, r3",
            "ldr sb, [sp, 0x4c]",
            "cmp r5, r4",
            "bge 0x3a50",
            "ldr fp, [r2]",
            "cmp r4, fp",
            "bgt 0x3ba8",
            "ldr ip, [r1]",
            "ldr r0, [r3]",
            "str ip, [sp, 4]",
            "rsb r0, ip, r0",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "rsb r0, r5, fp",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.000144c0",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "mov r0, ip",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "rsb r0, r4, r5",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea4",
            "bl fcn.000147f0",
            "str r0, [r8]",
            "str r4, [sl]",
            "ldr r8, [r6]",
            "cmp r8, sb",
            "ble 0x3bb8",
            "ldr r0, [r7]",
            "bl fcn.00014178",
            "mov r4, r0",
            "rsb r0, r8, sb",
            "mov r5, r1",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "mov r3, 1",
            "str r0, [r7]",
            "str sb, [r6]",
            "b 0x3bac",
            "cmp r5, sb",
            "ble 0x3b28",
            "ldr fp, [r2]",
            "cmp sb, fp",
            "blt 0x3ba8",
            "ldr ip, [r1]",
            "ldr r0, [r3]",
            "str ip, [sp, 4]",
            "rsb r0, ip, r0",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "rsb r0, r5, fp",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.000144c0",
            "ldr ip, [sp, 4]",
            "strd r0, r1, [sp, 8]",
            "mov r0, ip",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "rsb r0, r5, sb",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "str r0, [r8]",
            "str sb, [sl]",
            "ldr r5, [r6]",
            "cmp r4, r5",
            "ble 0x3bb8",
            "ldr r0, [r7]",
            "bl fcn.00014178",
            "mov r8, r0",
            "rsb r0, r4, r5",
            "mov sb, r1",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 8]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00013ea4",
            "bl fcn.000147f0",
            "mov r3, 1",
            "str r0, [r7]",
            "str r4, [r6]",
            "b 0x3bac",
            "ldr sl, [r2]",
            "cmp sb, sl",
            "blt 0x3bc0",
            "cmp r4, sl",
            "ble 0x3bb8",
            "ldr sb, [r3]",
            "mov r0, sb",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "rsb r0, r4, sl",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [r8]",
            "rsb r0, r0, sb",
            "bl fcn.00014178",
            "mov r8, r0",
            "mov sb, r1",
            "rsb r0, r5, sl",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.000144c0",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "b 0x3b10",
            "mov r3, 0",
            "mov r0, r3",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 1",
            "b 0x3bac",
            "ldr r4, [r3]",
            "mov r0, r4",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 8]",
            "rsb r0, sl, sb",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [r8]",
            "rsb r0, r0, r4",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x18]",
            "rsb r0, r5, sl",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.000144c0",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "b 0x3a38"
        ]
    },
    "sym.imp.cos": {
        "function_address": "0x000032c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf58]!"
        ]
    },
    "fcn.0001478c": {
        "function_address": "0x0001478c",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00014778",
            "moveq r0, 1",
            "movne r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00004b2c": {
        "function_address": "0x00004b2c",
        "instructions": [
            "movw ip, 0x1c58",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "ldr ip, [r0, ip]",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "mov r5, r2",
            "mov r6, r1",
            "ldr r7, [sp, 0x28]",
            "cmp ip, r2",
            "bgt 0x4b84",
            "movw ip, 0x1c60",
            "ldr ip, [r0, ip]",
            "cmp r2, ip",
            "bgt 0x4b84",
            "movw ip, 0x1c54",
            "ldr ip, [r0, ip]",
            "cmp ip, r1",
            "bgt 0x4b84",
            "movw ip, 0x1c5c",
            "ldr ip, [r0, ip]",
            "cmp r1, ip",
            "ble 0x4b8c",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "str r3, [sp, 4]",
            "bl rsym.gdImageGetPixel",
            "ldr r3, [sp, 4]",
            "cmp r0, r3",
            "beq 0x4b84",
            "movw r2, 0x1c50",
            "ldr r2, [r4, r2]",
            "cmp r2, r0",
            "movne r2, 0",
            "moveq r2, 1",
            "cmp r7, 0",
            "moveq r2, 0",
            "cmp r2, 0",
            "bne 0x4b84",
            "ubfx ip, r3, 0x10, 8",
            "ubfx r8, r0, 0x10, 8",
            "and r2, r3, 0xff",
            "and r1, r0, 0xff",
            "rsb r8, ip, r8",
            "rsb r1, r2, r1",
            "mul r8, r7, r8",
            "ubfx r3, r3, 8, 8",
            "ubfx r0, r0, 8, 8",
            "movw sl, 0x1c3c",
            "mul r1, r7, r1",
            "rsb r0, r3, r0",
            "ldr r4, [r4, sl]",
            "mul r7, r7, r0",
            "add r0, r8, 0x80",
            "add r8, r0, r8, asr 8",
            "ldr r0, [r4, r5, lsl 2]",
            "add r4, r1, 0x80",
            "add ip, ip, r8, asr 8",
            "add r1, r4, r1, asr 8",
            "add r4, r7, 0x80",
            "add r7, r4, r7, asr 8",
            "add r2, r2, r1, asr 8",
            "add r3, r3, r7, asr 8",
            "add r2, r2, ip, lsl 16",
            "add r3, r2, r3, lsl 8",
            "str r3, [r0, r6, lsl 2]",
            "b 0x4b84"
        ]
    },
    "fcn.0000889c": {
        "function_address": "0x0000889c",
        "instructions": [
            "movw ip, 0x1834",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr ip, [r0, ip]",
            "sub sp, sp, 8",
            "mov r6, r0",
            "mov r7, r1",
            "mov r4, r2",
            "mov r5, r3",
            "cmp ip, 1",
            "ldr r8, [sp, 0x20]",
            "bgt 0x8900",
            "cmp r2, r3",
            "movgt r3, r2",
            "movgt r4, r5",
            "movgt r5, r3",
            "mov r2, r4",
            "mov r0, r6",
            "mov r1, r7",
            "mov r3, r8",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r4, r5",
            "ble 0x88d8",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "asr r1, ip, 1",
            "sub r3, ip, 1",
            "str r5, [sp]",
            "rsb r3, r1, r3",
            "rsb r1, r1, r7",
            "add r3, r3, r7",
            "str r8, [sp, 4]",
            "bl rsym.gdImageFilledRectangle",
            "b 0x88f8"
        ]
    },
    "sym.imp.sin": {
        "function_address": "0x000032f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf38]!"
        ]
    },
    "fcn.00008924": {
        "function_address": "0x00008924",
        "instructions": [
            "movw ip, 0x1834",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr ip, [r0, ip]",
            "sub sp, sp, 8",
            "mov r6, r0",
            "mov r7, r1",
            "mov r4, r2",
            "mov r5, r3",
            "cmp ip, 1",
            "ldr r8, [sp, 0x20]",
            "bgt 0x8988",
            "cmp r2, r3",
            "movgt r3, r2",
            "movgt r4, r5",
            "movgt r5, r3",
            "mov r1, r4",
            "mov r0, r6",
            "mov r2, r7",
            "mov r3, r8",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r4, r5",
            "ble 0x8960",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "asr r2, ip, 1",
            "sub ip, ip, 1",
            "mov r1, r4",
            "str r8, [sp, 4]",
            "rsb ip, r2, ip",
            "rsb r2, r2, r7",
            "add r7, ip, r7",
            "str r7, [sp]",
            "bl rsym.gdImageFilledRectangle",
            "b 0x8980"
        ]
    },
    "sym.gdImageGifAnimBeginPtr": {
        "function_address": "0x0000edc0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "mov r8, r2",
            "mov r7, r3",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mov r2, r8",
            "mov r3, r7",
            "mov r0, r6",
            "mov r1, r4",
            "bl rsym.gdImageGifAnimBeginCtx",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "rsym.gdImageGifAnimBeginCtx": {
        "function_address": "0x00003438",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe60]!"
        ]
    },
    "sym.gdImagePaletteCopy": {
        "function_address": "0x000047b8",
        "instructions": [
            "movw r3, 0x1c38",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r2, [r0, r3]",
            "sub sp, sp, 0x410",
            "sub sp, sp, 4",
            "mov r4, r0",
            "mov r8, r1",
            "cmp r2, 0",
            "bne 0x497c",
            "ldr r3, [r1, r3]",
            "cmp r3, 0",
            "bne 0x497c",
            "add r2, sp, 0x10",
            "mvn r1, 0",
            "sub r3, r2, 4",
            "add r2, r2, 0x3fc",
            "str r1, [r3, 4]!",
            "cmp r3, r2",
            "bne 0x47f8",
            "ldr r2, [r4, 4]",
            "cmp r2, 0",
            "ble 0x48c4",
            "ldr r3, [r4, 8]",
            "mov r6, 0",
            "cmp r3, 0",
            "movgt r5, 0",
            "bgt 0x483c",
            "b 0x48b8",
            "strb r0, [r3]",
            "add r5, r5, 1",
            "ldr r3, [r4, 8]",
            "cmp r3, r5",
            "ble 0x48b4",
            "ldr r3, [r4]",
            "add r1, sp, 0x410",
            "ldr r3, [r3, r5, lsl 2]",
            "ldrb r2, [r3, r6]",
            "add r3, r3, r6",
            "add r7, r1, r2, lsl 2",
            "ldr r0, [r7, -0x400]",
            "cmn r0, 1",
            "bne 0x4828",
            "add ip, r2, 0x600",
            "add r1, r2, 4",
            "add ip, ip, 0xe",
            "add r0, r2, 0x104",
            "ldr ip, [r4, ip, lsl 2]",
            "add r3, r2, 0x204",
            "ldr r3, [r4, r3, lsl 2]",
            "ldr r2, [r4, r0, lsl 2]",
            "mov r0, r8",
            "ldr r1, [r4, r1, lsl 2]",
            "str ip, [sp]",
            "bl rsym.gdImageColorClosestAlpha",
            "ldr r3, [r4]",
            "str r0, [r7, -0x400]",
            "ldr r3, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "add r3, r3, r6",
            "strb r0, [r3]",
            "ldr r3, [r4, 8]",
            "cmp r3, r5",
            "bgt 0x483c",
            "ldr r2, [r4, 4]",
            "add r6, r6, 1",
            "cmp r2, r6",
            "bgt 0x4818",
            "ldr sb, [r8, 0xc]",
            "cmp sb, 0",
            "ble 0x4948",
            "add r6, r4, 0x800",
            "add r7, r8, 0x800",
            "add r5, r8, 0x1800",
            "add ip, r4, 0x1800",
            "add r0, r4, 0xc00",
            "mov r1, 0",
            "mov r3, r8",
            "mov r2, r4",
            "add r7, r7, 0xc",
            "add r6, r6, 0xc",
            "add r5, r5, 0x34",
            "add ip, ip, 0x34",
            "add r0, r0, 0xc",
            "mov fp, r1",
            "str r4, [sp, 0xc]",
            "ldr r4, [r3, 0x410]",
            "add r1, r1, 1",
            "ldr sl, [r3, 0x10]",
            "cmp r1, sb",
            "ldr r8, [r7, 4]!",
            "add r3, r3, 4",
            "str r4, [r2, 0x410]",
            "ldr r4, [r5, 4]!",
            "str sl, [r2, 0x10]",
            "add r2, r2, 4",
            "str r8, [r6, 4]!",
            "str r4, [ip, 4]!",
            "str fp, [r0, 4]!",
            "bne 0x490c",
            "ldr r4, [sp, 0xc]",
            "ldr r1, [r4, 0xc]",
            "cmp r1, sb",
            "ble 0x4978",
            "add r2, sb, 0x300",
            "mov r3, sb",
            "add r2, r2, 3",
            "mov r0, 1",
            "add r2, r4, r2, lsl 2",
            "add r3, r3, 1",
            "str r0, [r2, 4]!",
            "cmp r3, r1",
            "bne 0x4968",
            "str sb, [r4, 0xc]",
            "add sp, sp, 0x14",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdImagePng": {
        "function_address": "0x00010e58",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mvn r2, 0",
            "mov r0, r5",
            "mov r1, r4",
            "bl rsym.gdImagePngCtxEx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageSetPixel": {
        "function_address": "0x00005208",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x1c",
            "mov r6, r1",
            "mov r5, r2",
            "movw r7, 0x1020",
            "movw r8, 0x1c38",
            "movw sb, 0x1010",
            "movw fp, 0x1c4c",
            "add r2, r3, 7",
            "cmp r2, 5",
            "addls pc, pc, r2, lsl 2",
            "b 0x54dc",
            "b 0x54d4",
            "b 0x54dc",
            "b 0x5438",
            "b 0x53ec",
            "b 0x52b0",
            "b 0x5254",
            "movw r3, 0x182c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x52a8",
            "movw r7, 0x1828",
            "ldr r0, [r4, r7]",
            "ldr r3, [r3, r0, lsl 2]",
            "add r0, r0, 1",
            "str r0, [r4, r7]",
            "cmn r3, 6",
            "beq 0x5294",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, r5",
            "bl rsym.gdImageSetPixel",
            "ldr r0, [r4, r7]",
            "movw r3, 0x1824",
            "ldr r1, [r4, r3]",
            "bl fcn.00013e7c",
            "movw r3, 0x1828",
            "str r1, [r4, r3]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r7, 0x101c",
            "ldr r2, [r4, r7]",
            "cmp r2, 0",
            "beq 0x52a8",
            "ldr r0, [r2, 8]",
            "movw r3, 0x1c38",
            "ldr sb, [r2, 4]",
            "ldr r1, [r4, r3]",
            "add sl, r0, r0, lsr 31",
            "add ip, sb, sb, lsr 31",
            "cmp r1, 0",
            "sub sl, r5, sl, asr 1",
            "sub ip, r6, ip, asr 1",
            "add r0, sl, r0",
            "str ip, [sp, 0x10]",
            "add sb, ip, sb",
            "str r0, [sp, 0x14]",
            "bne 0x5550",
            "cmp sl, r0",
            "bge 0x52a8",
            "str sl, [sp, 0xc]",
            "movw r8, 0x1010",
            "mov fp, sb",
            "mov sl, r1",
            "ldr r0, [sp, 0x10]",
            "cmp r0, fp",
            "movlt r5, r0",
            "movlt r6, 0",
            "blt 0x5354",
            "b 0x53cc",
            "str sb, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r1, r5",
            "mov r3, r0",
            "ldr r2, [sp, 0xc]",
            "mov r0, r4",
            "bl rsym.gdImageSetPixel",
            "add r5, r5, 1",
            "add r6, r6, 1",
            "cmp fp, r5",
            "ble 0x53cc",
            "mov r1, r6",
            "mov r2, sl",
            "ldr r0, [r4, r7]",
            "bl rsym.gdImageGetPixel",
            "ldr r2, [r4, r7]",
            "mov r3, r0",
            "ldr r1, [r2, r8]",
            "cmp r0, r1",
            "beq 0x5344",
            "movw r1, 0x1c38",
            "add ip, r0, 0x400",
            "ldr lr, [r2, r1]",
            "add ip, ip, 8",
            "ubfx sb, r0, 0x18, 7",
            "ubfx r1, r3, 0x10, 8",
            "ubfx r2, r3, 8, 8",
            "mov r0, r4",
            "cmp lr, 0",
            "uxtb r3, r3",
            "add ip, r4, ip, lsl 2",
            "bne 0x5328",
            "mov r1, r5",
            "mov r0, r4",
            "ldr r2, [sp, 0xc]",
            "add r5, r5, 1",
            "ldr r3, [ip, 4]",
            "add r6, r6, 1",
            "bl rsym.gdImageSetPixel",
            "cmp fp, r5",
            "bgt 0x5354",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x14]",
            "add r2, r2, 1",
            "cmp r3, r2",
            "str r2, [sp, 0xc]",
            "ble 0x52a8",
            "add sl, sl, 1",
            "b 0x5310",
            "movw r3, 0x182c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x52a8",
            "movw r7, 0x1828",
            "ldr r0, [r4, r7]",
            "ldr r3, [r3, r0, lsl 2]",
            "add r0, r0, 1",
            "str r0, [r4, r7]",
            "cmp r3, 0",
            "cmnne r3, 6",
            "beq 0x5294",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, r5",
            "mvn r3, 2",
            "bl rsym.gdImageSetPixel",
            "ldr r0, [r4, r7]",
            "b 0x5294",
            "ldr sl, [r4, r7]",
            "mov r0, r6",
            "cmp sl, 0",
            "beq 0x52a8",
            "ldr r1, [sl, 4]",
            "bl fcn.00013e7c",
            "mov r0, r5",
            "str r1, [sp, 0xc]",
            "ldr r1, [sl, 8]",
            "bl fcn.00013e7c",
            "ldr r3, [r4, r8]",
            "mov ip, r1",
            "mov r0, sl",
            "ldr r1, [sp, 0xc]",
            "mov r2, ip",
            "cmp r3, 0",
            "bne 0x55f8",
            "bl rsym.gdImageGetPixel",
            "ldr r1, [r4, r7]",
            "mov r3, r0",
            "add r2, r0, 0x500",
            "add r2, r2, 8",
            "ldr r0, [r1, sb]",
            "add r2, r4, r2, lsl 2",
            "cmp r3, r0",
            "beq 0x52a8",
            "ldr r1, [r1, r8]",
            "cmp r1, 0",
            "ldreq r3, [r2, 4]",
            "beq 0x522c",
            "ubfx ip, r3, 0x18, 7",
            "ubfx r1, r3, 0x10, 8",
            "ubfx r2, r3, 8, 8",
            "mov r0, r4",
            "uxtb r3, r3",
            "str ip, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r3, r0",
            "b 0x522c",
            "ldr r3, [r4, fp]",
            "b 0x522c",
            "movw r2, 0x1c58",
            "ldr r2, [r4, r2]",
            "cmp r2, r5",
            "bgt 0x52a8",
            "movw r2, 0x1c60",
            "ldr r2, [r4, r2]",
            "cmp r2, r5",
            "blt 0x52a8",
            "movw r2, 0x1c54",
            "ldr r2, [r4, r2]",
            "cmp r2, r6",
            "bgt 0x52a8",
            "movw r2, 0x1c5c",
            "ldr r2, [r4, r2]",
            "cmp r2, r6",
            "blt 0x52a8",
            "movw r2, 0x1c38",
            "ldr r2, [r4, r2]",
            "cmp r2, 0",
            "beq 0x56a0",
            "mov r2, 0x1c40",
            "ldr r2, [r4, r2]",
            "cmp r2, 0",
            "bne 0x56b0",
            "movw r2, 0x1c3c",
            "ldr r2, [r4, r2]",
            "ldr r2, [r2, r5, lsl 2]",
            "str r3, [r2, r6, lsl 2]",
            "b 0x52a8",
            "ldr r8, [r2, r3]",
            "cmp r8, 0",
            "bne 0x5614",
            "ldr r0, [sp, 0x14]",
            "cmp sl, r0",
            "movlt fp, sb",
            "movlt sb, sl",
            "bge 0x52a8",
            "ldr r0, [sp, 0x10]",
            "cmp r0, fp",
            "movlt r5, r0",
            "movlt r6, 0",
            "bge 0x55e0",
            "mov r1, r6",
            "mov r2, r8",
            "ldr r0, [r4, r7]",
            "bl rsym.gdImageGetPixel",
            "mov r1, r6",
            "mov sl, r0",
            "mov r2, r8",
            "ldr r0, [r4, r7]",
            "bl rsym.gdImageGetTrueColorPixel",
            "ldr ip, [r4, r7]",
            "movw r2, 0x1010",
            "mov r3, r0",
            "mov r1, r5",
            "add r6, r6, 1",
            "add r5, r5, 1",
            "ldr ip, [ip, r2]",
            "mov r0, r4",
            "mov r2, sb",
            "cmp sl, ip",
            "beq 0x55d8",
            "bl rsym.gdImageSetPixel",
            "cmp fp, r5",
            "bgt 0x5584",
            "ldr r3, [sp, 0x14]",
            "add sb, sb, 1",
            "cmp r3, sb",
            "ble 0x52a8",
            "add r8, r8, 1",
            "b 0x5570",
            "bl rsym.gdImageGetTrueColorPixel",
            "ldr r2, [r4, r7]",
            "mov r3, r0",
            "ldr r2, [r2, sb]",
            "cmp r0, r2",
            "bne 0x522c",
            "b 0x52a8",
            "ldr r1, [sp, 0x14]",
            "cmp sl, r1",
            "movlt fp, 0",
            "movlt r8, r7",
            "bge 0x52a8",
            "ldr r1, [sp, 0x10]",
            "cmp r1, sb",
            "movlt r5, r1",
            "movlt r7, 0",
            "bge 0x5688",
            "mov r1, r7",
            "mov r2, fp",
            "ldr r0, [r4, r8]",
            "add r7, r7, 1",
            "bl rsym.gdImageGetTrueColorPixel",
            "ldr ip, [r4, r8]",
            "movw r3, 0x1010",
            "mov r6, r0",
            "mov r1, r5",
            "mov r0, r4",
            "add r5, r5, 1",
            "ldr ip, [ip, r3]",
            "mov r2, sl",
            "mov r3, r6",
            "cmp r6, ip",
            "beq 0x5680",
            "bl rsym.gdImageSetPixel",
            "cmp sb, r5",
            "bgt 0x563c",
            "ldr r0, [sp, 0x14]",
            "add sl, sl, 1",
            "cmp r0, sl",
            "ble 0x52a8",
            "add fp, fp, 1",
            "b 0x5628",
            "ldr r2, [r4]",
            "ldr r2, [r2, r5, lsl 2]",
            "strb r3, [r2, r6]",
            "b 0x52a8",
            "mov r1, r3",
            "movw r3, 0x1c3c",
            "ldr r3, [r4, r3]",
            "ldr r4, [r3, r5, lsl 2]",
            "ldr r0, [r4, r6, lsl 2]",
            "bl rsym.gdAlphaBlend",
            "str r0, [r4, r6, lsl 2]",
            "b 0x52a8"
        ]
    },
    "fcn.00013e7c": {
        "function_address": "0x00013e7c",
        "instructions": [
            "cmp r1, 0",
            "beq 0x13e6c",
            "push {r0, r1, lr}",
            "bl fcn.00013da8",
            "pop {r1, r2, lr}",
            "mul r3, r2, r0",
            "sub r1, r1, r3",
            "bx lr"
        ]
    },
    "rsym.gdImageGetTrueColorPixel": {
        "function_address": "0x000031ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfe8]!"
        ]
    },
    "rsym.gdAlphaBlend": {
        "function_address": "0x00003450",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe50]!"
        ]
    },
    "sym.gdImageSetStyle": {
        "function_address": "0x00004d0c",
        "instructions": [
            "movw r3, 0x182c",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r0, [r0, r3]",
            "mov r7, r1",
            "mov r5, r2",
            "cmp r0, 0",
            "beq 0x4d30",
            "bl rsym.gdFree",
            "mov r0, 4",
            "mov r1, r5",
            "bl rsym.overflow2",
            "subs r6, r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "lsl r8, r5, 2",
            "mov r0, r8",
            "bl rsym.gdMalloc",
            "movw r2, 0x182c",
            "cmp r0, 0",
            "str r0, [r4, r2]",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "mov r1, r7",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "movw r3, 0x1824",
            "str r5, [r4, r3]",
            "movw r3, 0x1828",
            "str r6, [r4, r3]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.gdImageFilledRectangle": {
        "function_address": "0x000072f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr r0, [r0, 4]",
            "mov r6, r3",
            "bic r1, r1, r1, asr 31",
            "bic r2, r2, r2, asr 31",
            "ldr r3, [r7, 8]",
            "ldr sb, [sp, 0x20]",
            "cmp r1, r0",
            "movlt sl, r1",
            "movge sl, r0",
            "ldr r8, [sp, 0x24]",
            "cmp r2, r3",
            "movlt r5, r2",
            "movge r5, r3",
            "cmp sl, r6",
            "movgt r3, sl",
            "movgt sl, r6",
            "movgt r6, r3",
            "cmp r5, sb",
            "movgt r3, r5",
            "movgt r5, sb",
            "movgt sb, r3",
            "cmp sl, r6",
            "movle r4, sl",
            "bgt 0x737c",
            "mov r1, r4",
            "mov r0, r7",
            "mov r2, r5",
            "mov r3, r8",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r6, r4",
            "bge 0x735c",
            "add r5, r5, 1",
            "cmp sb, r5",
            "bge 0x7350",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.gdImageStringFTCircle": {
        "function_address": "0x0000a294",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r3, 0",
            "sub sp, sp, 0x94",
            "movt r3, 0x4010",
            "mov fp, 0",
            "mov sl, 0",
            "ldr r7, [sp, 0xd0]",
            "add r6, sp, 0x70",
            "str r0, [sp, 0x34]",
            "str r1, [sp, 0x44]",
            "str r2, [sp, 0x48]",
            "mov r2, 0",
            "ldrd r0, r1, [sp, 0xd8]",
            "bl fcn.00014254",
            "strd sl, fp, [sp, 8]",
            "mov ip, 0",
            "ldr fp, [sp, 0xe4]",
            "mov r8, r0",
            "mov sb, r1",
            "mov r0, ip",
            "ldr r4, [0x0000aab8]",
            "mov r1, r6",
            "mov r2, ip",
            "mov r3, r7",
            "strd r8, sb, [sp]",
            "str ip, [sp, 0x10]",
            "add r4, pc, r4",
            "str ip, [sp, 0x14]",
            "str fp, [sp, 0x18]",
            "bl rsym.gdImageStringFT",
            "subs r5, r0, 0",
            "beq 0xa320",
            "mov r0, r5",
            "add sp, sp, 0x94",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr sl, [sp, 0x70]",
            "mov r2, r5",
            "ldr fp, [sp, 0x8c]",
            "mov r1, r6",
            "ldr ip, [sp, 0x88]",
            "mov r3, r7",
            "str sl, [sp, 0x5c]",
            "ldr sl, [sp, 0x74]",
            "ldr lr, [sp, 0x78]",
            "str fp, [sp, 0x60]",
            "mov fp, 0",
            "str sl, [sp, 0x6c]",
            "mov sl, 0",
            "str ip, [sp, 0x4c]",
            "str lr, [sp, 0x50]",
            "ldr ip, [sp, 0x84]",
            "ldr lr, [sp, 0x7c]",
            "strd sl, fp, [sp, 8]",
            "ldr fp, [sp, 0xe0]",
            "str r5, [sp, 0x10]",
            "str r5, [sp, 0x14]",
            "ldr r6, [sp, 0x80]",
            "str ip, [sp, 0x64]",
            "str lr, [sp, 0x68]",
            "strd r8, sb, [sp]",
            "str fp, [sp, 0x18]",
            "bl rsym.gdImageStringFT",
            "subs r5, r0, 0",
            "bne 0xa314",
            "ldr r3, [sp, 0x4c]",
            "ldr ip, [sp, 0x50]",
            "ldr r1, [sp, 0x88]",
            "ldr r5, [sp, 0x4c]",
            "cmp r3, r6",
            "movlt r3, r6",
            "ldr r2, [sp, 0x80]",
            "cmp r3, ip",
            "movlt r3, ip",
            "ldr sl, [sp, 0x5c]",
            "ldr r0, [sp, 0x78]",
            "cmp r5, r6",
            "movge r5, r6",
            "ldr lr, [sp, 0x84]",
            "cmp sl, r3",
            "movlt sl, r3",
            "ldr r6, [sp, 0x8c]",
            "cmp r2, r1",
            "movge r3, r2",
            "movlt r3, r1",
            "ldr ip, [sp, 0x70]",
            "cmp r2, r1",
            "movge r2, r1",
            "ldr r1, [sp, 0x50]",
            "cmp r3, r0",
            "movlt r3, r0",
            "cmp r2, r0",
            "movge r2, r0",
            "ldr r0, [sp, 0x5c]",
            "ldr fp, [sp, 0x7c]",
            "cmp r5, r1",
            "movge r5, r1",
            "cmp r3, ip",
            "movge r1, r3",
            "movlt r1, ip",
            "cmp lr, r6",
            "movlt r3, lr",
            "movge r3, r6",
            "cmp r2, ip",
            "movlt ip, r2",
            "movge ip, ip",
            "cmp lr, r6",
            "movge r2, lr",
            "movlt r2, r6",
            "ldr r6, [sp, 0x74]",
            "cmp r0, r5",
            "movge r0, r5",
            "add r1, r1, 6",
            "add r5, sl, 6",
            "rsb ip, ip, r1",
            "cmp r2, fp",
            "movlt r2, fp",
            "cmp r3, fp",
            "movge r3, fp",
            "rsb r5, r0, r5",
            "cmp r3, r6",
            "movge r3, r6",
            "cmp r2, r6",
            "movlt r2, r6",
            "cmp r5, ip",
            "str ip, [sp, 0x50]",
            "ldrle sl, [sp, 0x50]",
            "add r2, r2, 6",
            "rsb r2, r3, r2",
            "addgt r3, r5, 2",
            "lslgt r3, r3, 1",
            "ldr fp, [sp, 0x60]",
            "addle r3, sl, 2",
            "ldr ip, [sp, 0x68]",
            "lslle r3, r3, 1",
            "strgt r3, [sp, 0x4c]",
            "ldr r1, [sp, 0x64]",
            "strle r3, [sp, 0x4c]",
            "ldr r3, [sp, 0x64]",
            "ldr lr, [sp, 0x6c]",
            "cmp r1, fp",
            "movge r1, fp",
            "cmp r1, ip",
            "movge r1, ip",
            "ldr r0, [sp, 0x4c]",
            "cmp r3, fp",
            "movlt r3, fp",
            "cmp r3, ip",
            "movlt r3, ip",
            "cmp r1, lr",
            "movge r1, lr",
            "cmp r3, lr",
            "movlt r3, lr",
            "add r3, r3, 6",
            "rsb r3, r1, r3",
            "cmp r2, r3",
            "movlt r2, r3",
            "mov r1, r2",
            "str r2, [sp, 0x5c]",
            "bl rsym.gdImageCreateTrueColor",
            "subs r6, r0, 0",
            "beq 0xa590",
            "ldr r0, [sp, 0x4c]",
            "mov r1, sb",
            "mov fp, 0",
            "mov sl, 0",
            "asr r0, r0, 1",
            "str r0, [sp, 0x38]",
            "mov r0, r8",
            "bl fcn.000147f0",
            "ldr r1, [sp, 0x38]",
            "mvn r2, 0xff000000",
            "str r0, [sp, 0x20]",
            "mov r3, r7",
            "strd sl, fp, [sp, 8]",
            "mov r0, r6",
            "rsb ip, r5, r1",
            "ldr fp, [sp, 0x20]",
            "add ip, ip, ip, lsr 31",
            "mov r1, 0",
            "strd r8, sb, [sp]",
            "asr ip, ip, 1",
            "str fp, [sp, 0x14]",
            "str ip, [sp, 0x10]",
            "ldr ip, [sp, 0xe4]",
            "str ip, [sp, 0x18]",
            "bl rsym.gdImageStringFT",
            "subs r5, r0, 0",
            "beq 0xa59c",
            "mov r0, r6",
            "bl rsym.gdImageDestroy",
            "b 0xa314",
            "ldr r5, [0x0000aabc]",
            "add r5, r4, r5",
            "b 0xa314",
            "ldr lr, [sp, 0x38]",
            "mov r1, r5",
            "ldr r0, [sp, 0x50]",
            "mvn r2, 0xff000000",
            "strd r8, sb, [sp]",
            "mov sb, 0",
            "mov r8, 0",
            "ldr sl, [sp, 0xe0]",
            "rsb ip, r0, lr",
            "strd r8, sb, [sp, 8]",
            "add ip, ip, ip, lsr 31",
            "ldr sb, [sp, 0x20]",
            "mov r0, r6",
            "str sl, [sp, 0x18]",
            "add ip, lr, ip, asr 1",
            "mov r3, r7",
            "str sb, [sp, 0x14]",
            "str ip, [sp, 0x10]",
            "bl rsym.gdImageStringFT",
            "subs r5, r0, 0",
            "bne 0xa584",
            "ldr fp, [sp, 0x5c]",
            "tst fp, 1",
            "bne 0xa6e0",
            "add fp, fp, fp, lsr 31",
            "asr fp, fp, 1",
            "cmp fp, 0",
            "ble 0xa6a4",
            "ldr lr, [sp, 0x5c]",
            "mov r8, r5",
            "ldr r0, [sp, 0x4c]",
            "movw sb, 0x1c3c",
            "ldr r1, [sp, 0x38]",
            "ldr r2, [sp, 0x38]",
            "sub r7, lr, 1",
            "sub r3, r0, 1",
            "lsl r7, r7, 2",
            "lsl r3, r3, 2",
            "sub lr, r0, 2",
            "lsl r1, r1, 2",
            "add sl, r2, 2",
            "str r3, [sp, 0x20]",
            "str r1, [sp, 0x28]",
            "cmp lr, sl",
            "ble 0xa694",
            "ldr r3, [r6, sb]",
            "mov r1, sl",
            "ldr ip, [sp, 0x20]",
            "ldr r0, [sp, 0x28]",
            "ldr r2, [r3, r7]",
            "ldr r3, [r3, r8, lsl 2]",
            "add r2, r2, ip",
            "add r3, r3, r0",
            "ldr r0, [r2, -8]",
            "add r1, r1, 1",
            "ldr ip, [r3, 8]",
            "cmp lr, r1",
            "str ip, [r2, -8]",
            "sub r2, r2, 4",
            "str r0, [r3, 8]",
            "add r3, r3, 4",
            "bgt 0xa670",
            "add r8, r8, 1",
            "sub r7, r7, 4",
            "cmp r8, fp",
            "bne 0xa648",
            "ldr r1, [sp, 0x5c]",
            "ldr r0, [sp, 0x4c]",
            "add r7, r1, r1, lsl 2",
            "lsl r7, r7, 1",
            "cmp r0, r7",
            "movlt r0, r7",
            "mov r1, r0",
            "bl rsym.gdImageCreateTrueColor",
            "subs r8, r0, 0",
            "bne 0xa7b0",
            "ldr r5, [0x0000aac0]",
            "mov r0, r6",
            "bl rsym.gdImageDestroy",
            "add r5, r4, r5",
            "b 0xa314",
            "ldr lr, [sp, 0x5c]",
            "add sb, lr, lr, lsr 31",
            "asrs sb, sb, 1",
            "bmi 0xa6a4",
            "ldr r0, [sp, 0x4c]",
            "sub r7, lr, 1",
            "lsl r7, r7, 2",
            "mov r8, r5",
            "movw fp, 0x1c3c",
            "cmp r0, 0",
            "add r2, r0, 3",
            "sub r1, r0, 2",
            "movge r2, r0",
            "sub r2, r1, r2, asr 2",
            "sub r3, r0, 1",
            "lsl r3, r3, 2",
            "str r1, [sp, 0x20]",
            "str r2, [sp, 0x28]",
            "ldr r2, [sp, 0x38]",
            "str r3, [sp, 0x50]",
            "ldr r3, [sp, 0x38]",
            "lsl r2, r2, 2",
            "add sl, r3, 2",
            "str r2, [sp, 0x60]",
            "ldr ip, [sp, 0x20]",
            "cmp sb, r8",
            "ldr lr, [sp, 0x28]",
            "movne lr, ip",
            "cmp lr, sl",
            "ble 0xa79c",
            "ldr r3, [r6, fp]",
            "mov r1, sl",
            "ldr r0, [sp, 0x50]",
            "ldr ip, [sp, 0x60]",
            "ldr r2, [r3, r7]",
            "ldr r3, [r3, r8, lsl 2]",
            "add r2, r2, r0",
            "add r3, r3, ip",
            "ldr r0, [r2, -8]",
            "add r1, r1, 1",
            "ldr ip, [r3, 8]",
            "cmp r1, lr",
            "str ip, [r2, -8]",
            "sub r2, r2, 4",
            "str r0, [r3, 8]",
            "add r3, r3, 4",
            "bne 0xa778",
            "add r8, r8, 1",
            "sub r7, r7, 4",
            "cmp r8, sb",
            "ble 0xa740",
            "b 0xa6a4",
            "ldrd r2, r3, [sp, 0xb8]",
            "mov r4, 0",
            "ldrd r0, r1, [sp, 0xc0]",
            "bl fcn.000144c0",
            "mov sl, r0",
            "ldr r0, [r8, 4]",
            "mov fp, r1",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x20]",
            "mov r1, 0",
            "ldrd r2, r3, [sp, 0xc8]",
            "mov r0, 0",
            "movt r1, 0x3ff0",
            "bl fcn.00013ea4",
            "strd r0, r1, [sp, 0x50]",
            "mov r0, r7",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x28]",
            "mov r1, 0",
            "mov r2, sl",
            "mov r3, fp",
            "mov r0, 0",
            "movt r1, 0x3ff0",
            "bl fcn.00013ea4",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.00014254",
            "bl fcn.000147f0",
            "ldrd r2, r3, [sp, 0x28]",
            "mov r1, fp",
            "str r0, [sp, 0x4c]",
            "mov r0, sl",
            "bl fcn.00014254",
            "bl fcn.000147f0",
            "ldrd r2, r3, [sp, 0x50]",
            "mov sb, r0",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.00014254",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fd0",
            "bl fcn.00014254",
            "bl fcn.000147f0",
            "ldrd r2, r3, [sp, 0xc8]",
            "mov r7, r0",
            "ldrd r0, r1, [sp, 0x20]",
            "str r4, [sp]",
            "str r4, [sp, 4]",
            "bl fcn.00014254",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fe0",
            "bl fcn.00014254",
            "bl fcn.000147f0",
            "str sb, [sp, 0xc]",
            "mov r2, r7",
            "str r0, [sp, 8]",
            "mov r1, r6",
            "ldr ip, [r6, 4]",
            "mov r0, r8",
            "ldr r3, [sp, 0x4c]",
            "add ip, ip, ip, lsr 31",
            "asr ip, ip, 1",
            "str ip, [sp, 0x10]",
            "ldr ip, [r6, 8]",
            "str ip, [sp, 0x14]",
            "bl rsym.gdImageCopyResampled",
            "ldr sl, [r8, 4]",
            "mov r0, sl",
            "add sl, sl, sl, lsr 31",
            "bl fcn.00014178",
            "ldr r7, [r6, 4]",
            "strd r0, r1, [sp, 0x20]",
            "asr r0, sl, 1",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 0x20]",
            "mov sl, r0",
            "mov fp, r1",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.00014254",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fd0",
            "add r7, r7, r7, lsr 31",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.00013ea8",
            "asr r7, r7, 1",
            "bl fcn.000147f0",
            "ldrd r2, r3, [sp, 0x20]",
            "mov sl, r0",
            "ldrd r0, r1, [sp, 0xc8]",
            "str r7, [sp]",
            "str r4, [sp, 4]",
            "bl fcn.00014254",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fe0",
            "bl fcn.00014254",
            "bl fcn.000147f0",
            "str sb, [sp, 0xc]",
            "mov r2, sl",
            "str r0, [sp, 8]",
            "mov r1, r6",
            "str r7, [sp, 0x10]",
            "mov r0, r8",
            "ldr ip, [r6, 8]",
            "ldr r3, [sp, 0x4c]",
            "str ip, [sp, 0x14]",
            "bl rsym.gdImageCopyResampled",
            "ldrd r0, r1, [sp, 0xb8]",
            "bl fcn.000147f0",
            "mov r1, r0",
            "mov r0, r8",
            "bl rsym.gdImageSquareToCircle",
            "mov r7, r0",
            "mov r0, r6",
            "bl rsym.gdImageDestroy",
            "mov r0, r8",
            "bl rsym.gdImageDestroy",
            "ldr r3, [sp, 0xe8]",
            "ldr r2, [r7, 8]",
            "ldr r6, [sp, 0xe8]",
            "ubfx r0, r3, 0x10, 8",
            "ldr r3, [r7, 4]",
            "ldr sb, [sp, 0x48]",
            "cmp r2, r4",
            "ldr sl, [sp, 0x44]",
            "ubfx lr, r6, 8, 8",
            "and ip, r6, 0xff",
            "ubfx r1, r6, 0x18, 7",
            "add r8, r2, r2, lsr 31",
            "add r6, r3, r3, lsr 31",
            "sub r8, sb, r8, asr 1",
            "sub r6, sl, r6, asr 1",
            "str r8, [sp, 0x3c]",
            "str r6, [sp, 0x38]",
            "ble 0xaaac",
            "lsl lr, lr, 8",
            "movw fp, 0x409",
            "rsb r1, r1, 0x7f",
            "str r4, [sp, 0x28]",
            "add r0, lr, r0, lsl 16",
            "movw r8, 0x1c3c",
            "movt fp, 0x8102",
            "str r5, [sp, 0x40]",
            "mov sb, r1",
            "add r0, r0, ip",
            "str r0, [sp, 0x20]",
            "cmp r3, 0",
            "ble 0xaa94",
            "ldr r0, [sp, 0x28]",
            "mov r4, 0",
            "ldr r1, [sp, 0x3c]",
            "ldr r5, [sp, 0x38]",
            "lsl r6, r0, 2",
            "add sl, r1, r0",
            "str r6, [sp, 0x44]",
            "ldr ip, [sp, 0x44]",
            "mov r1, r5",
            "ldr r3, [r7, r8]",
            "mov r2, sl",
            "ldr r0, [sp, 0x34]",
            "add r5, r5, 1",
            "ldr r3, [r3, ip]",
            "ldr r3, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "ubfx r3, r3, 0x11, 7",
            "mul r3, sb, r3",
            "asr ip, r3, 0x1f",
            "smull r6, lr, fp, r3",
            "add r3, lr, r3",
            "rsb r3, ip, r3, asr 6",
            "ldr ip, [sp, 0x20]",
            "rsb r3, r3, 0x7f",
            "add r3, ip, r3, lsl 24",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r7, 4]",
            "cmp r3, r4",
            "bgt 0xaa38",
            "ldr r2, [r7, 8]",
            "ldr lr, [sp, 0x28]",
            "add lr, lr, 1",
            "cmp r2, lr",
            "str lr, [sp, 0x28]",
            "bgt 0xaa14",
            "ldr r5, [sp, 0x40]",
            "mov r0, r7",
            "bl rsym.gdImageDestroy",
            "b 0xa314"
        ]
    },
    "rsym.gdImageStringFT": {
        "function_address": "0x0000342c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe68]!"
        ]
    },
    "rsym.gdImageCopyResampled": {
        "function_address": "0x00003330",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf10]!"
        ]
    },
    "rsym.gdImageSquareToCircle": {
        "function_address": "0x000030a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xc0]!"
        ]
    },
    "sym.gdImageCopyRotated": {
        "function_address": "0x00005a00",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x480",
            "sub sp, sp, 4",
            "ldr r4, [sp, 0x4b8]",
            "ldr r6, [sp, 0x4bc]",
            "str r0, [sp, 0x64]",
            "strd r2, r3, [sp, 0x18]",
            "mul r0, r4, r4",
            "str r1, [sp, 0x60]",
            "ldr r7, [sp, 0x4b0]",
            "mla r0, r6, r6, r0",
            "bl fcn.00014178",
            "bl sym.imp.sqrt",
            "mov r8, r0",
            "ldr r0, [sp, 0x4c0]",
            "mov sb, r1",
            "bl fcn.00014178",
            "movw r2, 0xe711",
            "movw r3, 0xdf46",
            "movt r2, 0xa1fa",
            "movt r3, 0x3f91",
            "bl fcn.00014254",
            "str r0, [sp, 0xc]",
            "str r1, [sp, 8]",
            "bl sym.imp.cos",
            "ldr r2, [sp, 0xc]",
            "mov sl, r0",
            "ldr r3, [sp, 8]",
            "mov fp, r1",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.sin",
            "strd r0, r1, [sp, 0x30]",
            "mov r0, r7",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, r4",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fe0",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x28]",
            "ldr r0, [sp, 0x4b4]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, r6",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fe0",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x40]",
            "movw r2, 0x1010",
            "ldr r0, [sp, 0x60]",
            "ldr r1, [r0, r2]",
            "cmn r1, 1",
            "beq 0x5b18",
            "ldr ip, [sp, 0x64]",
            "ldr r3, [ip, r2]",
            "cmn r3, 1",
            "streq r1, [ip, r2]",
            "add r2, sp, 0x80",
            "mvn r1, 0",
            "sub r3, r2, 4",
            "add r2, r2, 0x3fc",
            "str r1, [r3, 4]!",
            "cmp r3, r2",
            "bne 0x5b28",
            "add lr, sp, 0x4b0",
            "mov r2, r8",
            "ldrd r0, r1, [lr, -8]",
            "mov r3, sb",
            "bl fcn.00013ea4",
            "add r2, sp, 0x4b0",
            "strd r0, r1, [sp, 0x50]",
            "mov r3, sb",
            "ldrd r0, r1, [r2, -8]",
            "mov r2, r8",
            "bl fcn.00013ea8",
            "ldrd r2, r3, [sp, 0x50]",
            "strd r0, r1, [sp, 0x68]",
            "bl fcn.000147c8",
            "cmp r0, 0",
            "beq 0x5d1c",
            "ldrd r2, r3, [sp, 0x18]",
            "mov r0, r8",
            "mov r1, sb",
            "add r4, r4, r7",
            "bl fcn.00013ea8",
            "mov r2, r8",
            "strd r0, r1, [sp, 0x20]",
            "mov r3, sb",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.00013ea4",
            "strd r0, r1, [sp, 0x78]",
            "mov r8, 1",
            "ldrd r2, r3, [sp, 0x78]",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.000147c8",
            "ldr r3, [sp, 0x4b4]",
            "cmp r0, 0",
            "moveq r8, 0",
            "str r4, [sp, 0x4c]",
            "uxtb r8, r8",
            "add r6, r6, r3",
            "str r8, [sp, 0x74]",
            "str r6, [sp, 0x5c]",
            "ldr r6, [sp, 0x74]",
            "cmp r6, 0",
            "beq 0x5cf0",
            "add ip, sp, 0x4b0",
            "ldrd r0, r1, [sp, 0x50]",
            "ldrd r2, r3, [ip, -8]",
            "bl fcn.00013ea4",
            "ldrd r4, r5, [sp, 0x78]",
            "mov r8, r0",
            "mov sb, r1",
            "mov r2, r8",
            "mov r3, sb",
            "ldrd r0, r1, [sp, 0x30]",
            "bl fcn.00014254",
            "mov r2, r8",
            "strd r0, r1, [sp, 0x10]",
            "mov r3, sb",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.00014254",
            "strd r0, r1, [sp, 0x38]",
            "ldrd r2, r3, [sp, 0x18]",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00013ea4",
            "mov r2, sl",
            "mov r3, fp",
            "mov r8, r0",
            "mov sb, r1",
            "bl fcn.00014254",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.00013ea4",
            "ldrd r2, r3, [sp, 0x28]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "cmp r7, r0",
            "mov r6, r0",
            "bgt 0x5cb8",
            "mov r2, r8",
            "mov r3, sb",
            "ldrd r0, r1, [sp, 0x30]",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x38]",
            "bl fcn.00013ea8",
            "ldrd r2, r3, [sp, 0x40]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "ldr lr, [sp, 0x4b4]",
            "mov r2, r0",
            "ldr r0, [sp, 0x4c]",
            "cmp r2, lr",
            "cmpge r0, r6",
            "ble 0x5cb8",
            "ldr r1, [sp, 0x5c]",
            "cmp r2, r1",
            "blt 0x5d28",
            "mov r3, 0",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 0",
            "movt r3, 0x3ff0",
            "bl fcn.00013ea8",
            "mov r4, r0",
            "mov r5, r1",
            "mov r2, r4",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r3, r5",
            "bl fcn.000147c8",
            "cmp r0, 0",
            "bne 0x5c24",
            "mov r3, 0",
            "ldrd r0, r1, [sp, 0x50]",
            "mov r2, 0",
            "movt r3, 0x3ff0",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x50]",
            "ldrd r2, r3, [sp, 0x50]",
            "ldrd r0, r1, [sp, 0x68]",
            "bl fcn.000147c8",
            "cmp r0, 0",
            "bne 0x5bd0",
            "add sp, sp, 0x84",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r1, r6",
            "ldr r0, [sp, 0x60]",
            "bl rsym.gdImageGetPixel",
            "ldr r6, [sp, 0x60]",
            "movw r2, 0x1010",
            "mov r1, r0",
            "ldr r3, [r6, r2]",
            "cmp r3, r0",
            "beq 0x5df4",
            "ldr r0, [sp, 0x60]",
            "movw lr, 0x1c38",
            "ldr r3, [r0, lr]",
            "cmp r3, 0",
            "bne 0x5da4",
            "add r2, sp, 0x480",
            "add r8, r2, r1, lsl 2",
            "ldr r6, [r8, -0x400]",
            "cmn r6, 1",
            "beq 0x5e28",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.000147f0",
            "mov r8, r0",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.000147f0",
            "mov r1, r8",
            "mov r2, r0",
            "mov r3, r6",
            "ldr r0, [sp, 0x64]",
            "bl rsym.gdImageSetPixel",
            "b 0x5cb8",
            "ubfx ip, r1, 0x18, 7",
            "ubfx r2, r1, 8, 8",
            "uxtb r3, r1",
            "ldr r0, [sp, 0x64]",
            "ubfx r1, r1, 0x10, 8",
            "str ip, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r1, r5",
            "mov r8, r0",
            "mov r0, r4",
            "bl fcn.000147f0",
            "mov r6, r0",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.000147f0",
            "mov r1, r6",
            "mov r2, r0",
            "mov r3, r8",
            "ldr r0, [sp, 0x64]",
            "bl rsym.gdImageSetPixel",
            "b 0x5cb8",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.000147f0",
            "mov r6, r0",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.000147f0",
            "mov r2, r0",
            "ldr r0, [sp, 0x64]",
            "movw ip, 0x1010",
            "mov r1, r6",
            "ldr r3, [r0, ip]",
            "bl rsym.gdImageSetPixel",
            "b 0x5cb8",
            "ldr r6, [sp, 0x60]",
            "add r3, r1, 4",
            "add r2, r1, 0x104",
            "add ip, r1, 0x204",
            "add r1, r1, 0x600",
            "ldr r3, [r0, r3, lsl 2]",
            "ldr ip, [r6, ip, lsl 2]",
            "add r1, r1, 0xe",
            "ldr lr, [r6, r1, lsl 2]",
            "ldr r2, [r0, r2, lsl 2]",
            "mov r1, r3",
            "ldr r0, [sp, 0x64]",
            "mov r3, ip",
            "str lr, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r6, r0",
            "str r0, [r8, -0x400]",
            "b 0x5d74"
        ]
    },
    "fcn.000147c8": {
        "function_address": "0x000147c8",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0001475c",
            "movls r0, 1",
            "movhi r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "sym.gdImageCopyResampled": {
        "function_address": "0x0000624c",
        "instructions": [
            "movw ip, 0x1c38",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr ip, [r0, ip]",
            "sub sp, sp, 0xcc",
            "ldr r4, [sp, 0xf0]",
            "cmp ip, 0",
            "ldr r5, [sp, 0xf4]",
            "ldr ip, [sp, 0xf8]",
            "str r4, [sp, 0x40]",
            "ldr r4, [sp, 0xfc]",
            "str r5, [sp, 0x68]",
            "str ip, [sp, 0xb0]",
            "ldr r5, [sp, 0x100]",
            "ldr ip, [sp, 0x104]",
            "str r2, [sp, 0xa8]",
            "addne r2, r4, r3",
            "str r0, [sp, 0xa4]",
            "str r1, [sp, 0x44]",
            "str r3, [sp, 0xac]",
            "str r4, [sp, 0xb4]",
            "str r5, [sp, 0xc0]",
            "str ip, [sp, 0xc4]",
            "strne r2, [sp, 0xbc]",
            "strne r3, [sp, 0x9c]",
            "beq 0x68a8",
            "ldr r5, [sp, 0x9c]",
            "ldr ip, [sp, 0xbc]",
            "cmp r5, ip",
            "bge 0x68a0",
            "ldr lr, [sp, 0x9c]",
            "ldr r0, [sp, 0xac]",
            "add lr, lr, 1",
            "str lr, [sp, 0xb8]",
            "bl fcn.00014178",
            "mov r4, r0",
            "ldr r0, [sp, 0xc4]",
            "mov r5, r1",
            "bl fcn.00014178",
            "mov r6, r0",
            "ldr r0, [sp, 0xb4]",
            "mov r7, r1",
            "bl fcn.00014178",
            "mov r8, r0",
            "ldr r0, [sp, 0xb8]",
            "mov sb, r1",
            "bl fcn.00014178",
            "ldr lr, [sp, 0xa8]",
            "mov r2, r4",
            "ldr ip, [sp, 0xb0]",
            "mov r3, r5",
            "add ip, ip, lr",
            "str ip, [sp, 0xa0]",
            "bl fcn.00013ea4",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00014254",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.000144c0",
            "ldr r2, [sp, 0xa8]",
            "ldr r3, [sp, 0xa0]",
            "strd r0, r1, [sp, 0x60]",
            "cmp r2, r3",
            "bge 0x6888",
            "ldr r0, [sp, 0x9c]",
            "str r2, [sp, 0x70]",
            "bl fcn.00014178",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00013ea4",
            "mov r2, r6",
            "mov r3, r7",
            "bl fcn.00014254",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.000144c0",
            "strd r0, r1, [sp, 0x78]",
            "ldr r0, [sp, 0xa8]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x80]",
            "ldr r0, [sp, 0xc0]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x88]",
            "ldr r0, [sp, 0xb0]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x90]",
            "ldrd r0, r1, [sp, 0x78]",
            "bl fcn.000147f0",
            "str r0, [sp, 0x6c]",
            "ldr r0, [sp, 0x70]",
            "mov r4, 0",
            "add r5, r0, 1",
            "str r5, [sp, 0x74]",
            "mov r5, 0",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 0x80]",
            "strd r4, r5, [sp, 8]",
            "bl fcn.00013ea4",
            "ldrd r4, r5, [sp, 0x78]",
            "ldrd r2, r3, [sp, 0x88]",
            "strd r4, r5, [sp, 0x50]",
            "bl fcn.00014254",
            "ldrd r4, r5, [sp, 8]",
            "ldrd r2, r3, [sp, 0x90]",
            "strd r4, r5, [sp, 0x28]",
            "bl fcn.000144c0",
            "strd r0, r1, [sp, 0x58]",
            "ldr r0, [sp, 0x74]",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 0x80]",
            "strd r4, r5, [sp, 0x20]",
            "bl fcn.00013ea4",
            "ldrd r2, r3, [sp, 0x88]",
            "strd r4, r5, [sp, 0x18]",
            "bl fcn.00014254",
            "ldrd r2, r3, [sp, 0x90]",
            "strd r4, r5, [sp, 0x10]",
            "bl fcn.000144c0",
            "mov sl, r0",
            "mov fp, r1",
            "ldrd r0, r1, [sp, 0x58]",
            "bl fcn.000147f0",
            "str r0, [sp, 0x3c]",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.000147f0",
            "ldr r5, [sp, 0x6c]",
            "mov r7, r0",
            "cmp r0, r5",
            "beq 0x6810",
            "ldrd r0, r1, [sp, 0x60]",
            "bl fcn.000147f0",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 0x50]",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "beq 0x67fc",
            "ldrd r0, r1, [sp, 0x60]",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00013ea4",
            "strd r0, r1, [sp, 0x30]",
            "ldr r3, [sp, 0x68]",
            "ldrd r8, sb, [sp, 0x58]",
            "add r7, r7, r3",
            "b 0x6604",
            "mov r1, fp",
            "mov r0, sl",
            "bl fcn.000147f0",
            "bl fcn.00014178",
            "mov r2, r8",
            "mov r3, sb",
            "strd r0, r1, [sp]",
            "mov r5, 0",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "mov r4, 0",
            "movt r5, 0x3ff0",
            "ldrd r2, r3, [sp]",
            "mov r0, sl",
            "mov r1, fp",
            "beq 0x64ec",
            "bl fcn.00013ea4",
            "mov r4, r0",
            "mov r5, r1",
            "ldrd r2, r3, [sp, 0x30]",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00014254",
            "ldr ip, [sp, 0x40]",
            "mov r4, r0",
            "mov r5, r1",
            "mov r2, r7",
            "ldr r0, [sp, 0x44]",
            "add r1, r6, ip",
            "bl rsym.gdImageGetTrueColorPixel",
            "mov r6, r0",
            "ubfx r0, r0, 0x10, 8",
            "bl fcn.00014178",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x18]",
            "ubfx r0, r6, 8, 8",
            "bl fcn.00014178",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x20]",
            "uxtb r0, r6",
            "bl fcn.00014178",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x28]",
            "ubfx r0, r6, 0x18, 7",
            "bl fcn.00014178",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00014254",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.00013ea8",
            "mov r2, r4",
            "strd r0, r1, [sp, 8]",
            "mov r3, r5",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "mov r3, 0",
            "strd r0, r1, [sp, 0x10]",
            "mov r2, 0",
            "mov r0, r8",
            "mov r1, sb",
            "movt r3, 0x3ff0",
            "bl fcn.00013ea8",
            "mov r2, sl",
            "mov r3, fp",
            "mov r8, r0",
            "mov sb, r1",
            "bl fcn.000147a0",
            "cmp r0, 0",
            "beq 0x6694",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.000147f0",
            "ldr r4, [sp, 0x3c]",
            "mov r6, r0",
            "cmp r0, r4",
            "bne 0x64a0",
            "bl fcn.00014178",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "ldrd r2, r3, [sp]",
            "mov r1, sb",
            "mov r8, r2",
            "mov sb, r3",
            "bl fcn.00013ea4",
            "mov r3, r1",
            "mov r1, 0",
            "mov r2, r0",
            "movt r1, 0x3ff0",
            "mov r0, 0",
            "bl fcn.00013ea4",
            "ldrd r2, r3, [sp, 0x58]",
            "strd r0, r1, [sp, 0x48]",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.00013ea4",
            "ldrd r2, r3, [sp, 0x48]",
            "mov r5, r1",
            "mov r4, r0",
            "bl fcn.000147a0",
            "cmp r0, 0",
            "ldrd r0, r1, [sp]",
            "ldrdeq r4, r5, [sp, 0x48]",
            "bl fcn.000147f0",
            "mov r6, r0",
            "b 0x64ec",
            "mov r3, 0",
            "ldrd r0, r1, [sp, 0x50]",
            "mov r2, 0",
            "movt r3, 0x3ff0",
            "bl fcn.00013ea8",
            "ldrd r2, r3, [sp, 0x60]",
            "strd r0, r1, [sp, 0x50]",
            "bl fcn.000147a0",
            "cmp r0, 0",
            "bne 0x6440",
            "ldrd r0, r1, [sp, 0x10]",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "bne 0x6714",
            "ldrd r0, r1, [sp, 0x18]",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.000144c0",
            "ldrd r2, r3, [sp, 0x10]",
            "strd r0, r1, [sp, 0x18]",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.000144c0",
            "ldrd r2, r3, [sp, 0x10]",
            "strd r0, r1, [sp, 0x20]",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.000144c0",
            "ldrd r2, r3, [sp, 0x10]",
            "strd r0, r1, [sp, 0x28]",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.000144c0",
            "strd r0, r1, [sp, 8]",
            "mov r3, 0xe000",
            "ldrd r0, r1, [sp, 0x18]",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000147dc",
            "cmp r0, 0",
            "movne r7, 0xff0000",
            "bne 0x6740",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.000147f0",
            "lsl r7, r0, 0x10",
            "mov r3, 0xe000",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000147dc",
            "cmp r0, 0",
            "movne r6, 0xff00",
            "bne 0x676c",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.000147f0",
            "lsl r6, r0, 8",
            "mov r3, 0xe000",
            "ldrd r0, r1, [sp, 0x28]",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000147dc",
            "cmp r0, 0",
            "movne r4, 0xff",
            "bne 0x6798",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.000147f0",
            "mov r4, r0",
            "mov r3, 0xc000",
            "ldrd r0, r1, [sp, 8]",
            "movt r3, 0x405f",
            "mov r2, 0",
            "bl fcn.000147dc",
            "cmp r0, 0",
            "movne r3, 0x7f000000",
            "bne 0x67c4",
            "ldrd r0, r1, [sp, 8]",
            "bl fcn.000147f0",
            "lsl r3, r0, 0x18",
            "add r6, r6, r7",
            "ldr r2, [sp, 0x9c]",
            "add r4, r6, r4",
            "ldr r0, [sp, 0xa4]",
            "add r3, r4, r3",
            "ldr r1, [sp, 0x70]",
            "bl rsym.gdImageSetPixel",
            "ldr r2, [sp, 0x74]",
            "ldr r3, [sp, 0xa0]",
            "cmp r2, r3",
            "bge 0x6888",
            "ldr r4, [sp, 0x74]",
            "str r4, [sp, 0x70]",
            "b 0x63b8",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3ff0",
            "strd r2, r3, [sp, 0x30]",
            "b 0x6490",
            "bl fcn.00014178",
            "mov r4, r0",
            "mov r5, r1",
            "mov r2, r4",
            "mov r3, r5",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.00013ea4",
            "mov r3, r1",
            "mov r1, 0",
            "mov r2, r0",
            "movt r1, 0x3ff0",
            "mov r0, 0",
            "bl fcn.00013ea4",
            "ldrd r2, r3, [sp, 0x78]",
            "mov r6, r0",
            "mov r7, r1",
            "ldrd r0, r1, [sp, 0x60]",
            "bl fcn.00013ea4",
            "mov r2, r6",
            "mov r3, r7",
            "strd r0, r1, [sp, 0x30]",
            "bl fcn.000147a0",
            "cmp r0, 0",
            "strdeq r6, r7, [sp, 0x30]",
            "mov r0, r4",
            "mov r1, r5",
            "strd r4, r5, [sp, 0x50]",
            "bl fcn.000147f0",
            "mov r7, r0",
            "b 0x6490",
            "ldr r4, [sp, 0xb8]",
            "ldr ip, [sp, 0xbc]",
            "str r4, [sp, 0x9c]",
            "ldr r5, [sp, 0x9c]",
            "cmp r5, ip",
            "blt 0x62c0",
            "add sp, sp, 0xcc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r4, [sp, 0x40]",
            "ldr r5, [sp, 0x68]",
            "ldr ip, [sp, 0xb0]",
            "str r4, [sp, 0xf0]",
            "str r5, [sp, 0xf4]",
            "str ip, [sp, 0xf8]",
            "ldr r4, [sp, 0xb4]",
            "ldr r5, [sp, 0xc0]",
            "ldr ip, [sp, 0xc4]",
            "str r4, [sp, 0xfc]",
            "str r5, [sp, 0x100]",
            "str ip, [sp, 0x104]",
            "add sp, sp, 0xcc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdImageCopyResized"
        ]
    },
    "sym.gdImageCreateFromGdPtr": {
        "function_address": "0x0000b344",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0",
            "bl rsym.gdNewDynamicCtxEx",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0xb370",
            "bl rsym.gdImageCreateFromGdCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageGifAnimBegin": {
        "function_address": "0x0000ed80",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "mov r7, r2",
            "mov r6, r3",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mov r3, r6",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, r7",
            "bl rsym.gdImageGifAnimBeginCtx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdNewSSCtx": {
        "function_address": "0x0000f790",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000f808]",
            "mov r0, 0x24",
            "mov r6, r1",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "add r4, pc, r4",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "str r5, [r0, 0x1c]",
            "mov r3, 0",
            "ldr r5, [0x0000f80c]",
            "ldr r7, [0x0000f810]",
            "ldr ip, [0x0000f814]",
            "ldr r1, [0x0000f818]",
            "ldr r2, [0x0000f81c]",
            "add r7, r4, r7",
            "add ip, r4, ip",
            "str r6, [r0, 0x20]",
            "add r1, r4, r1",
            "str r7, [r0]",
            "add r2, r4, r2",
            "add r4, r4, r5",
            "str ip, [r0, 4]",
            "str r1, [r0, 8]",
            "str r2, [r0, 0xc]",
            "str r3, [r0, 0x14]",
            "str r3, [r0, 0x10]",
            "str r4, [r0, 0x18]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageDashedLine": {
        "function_address": "0x000084c4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "mov r8, r2",
            "ldr r2, [sp, 0x60]",
            "mov ip, r1",
            "rsb r1, r1, r3",
            "mov r6, r1",
            "mov sl, r3",
            "rsb r2, r8, r2",
            "cmp r6, 0",
            "rsblt r6, r6, 0",
            "mov r4, r2",
            "mov r3, 0",
            "cmp r4, 0",
            "rsblt r4, r4, 0",
            "mov r5, 1",
            "cmp r6, r4",
            "str r3, [sp, 0x34]",
            "movw r3, 0x1834",
            "str r1, [sp, 0x24]",
            "mov r7, r0",
            "str r2, [sp, 0x28]",
            "ldr sb, [sp, 0x64]",
            "str r5, [sp, 0x30]",
            "ldr fp, [r0, r3]",
            "blt 0x8684",
            "mov r0, r4",
            "str ip, [sp, 0x10]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, r6",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl sym.imp.atan2",
            "bl sym.imp.sin",
            "mov r2, 0",
            "mov r3, 0",
            "strd r0, r1, [sp, 0x18]",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "ldr ip, [sp, 0x10]",
            "strne r5, [sp, 0x18]",
            "bne 0x8594",
            "mov r0, fp",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 0x18]",
            "bl fcn.000144c0",
            "bl fcn.000147f0",
            "ldr ip, [sp, 0x10]",
            "str r0, [sp, 0x18]",
            "lsl r3, r4, 1",
            "rsb r4, r6, r4",
            "lsl r4, r4, 1",
            "cmp sl, ip",
            "movge lr, 1",
            "str r3, [sp, 0x2c]",
            "str r4, [sp, 0x24]",
            "movlt fp, ip",
            "ldrlt r4, [sp, 0x60]",
            "movlt r5, sl",
            "strge lr, [sp, 0x14]",
            "mvnlt ip, 0",
            "ldr lr, [sp, 0x18]",
            "movge r4, r8",
            "movge r5, ip",
            "strlt ip, [sp, 0x14]",
            "movge fp, sl",
            "mov ip, 1",
            "mov r1, r5",
            "mov r2, r4",
            "rsb r6, r6, r3",
            "add sl, sp, 0x30",
            "mov r3, sb",
            "add r8, sp, 0x34",
            "mov r0, r7",
            "str sl, [sp]",
            "stmib sp, {r8, lr}",
            "str ip, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "bl fcn.000083e4",
            "ldr r1, [sp, 0x28]",
            "ldr r2, [sp, 0x14]",
            "mul r3, r1, r2",
            "cmp r3, 0",
            "ble 0x87dc",
            "cmp r5, fp",
            "bge 0x867c",
            "str r7, [sp, 0x14]",
            "ldr r7, [sp, 0x24]",
            "str sb, [sp, 0x24]",
            "mov sb, sl",
            "mov sl, r8",
            "ldr r8, [sp, 0x2c]",
            "cmp r6, 0",
            "ldr ip, [sp, 0x18]",
            "addge r4, r4, 1",
            "add r5, r5, 1",
            "mov lr, 1",
            "ldr r0, [sp, 0x14]",
            "mov r1, r5",
            "mov r2, r4",
            "ldr r3, [sp, 0x24]",
            "addlt r6, r6, r8",
            "addge r6, r6, r7",
            "stm sp, {sb, sl, ip, lr}",
            "bl fcn.000083e4",
            "cmp fp, r5",
            "bgt 0x8640",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "str ip, [sp, 0x10]",
            "bl fcn.00014178",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, r6",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl sym.imp.atan2",
            "bl sym.imp.sin",
            "mov r2, 0",
            "mov r3, 0",
            "strd r0, r1, [sp, 0x18]",
            "bl fcn.0001478c",
            "cmp r0, 0",
            "ldr ip, [sp, 0x10]",
            "strne r5, [sp, 0x18]",
            "bne 0x86ec",
            "mov r0, fp",
            "bl fcn.00014178",
            "ldrd r2, r3, [sp, 0x18]",
            "bl fcn.000144c0",
            "bl fcn.000147f0",
            "ldr ip, [sp, 0x10]",
            "str r0, [sp, 0x18]",
            "ldr r2, [sp, 0x60]",
            "rsb r3, r4, r6",
            "lsl r3, r3, 1",
            "lsl r1, r6, 1",
            "ldr lr, [sp, 0x18]",
            "cmp r2, r8",
            "rsb r6, r4, r1",
            "movge r5, ip",
            "movlt r5, sl",
            "movge r4, r8",
            "movge ip, 1",
            "str r3, [sp, 0x2c]",
            "movlt r4, r2",
            "mvnlt r3, 0",
            "movlt fp, r8",
            "strlt r3, [sp, 0x14]",
            "mov r2, r4",
            "strge ip, [sp, 0x14]",
            "mov r3, sb",
            "mov ip, 0",
            "str r1, [sp, 0x28]",
            "add sl, sp, 0x30",
            "mov r1, r5",
            "add r8, sp, 0x34",
            "mov r0, r7",
            "ldrge fp, [sp, 0x60]",
            "str sl, [sp]",
            "stmib sp, {r8, lr}",
            "str ip, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "bl fcn.000083e4",
            "ldr r1, [sp, 0x24]",
            "ldr r2, [sp, 0x14]",
            "mul r3, r1, r2",
            "cmp r3, 0",
            "ble 0x883c",
            "cmp r4, fp",
            "bge 0x867c",
            "str r7, [sp, 0x14]",
            "str sb, [sp, 0x24]",
            "mov sb, sl",
            "ldr r7, [sp, 0x2c]",
            "mov sl, r8",
            "ldr r8, [sp, 0x28]",
            "cmp r6, 0",
            "ldr ip, [sp, 0x18]",
            "addge r5, r5, 1",
            "add r4, r4, 1",
            "mov lr, 0",
            "ldr r0, [sp, 0x14]",
            "mov r1, r5",
            "mov r2, r4",
            "ldr r3, [sp, 0x24]",
            "addlt r6, r6, r8",
            "addge r6, r6, r7",
            "stm sp, {sb, sl, ip, lr}",
            "bl fcn.000083e4",
            "cmp fp, r4",
            "bgt 0x879c",
            "b 0x867c",
            "cmp r5, fp",
            "bge 0x867c",
            "str r7, [sp, 0x14]",
            "ldr r7, [sp, 0x24]",
            "str sb, [sp, 0x24]",
            "mov sb, sl",
            "mov sl, r8",
            "ldr r8, [sp, 0x2c]",
            "cmp r6, 0",
            "ldr ip, [sp, 0x18]",
            "subge r4, r4, 1",
            "add r5, r5, 1",
            "mov lr, 1",
            "ldr r0, [sp, 0x14]",
            "mov r1, r5",
            "mov r2, r4",
            "ldr r3, [sp, 0x24]",
            "addlt r6, r6, r8",
            "addge r6, r6, r7",
            "stm sp, {sb, sl, ip, lr}",
            "bl fcn.000083e4",
            "cmp fp, r5",
            "bgt 0x87fc",
            "b 0x867c",
            "cmp r4, fp",
            "bge 0x867c",
            "str r7, [sp, 0x14]",
            "str sb, [sp, 0x24]",
            "mov sb, sl",
            "ldr r7, [sp, 0x2c]",
            "mov sl, r8",
            "ldr r8, [sp, 0x28]",
            "cmp r6, 0",
            "ldr ip, [sp, 0x18]",
            "subge r5, r5, 1",
            "add r4, r4, 1",
            "mov lr, 0",
            "ldr r0, [sp, 0x14]",
            "mov r1, r5",
            "mov r2, r4",
            "ldr r3, [sp, 0x24]",
            "addlt r6, r6, r8",
            "addge r6, r6, r7",
            "stm sp, {sb, sl, ip, lr}",
            "bl fcn.000083e4",
            "cmp fp, r4",
            "bgt 0x885c",
            "b 0x867c"
        ]
    },
    "fcn.000083e4": {
        "function_address": "0x000083e4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr fp, [sp, 0x2c]",
            "mov r8, r1",
            "mov r4, r2",
            "mov r6, r3",
            "ldr r0, [sp, 0x28]",
            "ldr sb, [fp]",
            "ldr r7, [sp, 0x30]",
            "ldr sl, [r0]",
            "add sb, sb, 1",
            "cmp sb, 4",
            "beq 0x84b4",
            "cmp sl, 0",
            "beq 0x8460",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x8470",
            "add r3, r7, r7, lsr 31",
            "sub r4, r4, r3, asr 1",
            "add r7, r4, r7",
            "cmp r4, r7",
            "bge 0x8460",
            "mov r2, r4",
            "mov r0, r5",
            "mov r1, r8",
            "mov r3, r6",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r4, r7",
            "blt 0x8440",
            "ldr r3, [sp, 0x28]",
            "str sb, [fp]",
            "str sl, [r3]",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r3, r7, r7, lsr 31",
            "sub r8, r8, r3, asr 1",
            "add r7, r8, r7",
            "cmp r8, r7",
            "bge 0x8460",
            "mov r1, r8",
            "mov r0, r5",
            "mov r2, r4",
            "mov r3, r6",
            "add r8, r8, 1",
            "bl rsym.gdImageSetPixel",
            "cmp r8, r7",
            "blt 0x8484",
            "ldr r3, [sp, 0x28]",
            "str sb, [fp]",
            "str sl, [r3]",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "rsbs sl, sl, 1",
            "movlo sl, 0",
            "mov sb, 0",
            "b 0x8418"
        ]
    },
    "sym.gdImageColorExact": {
        "function_address": "0x000044c4",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov ip, 0",
            "sub sp, sp, 0xc",
            "str ip, [sp]",
            "bl rsym.gdImageColorExactAlpha",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "rsym.gdImageColorExactAlpha": {
        "function_address": "0x000032dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf48]!"
        ]
    },
    "sym.gdImageWBMP": {
        "function_address": "0x00012a04",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r0, r2",
            "mov r6, r1",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mov r1, r6",
            "mov r0, r5",
            "mov r2, r4",
            "bl rsym.gdImageWBMPCtx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "rsym.gdImageWBMPCtx": {
        "function_address": "0x00003294",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf78]!"
        ]
    },
    "sym.gdImageStringUp16": {
        "function_address": "0x0000810c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "ldr r8, [sp, 0x30]",
            "mov r4, r3",
            "mov sb, r0",
            "mov r7, r1",
            "mov sl, r2",
            "ldr fp, [sp, 0x34]",
            "ldrh r3, [r8]",
            "cmp r3, 0",
            "beq 0x8184",
            "mov r6, 0",
            "mov r3, r8",
            "ldrh r5, [r3, 2]!",
            "add r6, r6, 1",
            "cmp r5, 0",
            "bne 0x8140",
            "ldrh ip, [r8], 2",
            "mov r3, r4",
            "mov r0, sb",
            "mov r1, r7",
            "mov r2, sl",
            "str fp, [sp, 4]",
            "str ip, [sp]",
            "add r5, r5, 1",
            "bl rsym.gdImageCharUp",
            "ldr r3, [r7, 8]",
            "cmp r5, r6",
            "rsb r4, r3, r4",
            "blt 0x8150",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.gdImageCharUp": {
        "function_address": "0x00003240",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfb0]!"
        ]
    },
    "sym.gdImageStringUp": {
        "function_address": "0x0000818c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "ldr r8, [sp, 0x30]",
            "mov sb, r0",
            "mov r6, r1",
            "mov sl, r2",
            "mov r5, r3",
            "ldr fp, [sp, 0x34]",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "subs r7, r0, 0",
            "ble 0x81f4",
            "mov r4, 0",
            "ldrb ip, [r8, r4]",
            "mov r3, r5",
            "mov r0, sb",
            "mov r1, r6",
            "mov r2, sl",
            "str fp, [sp, 4]",
            "str ip, [sp]",
            "add r4, r4, 1",
            "bl rsym.gdImageCharUp",
            "ldr r3, [r6, 8]",
            "cmp r7, r4",
            "rsb r5, r3, r5",
            "bgt 0x81c0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdNewFileCtx": {
        "function_address": "0x0000f640",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000f6bc]",
            "mov r0, 0x20",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "add r4, pc, r4",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "str r5, [r0, 0x1c]",
            "ldr r7, [0x0000f6c0]",
            "ldr r5, [0x0000f6c4]",
            "ldr r6, [0x0000f6c8]",
            "ldr ip, [0x0000f6cc]",
            "add r7, r4, r7",
            "ldr r1, [0x0000f6d0]",
            "ldr r2, [0x0000f6d4]",
            "add r6, r4, r6",
            "ldr r3, [0x0000f6d8]",
            "add ip, r4, ip",
            "add r1, r4, r1",
            "str r7, [r0]",
            "add r2, r4, r2",
            "str r6, [r0, 8]",
            "add r3, r4, r3",
            "add r4, r4, r5",
            "str ip, [r0, 4]",
            "str r1, [r0, 0xc]",
            "str r2, [r0, 0x14]",
            "str r3, [r0, 0x10]",
            "str r4, [r0, 0x18]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageCreateFromGd2Part": {
        "function_address": "0x0000ca0c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0xc",
            "mov r7, r1",
            "mov r6, r2",
            "mov r5, r3",
            "bl rsym.gdNewFileCtx",
            "ldr ip, [sp, 0x20]",
            "mov r4, r0",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "str ip, [sp]",
            "bl rsym.gdImageCreateFromGd2PartCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageSetBrush": {
        "function_address": "0x00004d8c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "movw sl, 0x1c38",
            "ldr r3, [r0, sl]",
            "mov r8, r0",
            "movw r2, 0x101c",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "str r1, [r8, r2]",
            "cmp r3, 0",
            "bne 0x4e30",
            "ldr r3, [r1, sl]",
            "cmp r3, 0",
            "bne 0x4e30",
            "ldr r2, [r1, 0xc]",
            "cmp r2, 0",
            "ble 0x4e30",
            "add r7, r0, 0x1000",
            "add r5, r1, 0x10",
            "add r7, r7, 0x20",
            "mov r4, r3",
            "b 0x4de4",
            "ldr r3, [r6, sl]",
            "cmp r3, 0",
            "add r0, r5, 0x1800",
            "ubfx ip, r4, 0x18, 7",
            "ldreq ip, [r0, 0x28]",
            "and r3, r4, 0xff",
            "ubfx r1, r4, 0x10, 8",
            "ldreq r3, [r5, 0x800]",
            "ubfx r2, r4, 8, 8",
            "ldreq r1, [r5]",
            "mov r0, r8",
            "ldreq r2, [r5, 0x400]",
            "add r4, r4, 1",
            "str ip, [sp]",
            "add r5, r5, 4",
            "bl rsym.gdImageColorResolveAlpha",
            "ldr r3, [r6, 0xc]",
            "str r0, [r7, 4]!",
            "cmp r3, r4",
            "bgt 0x4de0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.gdImageCreateFromWBMPCtx": {
        "function_address": "0x00012874",
        "instructions": [
            "ldr r3, [0x000129a0]",
            "mov r1, r0",
            "ldr r0, [0x000129a4]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 8",
            "add r3, pc, r3",
            "add r2, sp, 4",
            "ldr r0, [r3, r0]",
            "bl rsym.readwbmp",
            "subs r7, r0, 0",
            "movne r8, 0",
            "beq 0x128b0",
            "mov r0, r8",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [sp, 4]",
            "ldmib r3, {r0, r1}",
            "bl rsym.gdImageCreate",
            "subs r8, r0, 0",
            "beq 0x12994",
            "mov r1, 0xff",
            "mov r2, r1",
            "mov r3, r1",
            "bl rsym.gdImageColorAllocate",
            "mov r3, r7",
            "mov sb, r0",
            "mov r1, r7",
            "mov r0, r8",
            "mov r2, r7",
            "bl rsym.gdImageColorAllocate",
            "mov sl, r0",
            "ldr r0, [sp, 4]",
            "ldr r3, [r0, 8]",
            "cmp r3, 0",
            "movgt r6, r7",
            "ble 0x1298c",
            "ldr r3, [r0, 4]",
            "cmp r3, 0",
            "lslgt r5, r6, 2",
            "movgt r4, 0",
            "bgt 0x12938",
            "b 0x1297c",
            "bl rsym.gdImageSetPixel",
            "ldr r0, [sp, 4]",
            "add r4, r4, 1",
            "add r5, r5, 4",
            "ldr r3, [r0, 4]",
            "cmp r3, r4",
            "ble 0x1297c",
            "ldr ip, [r0, 0xc]",
            "mov r1, r4",
            "mov r0, r8",
            "mov r2, r7",
            "mov r3, sl",
            "add r6, r6, 1",
            "ldr ip, [ip, r5]",
            "cmp ip, 1",
            "bne 0x1291c",
            "mov r3, sb",
            "add r4, r4, 1",
            "bl rsym.gdImageSetPixel",
            "ldr r0, [sp, 4]",
            "add r5, r5, 4",
            "ldr r3, [r0, 4]",
            "cmp r3, r4",
            "bgt 0x12938",
            "ldr r3, [r0, 8]",
            "add r7, r7, 1",
            "cmp r3, r7",
            "bgt 0x12904",
            "bl rsym.freewbmp",
            "b 0x128a4",
            "ldr r0, [sp, 4]",
            "bl rsym.freewbmp",
            "b 0x128a4"
        ]
    },
    "rsym.readwbmp": {
        "function_address": "0x00003078",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xe0]!"
        ]
    },
    "rsym.freewbmp": {
        "function_address": "0x00003594",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd78]!"
        ]
    },
    "sym.gdImageGifAnimEndPtr": {
        "function_address": "0x0000f54c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 1",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "movne r3, 0x3b",
            "strbne r3, [r0]",
            "movne r3, 1",
            "strne r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "sym.gdImageCreate": {
        "function_address": "0x00003c24",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "mov r0, 4",
            "mov r6, r1",
            "bl rsym.overflow2",
            "subs r4, r0, 0",
            "movne r4, 0",
            "beq 0x3c4c",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, 4",
            "mov r1, r5",
            "bl rsym.overflow2",
            "subs r7, r0, 0",
            "bne 0x3c44",
            "movw r0, 0x1c64",
            "bl rsym.gdMalloc",
            "subs r4, r0, 0",
            "beq 0x3c44",
            "mov r1, r7",
            "movw r2, 0x1c64",
            "bl sym.imp.memset",
            "lsl r0, r6, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "mov r8, r0",
            "str r0, [r4]",
            "beq 0x3de0",
            "movw r3, 0x1014",
            "cmp r6, 0",
            "str r7, [r4, r3]",
            "movw r3, 0x1018",
            "str r7, [r4, r3]",
            "movw r3, 0x101c",
            "str r7, [r4, r3]",
            "movw r3, 0x1020",
            "str r7, [r4, r3]",
            "movw r3, 0x182c",
            "str r7, [r4, r3]",
            "bgt 0x3cd4",
            "b 0x3d38",
            "add r7, r7, 1",
            "cmp r6, r7",
            "ble 0x3d38",
            "mov r0, r5",
            "mov r1, 1",
            "bl rsym.gdCalloc",
            "ldr r3, [r4]",
            "str r0, [r8, r7, lsl 2]",
            "ldr r2, [r3, r7, lsl 2]",
            "mov r8, r3",
            "cmp r2, 0",
            "bne 0x3cc8",
            "subs r7, r7, 1",
            "blo 0x3d20",
            "lsl r5, r7, 2",
            "b 0x3d0c",
            "ldr r3, [r4]",
            "ldr r0, [r3, r5]",
            "sub r5, r5, 4",
            "bl rsym.gdFree",
            "subs r7, r7, 1",
            "bpl 0x3d08",
            "ldr r0, [r4]",
            "bl rsym.gdFree",
            "mov r0, r4",
            "mov r4, 0",
            "bl rsym.gdFree",
            "b 0x3c44",
            "movw sb, 0x1010",
            "mvn fp, 0",
            "mov r8, 0",
            "str fp, [r4, sb]",
            "add ip, r4, 0xc00",
            "add sb, sb, 0x820",
            "add r0, r4, 0x800",
            "mov sl, 1",
            "str r8, [r4, sb]",
            "add ip, ip, 0xc",
            "add sb, sb, 4",
            "mov r3, r4",
            "add r0, r0, 0xc",
            "mov r2, 0x100",
            "mov r1, r8",
            "mov r7, sl",
            "str sl, [r4, sb]",
            "movw sl, 0x1c48",
            "stmib r4, {r5, r6, r8}",
            "str r8, [r4, sl]",
            "subs r2, r2, 1",
            "str r1, [r3, 0x10]",
            "str r1, [r3, 0x410]",
            "add r3, r3, 4",
            "str r7, [ip, 4]!",
            "str r1, [r0, 4]!",
            "bne 0x3d88",
            "movw r3, 0x1c38",
            "sub r5, r5, 1",
            "str r2, [r4, r3]",
            "add r3, r3, 4",
            "str r2, [r4, r3]",
            "add r3, r3, 0x18",
            "str r2, [r4, r3]",
            "add r3, r3, 4",
            "str r2, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "sub r6, r6, 1",
            "add r3, r3, 4",
            "str r6, [r4, r3]",
            "b 0x3c44",
            "mov r0, r4",
            "mov r4, r8",
            "bl rsym.gdFree",
            "b 0x3c44"
        ]
    },
    "sym.gdImageSharpen": {
        "function_address": "0x0000acb8",
        "instructions": [
            "movw r3, 0x1c38",
            "ldr r2, [r0, 4]",
            "ldr r3, [r0, r3]",
            "ldr ip, [r0, 8]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "cmp r3, 0",
            "cmpne r1, 0",
            "mov r4, r0",
            "str r2, [sp, 0x10]",
            "str ip, [sp, 0x14]",
            "ble 0xaf24",
            "rsb r0, r1, 0",
            "bl fcn.00014178",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x4079",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "mov r1, r0",
            "mov sb, r0",
            "bl fcn.000148f8",
            "mov r1, r0",
            "mov r0, 0x3f800000",
            "bl fcn.000148f4",
            "ldr r2, [sp, 0x10]",
            "mov fp, r0",
            "cmp r2, 0",
            "ble 0xae24",
            "ldr ip, [sp, 0x14]",
            "mov r7, 0",
            "str sb, [sp, 0xc]",
            "sub r3, ip, 1",
            "mov sb, r3",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, 0",
            "bl rsym.gdImageGetPixel",
            "cmp sb, 0",
            "mov sl, r0",
            "movle r5, 0",
            "ble 0xadd0",
            "mov r5, 0",
            "mov r2, r5",
            "add r6, r5, 1",
            "mov r1, r7",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "mov r1, r7",
            "mov r8, r0",
            "mov r2, r6",
            "mov r0, r4",
            "bl rsym.gdImageGetTrueColorPixel",
            "ldr ip, [sp, 0xc]",
            "mov r2, r0",
            "mov r1, r8",
            "mov r0, sl",
            "mov r3, fp",
            "mov sl, r8",
            "str ip, [sp]",
            "bl rsym.gdImageSubSharpen",
            "mov r2, r5",
            "mov r3, r0",
            "mov r1, r7",
            "mov r0, r4",
            "bl rsym.gdImageSetPixel",
            "cmp r6, sb",
            "mov r5, r6",
            "blt 0xad64",
            "mov r5, sb",
            "mov r1, r7",
            "mov r2, r5",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "ldr ip, [sp, 0xc]",
            "mov r1, r0",
            "mov r2, r1",
            "mov r3, fp",
            "mov r0, sl",
            "str ip, [sp]",
            "bl rsym.gdImageSubSharpen",
            "mov r1, r7",
            "mov r3, r0",
            "mov r2, r5",
            "mov r0, r4",
            "bl rsym.gdImageSetPixel",
            "ldr r2, [sp, 0x10]",
            "add r7, r7, 1",
            "cmp r2, r7",
            "bgt 0xad40",
            "ldr sb, [sp, 0xc]",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "ble 0xaf24",
            "ldr ip, [sp, 0x10]",
            "mov r7, 0",
            "str sb, [sp, 0xc]",
            "sub r3, ip, 1",
            "mov sb, r3",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, r7",
            "bl rsym.gdImageGetPixel",
            "cmp sb, 0",
            "mov sl, r0",
            "movle r5, 0",
            "ble 0xaed4",
            "mov r5, 0",
            "mov r1, r5",
            "add r6, r5, 1",
            "mov r2, r7",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "mov r1, r6",
            "mov r8, r0",
            "mov r2, r7",
            "mov r0, r4",
            "bl rsym.gdImageGetTrueColorPixel",
            "ldr ip, [sp, 0xc]",
            "mov r2, r0",
            "mov r1, r8",
            "mov r0, sl",
            "mov r3, fp",
            "mov sl, r8",
            "str ip, [sp]",
            "bl rsym.gdImageSubSharpen",
            "mov r1, r5",
            "mov r3, r0",
            "mov r2, r7",
            "mov r0, r4",
            "bl rsym.gdImageSetPixel",
            "cmp r6, sb",
            "mov r5, r6",
            "blt 0xae68",
            "mov r5, sb",
            "mov r2, r7",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdImageGetPixel",
            "ldr ip, [sp, 0xc]",
            "mov r1, r0",
            "mov r2, r1",
            "mov r3, fp",
            "mov r0, sl",
            "str ip, [sp]",
            "bl rsym.gdImageSubSharpen",
            "mov r2, r7",
            "mov r3, r0",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdImageSetPixel",
            "ldr r2, [sp, 0x14]",
            "add r7, r7, 1",
            "cmp r2, r7",
            "bgt 0xae44",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000148f4": {
        "function_address": "0x000148f4",
        "instructions": [
            "eor r1, r1, 0x80000000"
        ]
    },
    "rsym.gdImageSubSharpen": {
        "function_address": "0x0000321c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfc8]!"
        ]
    },
    "sym.gdImageGifAnimBeginCtx": {
        "function_address": "0x0000ebcc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r2, 0",
            "ldr r5, [0x0000ed74]",
            "sub sp, sp, 4",
            "mov r6, r0",
            "mov r4, r1",
            "mov r8, r3",
            "add r5, pc, r5",
            "blt 0xeca8",
            "ldr r0, [r0, 0xc]",
            "bl fcn.0000ddd8",
            "mov sl, r0",
            "ldr r0, [0x0000ed78]",
            "ldr sb, [r6, 4]",
            "mov r2, r4",
            "ldr fp, [r6, 8]",
            "mov r1, 6",
            "add r0, r5, r0",
            "bl rsym.gdPutBuf",
            "mov r1, r4",
            "mov r0, sb",
            "bl fcn.0000df1c",
            "mov r0, fp",
            "mov r1, r4",
            "bl fcn.0000df1c",
            "cmp r7, 0",
            "bne 0xed68",
            "sub sl, sl, 1",
            "mov r1, r4",
            "orr sl, sl, sl, lsl 5",
            "uxtb r0, sl",
            "bl rsym.gdPutC",
            "mov r0, r7",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, r7",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "cmp r8, 0",
            "blt 0xeca0",
            "ldr r0, [0x0000ed7c]",
            "mov r2, r4",
            "mov r1, 0x10",
            "add r0, r5, r0",
            "bl rsym.gdPutBuf",
            "mov r1, r4",
            "mov r0, r8",
            "bl fcn.0000df1c",
            "mov r0, 0",
            "mov r1, r4",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdPutC",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r0, 0xc]",
            "mov r7, 1",
            "bl fcn.0000ddd8",
            "mov sl, r0",
            "ldr r0, [0x0000ed78]",
            "ldr sb, [r6, 4]",
            "mov r2, r4",
            "ldr fp, [r6, 8]",
            "mov r1, 6",
            "add r0, r5, r0",
            "lsl r7, r7, sl",
            "bl rsym.gdPutBuf",
            "mov r1, r4",
            "mov r0, sb",
            "bl fcn.0000df1c",
            "mov r0, fp",
            "mov r1, r4",
            "bl fcn.0000df1c",
            "sub sl, sl, 1",
            "mov r1, r4",
            "orr r0, sl, 0x80",
            "orr r0, r0, sl, lsl 5",
            "uxtb r0, r0",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "cmp r7, 0",
            "ble 0xec64",
            "add r6, r6, 0xc",
            "mov sl, 0",
            "ldr r0, [r6, 4]!",
            "mov r1, r4",
            "add sl, sl, 1",
            "uxtb r0, r0",
            "bl rsym.gdPutC",
            "ldrb r0, [r6, 0x400]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldrb r0, [r6, 0x800]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "cmp sl, r7",
            "blt 0xed30",
            "b 0xec64",
            "mov r7, 1",
            "lsl r7, r7, sl",
            "b 0xecf0"
        ]
    },
    "fcn.0000df1c": {
        "function_address": "0x0000df1c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "uxtb r0, r0",
            "bl rsym.gdPutC",
            "ubfx r0, r4, 8, 8",
            "mov r1, r5",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageCopyResized": {
        "function_address": "0x00005e70",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x430",
            "sub sp, sp, 4",
            "mov fp, r1",
            "mov r7, r0",
            "mov r0, 4",
            "ldr ip, [sp, 0x468]",
            "str r2, [sp, 0x20]",
            "str r3, [sp, 0x10]",
            "str ip, [sp, 0x24]",
            "mov r1, ip",
            "ldr r2, [sp, 0x458]",
            "ldr r3, [sp, 0x460]",
            "ldr ip, [sp, 0x464]",
            "str r2, [sp, 0x14]",
            "ldr sb, [sp, 0x45c]",
            "str r3, [sp, 8]",
            "str ip, [sp, 0xc]",
            "ldr r4, [sp, 0x46c]",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "beq 0x5ed4",
            "add sp, sp, 0x34",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r0, r0, 4",
            "mov r1, r4",
            "bl rsym.overflow2",
            "subs r5, r0, 0",
            "bne 0x5ec8",
            "ldr r1, [sp, 0x24]",
            "lsl r0, r1, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "beq 0x5ec8",
            "lsl r0, r4, 2",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x28]",
            "beq 0x5ec8",
            "ldr r2, [sp, 0x24]",
            "cmp r2, 0",
            "ble 0x5f70",
            "ldr sl, [sp, 0x1c]",
            "mov r6, r5",
            "str r7, [sp, 0x18]",
            "ldr r3, [sp, 8]",
            "add r6, r6, 1",
            "ldr r1, [sp, 0x24]",
            "add r7, r5, r3",
            "mov r0, r7",
            "bl fcn.00013da0",
            "ldr r1, [sp, 0x24]",
            "mov r8, r0",
            "mov r0, r5",
            "mov r5, r7",
            "bl fcn.00013da0",
            "ldr ip, [sp, 0x24]",
            "rsb r0, r0, r8",
            "str r0, [sl], 4",
            "cmp r6, ip",
            "bne 0x5f2c",
            "ldr r7, [sp, 0x18]",
            "cmp r4, 0",
            "ble 0x5fc8",
            "ldr sl, [sp, 0x28]",
            "mov r5, 0",
            "mov r6, r5",
            "str r7, [sp, 8]",
            "ldr r1, [sp, 0xc]",
            "add r6, r6, 1",
            "add r7, r5, r1",
            "mov r1, r4",
            "mov r0, r7",
            "bl fcn.00013da0",
            "mov r1, r4",
            "mov r8, r0",
            "mov r0, r5",
            "mov r5, r7",
            "bl fcn.00013da0",
            "cmp r6, r4",
            "rsb r0, r0, r8",
            "str r0, [sl], 4",
            "bne 0x5f88",
            "ldr r7, [sp, 8]",
            "add r2, sp, 0x30",
            "mvn r1, 0",
            "sub r3, r2, 4",
            "add r2, r2, 0x3fc",
            "str r1, [r3, 4]!",
            "cmp r3, r2",
            "bne 0x5fd8",
            "add r4, r4, sb",
            "cmp r4, sb",
            "str r4, [sp, 0x2c]",
            "ble 0x612c",
            "ldr sl, [sp, 0x10]",
            "ldr r2, [sp, 0x28]",
            "str sb, [sp, 0xc]",
            "str r2, [sp, 0x18]",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [r2], 4",
            "cmp r3, 0",
            "str r2, [sp, 0x18]",
            "ble 0x6114",
            "ldr r3, [sp, 0x24]",
            "mov r1, 0",
            "ldr ip, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "add r3, r3, ip",
            "str r3, [sp, 8]",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [sp, 8]",
            "cmp r2, r3",
            "bge 0x60f4",
            "ldr r6, [sp, 0x1c]",
            "mov sb, r2",
            "ldr r4, [sp, 0x20]",
            "ldr r3, [r6], 4",
            "cmp r3, 0",
            "beq 0x60e4",
            "movw ip, 0x1c38",
            "ldr r3, [r7, ip]",
            "cmp r3, 0",
            "beq 0x6188",
            "ldr r3, [fp, ip]",
            "cmp r3, 0",
            "bne 0x6148",
            "mov r1, sb",
            "ldr r2, [sp, 0xc]",
            "mov r0, fp",
            "bl rsym.gdImageGetPixel",
            "mov r1, sb",
            "mov r5, r0",
            "ldr r2, [sp, 0xc]",
            "mov r0, fp",
            "bl rsym.gdImageGetTrueColorPixel",
            "movw r1, 0x1010",
            "mov r8, r0",
            "ldr r3, [fp, r1]",
            "cmp r3, r5",
            "beq 0x616c",
            "ldr r3, [r6, -4]",
            "cmp r3, 0",
            "ble 0x60e4",
            "mov r5, 0",
            "mov r1, r4",
            "mov r3, r8",
            "mov r0, r7",
            "mov r2, sl",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r6, -4]",
            "add r5, r5, 1",
            "add r4, r4, 1",
            "cmp r3, r5",
            "bgt 0x60bc",
            "ldr r2, [sp, 8]",
            "add sb, sb, 1",
            "cmp sb, r2",
            "blt 0x604c",
            "ldr ip, [sp, 0x18]",
            "add sl, sl, 1",
            "ldr r1, [sp, 0x10]",
            "ldr r3, [ip, -4]",
            "add r1, r1, 1",
            "str r1, [sp, 0x10]",
            "cmp r3, r1",
            "bgt 0x6030",
            "ldr ip, [sp, 0xc]",
            "ldr r1, [sp, 0x2c]",
            "add ip, ip, 1",
            "cmp r1, ip",
            "str ip, [sp, 0xc]",
            "bgt 0x6004",
            "ldr r0, [sp, 0x1c]",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x28]",
            "add sp, sp, 0x34",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdFree",
            "ldr r2, [sp, 0xc]",
            "mov r0, fp",
            "mov r1, sb",
            "bl rsym.gdImageGetTrueColorPixel",
            "movw r2, 0x1010",
            "mov r8, r0",
            "ldr r3, [fp, r2]",
            "cmp r3, r0",
            "bne 0x60ac",
            "ldr r2, [sp, 8]",
            "add sb, sb, 1",
            "ldr r3, [r6, -4]",
            "cmp sb, r2",
            "add r4, r4, r3",
            "blt 0x604c",
            "b 0x60f4",
            "ldr r2, [sp, 0xc]",
            "mov r0, fp",
            "mov r1, sb",
            "bl rsym.gdImageGetPixel",
            "movw ip, 0x1010",
            "mov r3, r0",
            "ldr r2, [fp, ip]",
            "cmp r2, r0",
            "beq 0x616c",
            "movw r1, 0x1c38",
            "ldr r2, [fp, r1]",
            "cmp r2, 0",
            "bne 0x6228",
            "lsl r5, r0, 2",
            "add ip, sp, 0x430",
            "add r2, ip, r5",
            "ldr r8, [r2, -0x400]",
            "cmn r8, 1",
            "bne 0x60ac",
            "cmp r7, fp",
            "moveq r8, r0",
            "beq 0x6218",
            "add ip, r0, 0x204",
            "add r3, r0, 0x600",
            "ldr ip, [fp, ip, lsl 2]",
            "add r3, r3, 0xe",
            "ldr lr, [fp, r3, lsl 2]",
            "add r1, r0, 4",
            "add r2, r0, 0x104",
            "ldr r1, [fp, r1, lsl 2]",
            "ldr r2, [fp, r2, lsl 2]",
            "mov r0, r7",
            "mov r3, ip",
            "str lr, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r8, r0",
            "add r1, sp, 0x430",
            "add r5, r1, r5",
            "str r8, [r5, -0x400]",
            "b 0x60ac",
            "ubfx ip, r0, 0x18, 7",
            "ubfx r1, r3, 0x10, 8",
            "ubfx r2, r3, 8, 8",
            "mov r0, r7",
            "uxtb r3, r3",
            "str ip, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r8, r0",
            "b 0x60ac"
        ]
    },
    "sym.gdAlphaBlend": {
        "function_address": "0x00005130",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ubfx r5, r1, 0x18, 7",
            "cmp r5, 0",
            "sub sp, sp, 0xc",
            "mov r4, r1",
            "mov r6, r0",
            "beq 0x51fc",
            "cmp r5, 0x7f",
            "moveq r4, r0",
            "beq 0x51fc",
            "ubfx sl, r0, 0x18, 7",
            "cmp sl, 0x7f",
            "beq 0x51fc",
            "rsb r2, sl, 0x7f",
            "rsb r8, r5, 0x7f",
            "mul r2, r5, r2",
            "ubfx r3, r4, 8, 8",
            "movw sb, 0x409",
            "ubfx r0, r0, 8, 8",
            "mul r3, r3, r8",
            "movt sb, 0x8102",
            "asr r1, r2, 0x1f",
            "smull ip, r7, sb, r2",
            "add r7, r7, r2",
            "mul r5, sl, r5",
            "rsb r7, r1, r7, asr 6",
            "add fp, r7, r8",
            "mov r1, fp",
            "mla r0, r0, r7, r3",
            "bl fcn.00013da0",
            "and r3, r4, 0xff",
            "ubfx r4, r4, 0x10, 8",
            "mul r3, r3, r8",
            "and r2, r6, 0xff",
            "lsl ip, r0, 8",
            "mov r1, fp",
            "mul r8, r4, r8",
            "ubfx r6, r6, 0x10, 8",
            "str ip, [sp, 4]",
            "mla r0, r2, r7, r3",
            "smull r3, sb, sb, r5",
            "add r5, sb, r5",
            "asr r5, r5, 6",
            "bl fcn.00013da0",
            "mov r1, fp",
            "add r5, r0, r5, lsl 24",
            "mla r0, r6, r7, r8",
            "bl fcn.00013da0",
            "ldr ip, [sp, 4]",
            "add r4, r5, r0, lsl 16",
            "add r4, r4, ip",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdImageCreateTrueColor": {
        "function_address": "0x00003df0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "bl rsym.overflow2",
            "subs r4, r0, 0",
            "movne r4, 0",
            "beq 0x3e14",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, 4",
            "mov r1, r5",
            "bl rsym.overflow2",
            "subs r8, r0, 0",
            "bne 0x3e0c",
            "mov r0, 4",
            "mov r1, r6",
            "bl rsym.overflow2",
            "subs r7, r0, 0",
            "movne r4, r8",
            "bne 0x3e0c",
            "movw r0, 0x1c64",
            "bl rsym.gdMalloc",
            "subs r4, r0, 0",
            "beq 0x3e0c",
            "mov r1, r7",
            "movw r2, 0x1c64",
            "bl sym.imp.memset",
            "lsl r0, r5, 2",
            "movw sl, 0x1c3c",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "mov r3, r0",
            "str r0, [r4, sl]",
            "beq 0x3f54",
            "movw r3, 0x1014",
            "mov r8, r7",
            "str r7, [r4, r3]",
            "add r3, r3, 4",
            "str r7, [r4, r3]",
            "add r3, r3, 4",
            "str r7, [r4, r3]",
            "add r3, r3, 4",
            "str r7, [r4, r3]",
            "movw r3, 0x182c",
            "str r7, [r4, r3]",
            "b 0x3ec8",
            "ldr sb, [r4, sl]",
            "bl rsym.gdCalloc",
            "ldr r3, [r4, sl]",
            "str r0, [sb, r8, lsl 2]",
            "ldr r3, [r3, r8, lsl 2]",
            "cmp r3, 0",
            "beq 0x3f64",
            "add r8, r8, 1",
            "cmp r8, r5",
            "mov r0, r6",
            "mov r1, 4",
            "lsl r7, r8, 2",
            "blt 0x3ea8",
            "sub r1, r5, 1",
            "movw ip, 0x1010",
            "str r5, [r4, 8]",
            "mvn r5, 0",
            "mov r3, 0",
            "str r5, [r4, ip]",
            "add ip, ip, 0x820",
            "mov r2, 1",
            "str r3, [r4, ip]",
            "movw ip, 0x1c38",
            "str r2, [r4, ip]",
            "add ip, ip, 0xc",
            "str r3, [r4, ip]",
            "mov ip, 0x1c40",
            "str r2, [r4, ip]",
            "movw ip, 0x1834",
            "str r2, [r4, ip]",
            "movw r2, 0x1c48",
            "str r3, [r4, r2]",
            "add r2, r2, 0xc",
            "str r3, [r4, r2]",
            "add r2, r2, 4",
            "sub r0, r6, 1",
            "str r3, [r4, r2]",
            "movw r3, 0x1c5c",
            "str r6, [r4, 4]",
            "str r0, [r4, r3]",
            "add r3, r3, 4",
            "str r1, [r4, r3]",
            "b 0x3e0c",
            "mov r0, r4",
            "mov r4, r3",
            "bl rsym.gdFree",
            "b 0x3e0c",
            "movw r5, 0x1c3c",
            "b 0x3f78",
            "ldr r3, [r4, r5]",
            "ldr r0, [r3, r7]",
            "bl rsym.gdFree",
            "subs r8, r8, 1",
            "sub r7, r7, 4",
            "bpl 0x3f6c",
            "movw r3, 0x1c3c",
            "ldr r0, [r4, r3]",
            "bl rsym.gdFree",
            "mov r0, r4",
            "mov r4, 0",
            "bl rsym.gdFree",
            "b 0x3e0c"
        ]
    },
    "sym.writewbmp": {
        "function_address": "0x00013b38",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r2",
            "mov r5, r1",
            "mov r4, r0",
            "mov r1, r2",
            "mov r0, 0",
            "blx r5",
            "mov r0, 0",
            "mov r1, r6",
            "blx r5",
            "ldr r0, [r4, 4]",
            "mov r1, r5",
            "mov r2, r6",
            "bl rsym.putmbi",
            "mov r2, r6",
            "ldr r0, [r4, 8]",
            "mov r1, r5",
            "bl rsym.putmbi",
            "ldr r2, [r4, 8]",
            "cmp r2, 0",
            "movgt sl, 0",
            "ble 0x13c1c",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "movgt r0, 0",
            "movgt r7, 8",
            "movgt r8, r0",
            "bgt 0x13bb4",
            "b 0x13c10",
            "cmp r3, r8",
            "ble 0x13bfc",
            "mla r1, sl, r3, r8",
            "ldr r2, [r4, 0xc]",
            "sub r7, r7, 1",
            "add r8, r8, 1",
            "ldr r2, [r2, r1, lsl 2]",
            "cmp r2, 1",
            "movne r2, 0",
            "moveq r2, 1",
            "cmp r7, 0",
            "orr r0, r0, r2, lsl r7",
            "bne 0x13bac",
            "mov r1, r6",
            "blx r5",
            "ldr r3, [r4, 4]",
            "mov r0, r7",
            "mov r7, 8",
            "cmp r3, r8",
            "bgt 0x13bb4",
            "cmp r7, 8",
            "beq 0x13c0c",
            "mov r1, r6",
            "blx r5",
            "ldr r2, [r4, 8]",
            "add sl, sl, 1",
            "cmp r2, sl",
            "bgt 0x13b90",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "rsym.putmbi": {
        "function_address": "0x000031b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x10]!"
        ]
    },
    "sym.gdImageGdPtr": {
        "function_address": "0x0000b570",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.0000b450",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.gdImageCreateFromPng": {
        "function_address": "0x00010370",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "bl rsym.gdImageCreateFromPngCtx",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageRectangle": {
        "function_address": "0x00009ab0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r6, [sp, 0x38]",
            "mov r4, r3",
            "mov r5, r1",
            "mov r7, r2",
            "mov fp, r0",
            "cmp r2, r6",
            "cmpeq r1, r3",
            "ldr r3, [sp, 0x3c]",
            "str r3, [sp, 8]",
            "movw r3, 0x1834",
            "ldr r3, [r0, r3]",
            "str r3, [sp, 0xc]",
            "bne 0x9c58",
            "cmp r3, 1",
            "beq 0x9d00",
            "ldr ip, [sp, 0xc]",
            "cmp ip, 1",
            "ble 0x9c7c",
            "asr sl, ip, 1",
            "rsb r7, sl, r7",
            "rsb r5, sl, r5",
            "add sb, r7, ip",
            "add r4, r4, sl",
            "add sl, r6, sl",
            "mov r6, sb",
            "cmp r6, r7",
            "ble 0x9b60",
            "cmp r5, r4",
            "sub r6, r6, 1",
            "bgt 0x9b1c",
            "mov r8, r5",
            "mov r1, r8",
            "ldr r3, [sp, 8]",
            "mov r0, fp",
            "mov r2, r6",
            "add r8, r8, 1",
            "bl rsym.gdImageSetPixel",
            "sub r3, r8, 1",
            "cmp r4, r3",
            "bgt 0x9b34",
            "cmp r6, r7",
            "bgt 0x9b24",
            "ldr r3, [sp, 0xc]",
            "rsb r8, r3, sl",
            "mov r6, r8",
            "cmp r6, sl",
            "bge 0x9bb0",
            "cmp r5, r4",
            "add r6, r6, 1",
            "bgt 0x9b6c",
            "mov r7, r5",
            "mov r1, r7",
            "ldr r3, [sp, 8]",
            "mov r0, fp",
            "mov r2, r6",
            "add r7, r7, 1",
            "bl rsym.gdImageSetPixel",
            "sub r3, r7, 1",
            "cmp r4, r3",
            "bgt 0x9b84",
            "cmp r6, sl",
            "blt 0x9b74",
            "ldr ip, [sp, 0xc]",
            "sub r6, sb, 1",
            "mov r7, r6",
            "add sl, r5, ip",
            "cmp r7, r8",
            "bge 0x9c04",
            "cmp r5, sl",
            "add r7, r7, 1",
            "bgt 0x9bc0",
            "mov sb, r5",
            "mov r1, sb",
            "ldr r3, [sp, 8]",
            "mov r0, fp",
            "mov r2, r7",
            "add sb, sb, 1",
            "bl rsym.gdImageSetPixel",
            "sub r3, sb, 1",
            "cmp r3, sl",
            "blt 0x9bd8",
            "cmp r7, r8",
            "blt 0x9bc8",
            "ldr r3, [sp, 0xc]",
            "mvn r5, r3",
            "add r5, r5, r4",
            "cmp r6, r8",
            "bge 0x9c50",
            "cmp r4, r5",
            "add r6, r6, 1",
            "ble 0x9c10",
            "mov r7, r5",
            "add r7, r7, 1",
            "mov r0, fp",
            "mov r1, r7",
            "mov r2, r6",
            "ldr r3, [sp, 8]",
            "bl rsym.gdImageSetPixel",
            "cmp r4, r7",
            "bgt 0x9c28",
            "cmp r6, r8",
            "blt 0x9c18",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r2, r6",
            "ble 0x9af4",
            "ldr ip, [sp, 0xc]",
            "mov r7, r6",
            "mov r5, r4",
            "mov r6, r2",
            "mov r4, r1",
            "cmp ip, 1",
            "bgt 0x9b00",
            "ldr ip, [sp, 8]",
            "mov r0, fp",
            "mov r1, r5",
            "mov r2, r7",
            "mov r3, r4",
            "stm sp, {r7, ip}",
            "add r8, r7, 1",
            "bl rsym.gdImageLine",
            "ldr ip, [sp, 8]",
            "mov r0, fp",
            "mov r1, r5",
            "mov r2, r6",
            "mov r3, r4",
            "stm sp, {r6, ip}",
            "sub r7, r6, 1",
            "bl rsym.gdImageLine",
            "ldr ip, [sp, 8]",
            "mov r1, r5",
            "mov r0, fp",
            "mov r3, r5",
            "mov r2, r8",
            "stm sp, {r7, ip}",
            "bl rsym.gdImageLine",
            "ldr ip, [sp, 8]",
            "mov r1, r4",
            "mov r0, fp",
            "mov r2, r8",
            "mov r3, r4",
            "str r7, [sp, 0x38]",
            "str ip, [sp, 0x3c]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdImageLine",
            "ldr r3, [sp, 8]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdImageSetPixel"
        ]
    },
    "sym._gdPutColors": {
        "function_address": "0x0000b3a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "movw r6, 0x1c38",
            "mov r5, r0",
            "ldrb r0, [r0, r6]",
            "mov r4, r1",
            "bl rsym.gdPutC",
            "ldr r3, [r5, r6]",
            "cmp r3, 0",
            "beq 0xb440",
            "movw r3, 0x1010",
            "mov r1, r4",
            "ldr r0, [r5, r3]",
            "bl rsym.gdPutInt",
            "movw r3, 0x1c38",
            "ldr r6, [r5, r3]",
            "cmp r6, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "add r8, r5, 0x800",
            "add r7, r5, 0x1800",
            "add r8, r8, 0xc",
            "add r7, r7, 0x34",
            "ldrb r0, [r5, 0x10]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldrb r0, [r5, 0x410]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldr r0, [r8, 4]!",
            "mov r1, r4",
            "add r6, r6, 1",
            "add r5, r5, 4",
            "uxtb r0, r0",
            "bl rsym.gdPutC",
            "ldr r0, [r7, 4]!",
            "mov r1, r4",
            "uxtb r0, r0",
            "bl rsym.gdPutC",
            "cmp r6, 0x100",
            "bne 0xb3f4",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [r5, 0xc]",
            "mov r1, r4",
            "bl rsym.gdPutWord",
            "b 0xb3c4"
        ]
    },
    "sym.any2eucjp": {
        "function_address": "0x000130c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "str r0, [sp, 0xc]",
            "mov r0, r1",
            "mov r4, r1",
            "ldr r5, [0x0001376c]",
            "str r2, [sp]",
            "bl sym.imp.strlen",
            "cmp r0, 0x1000",
            "add r5, pc, r5",
            "bhs 0x13758",
            "ldr r2, [sp]",
            "cmp r2, 0x1000",
            "bhi 0x136ec",
            "ldr r6, [0x00013770]",
            "mov r2, 0",
            "ldr lr, [r5, r6]",
            "sub r3, lr, 7",
            "cmp r3, 1",
            "mov r3, 1",
            "movhi r1, 8",
            "movls r1, lr",
            "sub r0, r1, 7",
            "strhi r1, [r5, r6]",
            "movhi r7, 1",
            "movls r7, 0",
            "movls lr, 8",
            "cmp r0, 1",
            "movhi r0, 0",
            "movls r0, 1",
            "cmp r3, 0",
            "ldr ip, [r5, r6]",
            "moveq r0, 0",
            "cmp r0, 0",
            "beq 0x131c8",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "cmp r3, 0",
            "beq 0x131a4",
            "cmp r3, 0x1b",
            "beq 0x13250",
            "sub r0, r3, 0x8f",
            "sub r1, r3, 0x81",
            "cmp r1, 0xc",
            "cmphi r0, 0x10",
            "bls 0x13244",
            "cmp r3, 0x8e",
            "beq 0x1321c",
            "sub r1, r3, 0xa1",
            "cmp r1, 0x3e",
            "bhi 0x13278",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "sub r1, r3, 0xf0",
            "cmp r1, 0xe",
            "bhi 0x132cc",
            "mov ip, 5",
            "mov r1, ip",
            "sub r0, r1, 7",
            "cmp r0, 1",
            "movhi r0, 0",
            "movls r0, 1",
            "cmp r3, 0",
            "moveq r0, 0",
            "cmp r0, 0",
            "bne 0x1314c",
            "cmp r1, 7",
            "movne r7, 0",
            "andeq r7, r7, 1",
            "str ip, [r5, r6]",
            "cmp r7, 0",
            "movne r1, lr",
            "strne lr, [r5, r6]",
            "cmp r1, 7",
            "beq 0x135ac",
            "sub r1, r1, 1",
            "cmp r1, 7",
            "addls pc, pc, r1, lsl 2",
            "b 0x13368",
            "b 0x133d0",
            "b 0x13684",
            "b 0x133d0",
            "b 0x1335c",
            "b 0x13654",
            "b 0x13668",
            "b 0x13368",
            "b 0x13368",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "sub r0, r3, 0x80",
            "sub r1, r3, 0x40",
            "cmp r1, 0x3e",
            "cmphi r0, 0x20",
            "bls 0x13244",
            "sub r1, r3, 0xe0",
            "cmp r1, 0x1c",
            "bhi 0x13598",
            "mov ip, 6",
            "mov r1, ip",
            "b 0x131a8",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "cmp r3, 0x24",
            "beq 0x1355c",
            "cmp r3, 0x28",
            "beq 0x13580",
            "cmp r3, 0x4b",
            "moveq ip, 4",
            "mov r1, ip",
            "b 0x131a8",
            "sub r1, r3, 0xf0",
            "cmp r1, 0xe",
            "bls 0x131a0",
            "sub r1, r3, 0xe0",
            "cmp r1, 0xf",
            "bhi 0x131a4",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "sub r0, r3, 0x80",
            "sub r1, r3, 0x40",
            "cmp r1, 0x3e",
            "cmphi r0, 0x20",
            "bls 0x13244",
            "sub r1, r3, 0xfd",
            "cmp r1, 1",
            "bls 0x131a0",
            "sub r1, r3, 0xa1",
            "cmp r1, 0x5b",
            "movls ip, 7",
            "mov r1, ip",
            "b 0x131a8",
            "sub r1, r3, 0xa1",
            "cmp r1, 0x3e",
            "movls ip, 7",
            "bls 0x131a4",
            "sub r1, r3, 0xe0",
            "cmp r1, 0xf",
            "bhi 0x136d4",
            "mov ip, 7",
            "b 0x132f8",
            "cmp r1, 7",
            "bne 0x131a4",
            "cmp r3, 0x80",
            "sub r0, r3, 0x8f",
            "mov r1, ip",
            "ble 0x13344",
            "cmp r3, 0x8d",
            "movgt r1, 0",
            "movle r1, 1",
            "sub r3, r3, 0xfd",
            "cmp r0, 0x10",
            "movhi r0, r1",
            "orrls r0, r1, 1",
            "cmp r0, 0",
            "movne ip, 6",
            "movne r1, ip",
            "bne 0x13344",
            "cmp r3, 1",
            "mov r1, ip",
            "movls ip, 5",
            "movls r1, ip",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "cmp r3, 0x3f",
            "bgt 0x132f0",
            "mov r1, ip",
            "b 0x131a8",
            "ldr r0, [0x00013774]",
            "add r0, r5, r0",
            "bl fcn.00012dbc",
            "ldr r6, [0x00013778]",
            "mov r1, r4",
            "ldr sb, [0x0001377c]",
            "mov r8, 0",
            "add r6, r5, r6",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "add r0, r5, sb",
            "mov r1, r6",
            "sub r0, r0, 0xff0",
            "sub r0, r0, 8",
            "bl sym.imp.strcpy",
            "add sb, r5, sb",
            "sub sb, sb, 0xff0",
            "sub sb, sb, 8",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "ldr r3, [sp]",
            "cmp r3, r0",
            "bls 0x13704",
            "ldr r0, [sp, 0xc]",
            "mov r1, sb",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r6, [0x00013778]",
            "mov r1, r4",
            "ldr r2, [0x00013780]",
            "add r0, r5, r6",
            "add r2, r5, r2",
            "bl fcn.00012e34",
            "ldrb r3, [r5, r6]",
            "subs r7, r3, 0",
            "movne r7, 1",
            "cmp r7, 0",
            "beq 0x136e4",
            "ldr sb, [0x0001377c]",
            "add r2, sp, 0x14",
            "mov r7, 0",
            "str r2, [sp, 4]",
            "add r2, sp, 0x10",
            "mov r8, r7",
            "add r6, r5, r6",
            "str r2, [sp, 8]",
            "add sl, r5, sb",
            "movw fp, 0xfff",
            "b 0x13454",
            "add r2, sl, r7",
            "add r8, r8, 1",
            "strb r3, [r2, -0xff8]",
            "add r7, r7, 1",
            "ldrb r3, [r6, r8]",
            "subs r2, r3, 0",
            "movne r2, 1",
            "cmp r7, fp",
            "movgt r2, 0",
            "cmp r2, 0",
            "beq 0x13514",
            "cmp r3, 0x8e",
            "bne 0x13428",
            "add r3, r8, 1",
            "add r8, r3, 1",
            "ldrb r1, [r6, r3]",
            "ldrb r2, [r6, r8]",
            "str r1, [sp, 0x14]",
            "cmp r2, 0x8e",
            "movne r2, 0",
            "strne r2, [sp, 0x10]",
            "beq 0x13538",
            "ldmib sp, {r0, r1}",
            "bl fcn.00012cb4",
            "ldr r1, [sp, 0x10]",
            "ldrb r2, [sp, 0x14]",
            "uxtb r0, r1",
            "cmp r2, 0x9f",
            "movhi ip, 0xb0",
            "movls ip, 0x70",
            "cmp r0, 0x9e",
            "movhi r3, 0",
            "movls r3, 1",
            "cmp r3, 0",
            "moveq r0, 0x7e",
            "beq 0x134c4",
            "tst r0, 0x80",
            "moveq r0, 0x1f",
            "movne r0, 0x20",
            "rsb r2, ip, r2",
            "rsb r1, r0, r1",
            "rsb r2, r3, r2, lsl 1",
            "add r3, r7, 1",
            "add r7, sl, r7",
            "str r1, [sp, 0x10]",
            "sub ip, r2, 0x80",
            "add r0, sl, r3",
            "strb ip, [r7, -0xff8]",
            "add r7, r3, 1",
            "ldrb r3, [r6, r8]",
            "sub r1, r1, 0x80",
            "str r2, [sp, 0x14]",
            "strb r1, [r0, -0xff8]",
            "subs r2, r3, 0",
            "movne r2, 1",
            "cmp r7, fp",
            "movgt r2, 0",
            "cmp r2, 0",
            "bne 0x13454",
            "movw r3, 0xfff",
            "cmp r7, r3",
            "bgt 0x136a0",
            "add r3, r5, sb",
            "mov r8, 1",
            "add r7, r3, r7",
            "mov r3, 0",
            "strb r3, [r7, -0xff8]",
            "b 0x13398",
            "add r2, r3, 2",
            "ldrb r2, [r6, r2]",
            "sub r1, r2, 0xde",
            "str r2, [sp, 0x10]",
            "cmp r1, 1",
            "movhi r3, 0",
            "addls r8, r3, 3",
            "strhi r3, [sp, 0x10]",
            "b 0x13480",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "cmp r3, 0x42",
            "moveq ip, 1",
            "beq 0x131a4",
            "cmp r3, 0x40",
            "moveq ip, 2",
            "mov r1, ip",
            "b 0x131a8",
            "ldrb r3, [r4, r2]",
            "add r2, r2, 1",
            "cmp r3, 0x49",
            "moveq ip, 3",
            "mov r1, ip",
            "b 0x131a8",
            "sub r1, r3, 0xa1",
            "cmp r1, 0x3e",
            "movls ip, 7",
            "mov r1, ip",
            "b 0x131a8",
            "ldr r7, [0x00013784]",
            "add r7, r5, r7",
            "mov r0, r7",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "beq 0x13724",
            "mov r0, r7",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "mov r7, r0",
            "beq 0x13640",
            "ldr r1, [0x00013788]",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x136c8",
            "ldr r1, [0x0001378c]",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x136c8",
            "ldr r1, [0x00013790]",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x136c8",
            "ldr r1, [0x00013794]",
            "mov r0, r7",
            "mov r2, 2",
            "add r1, r5, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "moveq r1, 5",
            "streq r1, [r5, r6]",
            "beq 0x131ec",
            "ldr r1, [r5, r6]",
            "cmp r1, 7",
            "moveq r3, 5",
            "streq r3, [r5, r6]",
            "bne 0x131ec",
            "ldr r6, [0x00013778]",
            "mov r1, r4",
            "add r0, r5, r6",
            "bl sym.imp.strcpy",
            "b 0x133e8",
            "ldr r6, [0x00013778]",
            "mov r1, r4",
            "ldr r2, [0x00013798]",
            "add r0, r5, r6",
            "add r2, r5, r2",
            "bl fcn.00012e34",
            "b 0x133e8",
            "ldr r6, [0x00013778]",
            "mov r1, r4",
            "ldr r2, [0x0001379c]",
            "add r0, r5, r6",
            "add r2, r5, r2",
            "bl fcn.00012e34",
            "b 0x133e8",
            "ldr r0, [0x000137a0]",
            "mov r8, 1",
            "add r0, r5, r0",
            "bl fcn.00012dbc",
            "add r0, r5, sb",
            "mov r1, r6",
            "sub r0, r0, 0xff0",
            "sub r0, r0, 8",
            "bl sym.imp.strcpy",
            "b 0x13398",
            "mov r1, 6",
            "str r1, [r5, r6]",
            "b 0x131ec",
            "cmp r3, 0x9f",
            "movle ip, 6",
            "mov r1, ip",
            "b 0x131a8",
            "ldr sb, [0x0001377c]",
            "b 0x13520",
            "ldr r0, [0x000137a4]",
            "mov r1, 0x1000",
            "mvn r8, 0",
            "add r0, r5, r0",
            "bl fcn.00012dbc",
            "b 0x133c4",
            "ldr r0, [0x000137a8]",
            "mvn r8, 0",
            "add r0, r5, r0",
            "bl fcn.00012dbc",
            "ldr r0, [sp, 0xc]",
            "mov r1, r4",
            "bl sym.imp.strcpy",
            "b 0x133c4",
            "ldr r7, [0x000137ac]",
            "add r7, r5, r7",
            "mov r0, r7",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "bne 0x135c4",
            "ldr r7, [0x000137b0]",
            "add r7, r5, r7",
            "mov r0, r7",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "bne 0x135c4",
            "b 0x13640",
            "ldr r0, [0x000137b4]",
            "mvn r8, 0",
            "add r0, r5, r0",
            "bl fcn.00012dbc",
            "b 0x133c4"
        ]
    },
    "fcn.00012dbc": {
        "function_address": "0x00012dbc",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "ldr r3, [0x00012e24]",
            "ldr r2, [0x00012e28]",
            "add r3, pc, r3",
            "push {r4, lr}",
            "ldr r1, [0x00012e2c]",
            "sub sp, sp, 8",
            "ldr r4, [r3, r2]",
            "ldr r2, [0x00012e30]",
            "add r1, r3, r1",
            "ldr r0, [r4]",
            "add r2, r3, r2",
            "add r3, sp, 0x14",
            "str r3, [sp, 4]",
            "bl sym.imp.fprintf",
            "ldr r1, [sp, 0x10]",
            "ldr r0, [r4]",
            "ldr r2, [sp, 4]",
            "bl sym.imp.vfprintf",
            "ldr r1, [r4]",
            "mov r0, 0xa",
            "bl sym.imp.fputc",
            "add sp, sp, 8",
            "pop {r4, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x00002fb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x160]!"
        ]
    },
    "fcn.00012e34": {
        "function_address": "0x00012e34",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r1",
            "ldr r4, [0x00013090]",
            "mov r6, r0",
            "mov r0, r2",
            "mov r7, r2",
            "ldr r1, [0x00013094]",
            "add r4, pc, r4",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12e7c",
            "ldr r1, [0x00013098]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x12f64",
            "ldrb r1, [r5]",
            "subs r2, r1, 0",
            "movne r2, 1",
            "cmp r2, 0",
            "beq 0x1304c",
            "mov sl, 0",
            "mov r7, r5",
            "mov r2, sl",
            "mov ip, sl",
            "mov r3, sl",
            "mvn sb, 0x71",
            "movw r8, 0xfff",
            "b 0x12ee4",
            "sub r1, r1, 0x80",
            "mov ip, 1",
            "strb r1, [r6, r2]",
            "add r2, r2, ip",
            "add r3, r3, 1",
            "ldrb r1, [r5, r3]",
            "add r7, r5, r3",
            "subs r0, r1, 0",
            "movne r0, 1",
            "cmp r2, r8",
            "movgt r0, 0",
            "cmp r0, 0",
            "beq 0x13044",
            "cmp r1, 0x1b",
            "beq 0x12f20",
            "cmp ip, 0",
            "bne 0x12eb0",
            "cmp sl, 0",
            "strbne sb, [r6, r2]",
            "addne r1, r2, 1",
            "ldrbne r0, [r7]",
            "addne r2, r1, 1",
            "strbeq r1, [r6, r2]",
            "movne sl, 1",
            "addeq r2, r2, 1",
            "subne r0, r0, 0x80",
            "strbne r0, [r6, r1]",
            "b 0x12ec0",
            "add r3, r3, 1",
            "ldrb r1, [r5, r3]",
            "cmp r1, 0x24",
            "addeq r3, r3, 1",
            "moveq sl, 0",
            "moveq ip, 1",
            "beq 0x12ec0",
            "cmp r1, 0x28",
            "bne 0x12ec0",
            "add r3, r3, 1",
            "ldrb r1, [r5, r3]",
            "cmp r1, 0x49",
            "moveq sl, 1",
            "moveq ip, 0",
            "movne sl, 0",
            "movne ip, sl",
            "b 0x12ec0",
            "ldr r1, [0x0001309c]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "subs r2, r0, 0",
            "bne 0x13058",
            "ldrb r3, [r5]",
            "subs r1, r3, 0",
            "movne r1, 1",
            "cmp r1, 0",
            "beq 0x13088",
            "mvn r8, 0x71",
            "mov r1, r2",
            "movw ip, 0xfff",
            "cmp r3, 0x7e",
            "sub r0, r3, 0xa1",
            "strble r3, [r6, r2]",
            "addle r2, r2, 1",
            "ble 0x13024",
            "cmp r0, 0x3e",
            "add r7, r2, 1",
            "strbls r8, [r6, r2]",
            "addls r2, r7, 1",
            "strbls r3, [r6, r7]",
            "bls 0x13024",
            "add r1, r1, 1",
            "cmp r3, 0x9f",
            "ldrb r0, [r5, r1]",
            "movhi r7, 0xb0",
            "movls r7, 0x70",
            "mov sb, 0x7e",
            "cmp r0, 0x9e",
            "movhi sl, 0",
            "movls sl, 1",
            "cmp sl, 0",
            "beq 0x13000",
            "tst r0, 0x80",
            "moveq sb, 0x1f",
            "movne sb, 0x20",
            "rsb r3, r7, r3",
            "add r7, r2, 1",
            "rsb sl, sl, r3, lsl 1",
            "rsb r0, sb, r0",
            "sub r0, r0, 0x80",
            "sub sl, sl, 0x80",
            "strb sl, [r6, r2]",
            "add r2, r7, 1",
            "strb r0, [r6, r7]",
            "add r1, r1, 1",
            "ldrb r3, [r5, r1]",
            "subs r0, r3, 0",
            "movne r0, 1",
            "cmp r2, ip",
            "movgt r0, 0",
            "cmp r0, 0",
            "bne 0x12f9c",
            "cmp r2, 0x1000",
            "bge 0x1306c",
            "mov r3, 0",
            "strb r3, [r6, r2]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [0x000130a0]",
            "mov r1, r7",
            "add r0, r4, r0",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b fcn.00012dbc",
            "ldr r0, [0x000130a4]",
            "add r0, r4, r0",
            "bl fcn.00012dbc",
            "mov r0, r6",
            "mov r1, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.strcpy",
            "mov r2, r1",
            "b 0x1304c"
        ]
    },
    "fcn.00012cb4": {
        "function_address": "0x00012cb4",
        "instructions": [
            "ldr r3, [0x00012db4]",
            "mov r2, 0x1f8",
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "ldr r1, [0x00012db8]",
            "sub sp, sp, 0x1f8",
            "add r3, pc, r3",
            "mov r5, r0",
            "mov r0, sp",
            "ldr r6, [r5]",
            "add r1, r3, r1",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "cmp r3, 0xde",
            "beq 0x12d5c",
            "cmp r3, 0xdf",
            "beq 0x12d1c",
            "add r2, sp, 0x1f8",
            "sub r6, r6, 0xa1",
            "add r6, r2, r6, lsl 3",
            "ldr r2, [r6, -0x1f8]",
            "ldr r3, [r6, -0x1f4]",
            "str r2, [r5]",
            "str r3, [r4]",
            "add sp, sp, 0x1f8",
            "pop {r4, r5, r6, pc}",
            "sub r3, r6, 0xa1",
            "add r2, sp, 0x1f8",
            "add r3, r2, r3, lsl 3",
            "sub r6, r6, 0xca",
            "cmp r6, 4",
            "ldr r2, [r3, -0x1f8]",
            "ldr r3, [r3, -0x1f4]",
            "str r2, [r5]",
            "str r3, [r4]",
            "bhi 0x12d14",
            "cmp r3, 0x6d",
            "ble 0x12d14",
            "cmp r3, 0x7a",
            "addle r3, r3, 2",
            "strle r3, [r4]",
            "b 0x12d14",
            "sub r2, r6, 0xca",
            "sub r3, r6, 0xb6",
            "cmp r3, 0xe",
            "cmphi r2, 4",
            "bhi 0x12da8",
            "add r3, sp, 0x1f8",
            "sub r6, r6, 0xa1",
            "add r6, r3, r6, lsl 3",
            "ldr r3, [r6, -0x1f4]",
            "ldr r2, [r6, -0x1f8]",
            "sub r0, r3, 0x6e",
            "sub r1, r3, 0x4a",
            "cmp r1, 0x1d",
            "cmphi r0, 0xc",
            "str r2, [r5]",
            "str r3, [r4]",
            "addls r3, r3, 1",
            "strls r3, [r4]",
            "b 0x12d14",
            "cmp r6, 0xb3",
            "bne 0x12cf8",
            "b 0x12d70"
        ]
    },
    "sym.imp.getenv": {
        "function_address": "0x00003048",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x100]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00003468",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe40]!"
        ]
    },
    "sym.gdImageGifCtx": {
        "function_address": "0x0000ea6c",
        "instructions": [
            "movw r3, 0x1c38",
            "movw r2, 0x1830",
            "ldr r3, [r0, r3]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x18",
            "mov r6, r1",
            "cmp r3, 0",
            "ldr r5, [r0, r2]",
            "beq 0xeb00",
            "mov r1, 1",
            "mov r2, 0x100",
            "bl rsym.gdImageCreatePaletteFromTrueColor",
            "subs r4, r0, 0",
            "beq 0xeb48",
            "ldr r0, [r4, 0xc]",
            "add r7, r4, 0x10",
            "bl fcn.0000ddd8",
            "movw r3, 0x1010",
            "ldr r1, [r4, 4]",
            "ldr r8, [r4, r3]",
            "add lr, r4, 0x410",
            "ldr r2, [r4, 8]",
            "add ip, r4, 0x810",
            "str r0, [sp, 4]",
            "mov r3, r5",
            "mov r0, r6",
            "str r8, [sp]",
            "str r7, [sp, 8]",
            "str lr, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "str r4, [sp, 0x14]",
            "bl fcn.0000e7bc",
            "mov r0, r4",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b rsym.gdImageDestroy",
            "ldr r0, [r0, 0xc]",
            "add r7, r4, 0x10",
            "bl fcn.0000ddd8",
            "movw r3, 0x1010",
            "ldr r1, [r4, 4]",
            "ldr r8, [r4, r3]",
            "add lr, r4, 0x410",
            "ldr r2, [r4, 8]",
            "add ip, r4, 0x810",
            "str r0, [sp, 4]",
            "mov r3, r5",
            "mov r0, r6",
            "str r8, [sp]",
            "str r7, [sp, 8]",
            "str lr, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "str r4, [sp, 0x14]",
            "bl fcn.0000e7bc",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0000e7bc": {
        "function_address": "0x0000e7bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x7600",
            "sub sp, sp, 0xac",
            "mov r3, r1",
            "add sl, sp, 0x10",
            "add r1, sp, 0x7000",
            "ldr fp, [r1, 0x6d4]",
            "mov ip, r2",
            "add r5, sp, 0x7000",
            "mov r1, 0",
            "movw r2, 0x7698",
            "mov r4, r0",
            "mov r0, sl",
            "ldr r6, [r5, 0x6d8]",
            "ldr r7, [r5, 0x6dc]",
            "movw sb, 0x8968",
            "ldr r8, [r5, 0x6e0]",
            "movt sb, 0xffff",
            "str r3, [sp, 4]",
            "mov r5, 1",
            "str ip, [sp]",
            "lsl r5, r5, fp",
            "bl sym.imp.memset",
            "ldr r3, [sp, 4]",
            "cmp fp, 1",
            "ldr ip, [sp]",
            "movgt r0, fp",
            "add lr, sp, 0x7600",
            "uxtbgt r0, r0",
            "add lr, lr, 0xa8",
            "ldr r2, [0x0000ea60]",
            "movle r0, 2",
            "str r3, [lr, sb]",
            "mul r1, r3, ip",
            "movle lr, 3",
            "strgt r0, [sp, 8]",
            "add r2, pc, r2",
            "strle lr, [sp, 0xc]",
            "strle r0, [sp, 8]",
            "str r1, [sl, 0x10]",
            "addgt r1, fp, 1",
            "strgt r1, [sp, 0xc]",
            "add r1, sp, 0x7000",
            "ldr r1, [r1, 0x6d0]",
            "str ip, [sl, 4]",
            "cmp r1, 0",
            "blt 0xea54",
            "ldr r0, [0x0000ea64]",
            "add r0, r2, r0",
            "mov r2, r4",
            "mov r1, 6",
            "str ip, [sp]",
            "sub fp, fp, 1",
            "str r3, [sp, 4]",
            "bl rsym.gdPutBuf",
            "ldr r3, [sp, 4]",
            "mov r1, r4",
            "mov r0, r3",
            "bl fcn.0000df1c",
            "ldr ip, [sp]",
            "mov r1, r4",
            "mov r0, ip",
            "bl fcn.0000df1c",
            "orr r3, fp, 0x80",
            "mov r1, r4",
            "orr fp, r3, fp, lsl 5",
            "uxtb r0, fp",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "cmp r5, 0",
            "ble 0xe928",
            "mov sb, 0",
            "mov fp, sb",
            "ldrb r0, [r6, sb]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldrb r0, [r7, sb]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add fp, fp, 1",
            "ldrb r0, [r8, sb]",
            "mov r1, r4",
            "add sb, sb, 4",
            "bl rsym.gdPutC",
            "cmp r5, fp",
            "bgt 0xe8f4",
            "add r2, sp, 0x7000",
            "ldr r2, [r2, 0x6d0]",
            "cmp r2, 0",
            "blt 0xe99c",
            "mov r0, 0x21",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0xf9",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 4",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 1",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add r3, sp, 0x7600",
            "mov r1, r4",
            "ldrb r0, [r3, 0xd0]",
            "bl rsym.gdPutC",
            "mov r0, 0",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r0, 0x2c",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "mov r1, r4",
            "mov r0, 0",
            "bl fcn.0000df1c",
            "mov r1, r4",
            "mov r0, 0",
            "bl fcn.0000df1c",
            "add r5, sp, 0x7600",
            "movw r3, 0x8968",
            "movt r3, 0xffff",
            "add r5, r5, 0xa8",
            "mov r1, r4",
            "ldr r0, [r5, r3]",
            "bl fcn.0000df1c",
            "ldr r0, [sl, 4]",
            "mov r1, r4",
            "bl fcn.0000df1c",
            "ldr r0, [sl, 0x18]",
            "cmp r0, 0",
            "bne 0xea44",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "ldr r0, [sp, 8]",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add lr, sp, 0x7000",
            "ldr r0, [sp, 0xc]",
            "mov r1, r4",
            "ldr r2, [lr, 0x6e4]",
            "mov r3, sl",
            "bl fcn.0000e2c4",
            "mov r1, r4",
            "mov r0, 0",
            "bl rsym.gdPutC",
            "mov r0, 0x3b",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "add sp, sp, 0x2ac",
            "add sp, sp, 0x7400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, 0x40",
            "mov r1, r4",
            "bl rsym.gdPutC",
            "b 0xe9fc",
            "ldr r0, [0x0000ea68]",
            "add r0, r2, r0",
            "b 0xe880"
        ]
    },
    "fcn.0000e2c4": {
        "function_address": "0x0000e2c4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "mov r4, r3",
            "str r2, [sp, 4]",
            "movw r2, 0x757c",
            "mov lr, 1",
            "str r0, [r4, r2]",
            "movw r2, 0x7580",
            "str r1, [r4, r2]",
            "movw r2, 0x7570",
            "ldr r5, [r3, 0x10]",
            "mov r3, 0",
            "str r3, [r4, r2]",
            "movw r2, 0x7578",
            "str r3, [r4, r2]",
            "sub ip, r0, 1",
            "movw r2, 0x756c",
            "lsl ip, lr, ip",
            "str r3, [r4, r2]",
            "movw r2, 0x7574",
            "str lr, [r4, r2]",
            "movw r2, 0x7584",
            "str ip, [r4, r2]",
            "lsl r8, lr, r0",
            "movw r2, 0x7588",
            "str r0, [r4, 0x1c]",
            "add r7, ip, lr",
            "cmp r5, r3",
            "str r7, [r4, r2]",
            "add r6, ip, 2",
            "movw r2, 0x7568",
            "sub r8, r8, 1",
            "str r6, [r4, r2]",
            "movw r2, 0x7594",
            "str r8, [r4, 0x20]",
            "mvneq r5, 0",
            "str r3, [r4, r2]",
            "bne 0xe4f4",
            "mov r0, r4",
            "movw r8, 0x7584",
            "movw r6, 0x7574",
            "movw r7, 0x7578",
            "bl fcn.0000e244",
            "ldr r0, [r4, r8]",
            "mov r1, r4",
            "bl fcn.0000dfe0",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "bne 0xe3bc",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0000dfe0",
            "movw r3, 0x7578",
            "movw r0, 0x7588",
            "ldr r2, [r4, r3]",
            "mov r1, r4",
            "ldr r0, [r4, r0]",
            "add r2, r2, 1",
            "str r2, [r4, r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.0000dfe0",
            "sub r3, r3, 1",
            "ldr r1, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "str r3, [r4, 0x10]",
            "ldr r0, [sp, 4]",
            "bl rsym.gdImageGetPixel",
            "mov fp, r0",
            "mov r0, r4",
            "bl fcn.0000de3c",
            "cmn fp, 1",
            "beq 0xe388",
            "eor r8, r5, fp, lsl 4",
            "ldr r2, [r4, r6]",
            "add sb, r5, fp, lsl 12",
            "add sl, r8, 8",
            "add r3, r4, sl, lsl 2",
            "add r2, r2, 1",
            "str r2, [r4, r6]",
            "ldr r3, [r3, 4]",
            "cmp r3, sb",
            "beq 0xe4a8",
            "cmp r3, 0",
            "blt 0xe450",
            "cmp r8, 0",
            "rsbne r2, r8, 0x1380",
            "moveq r2, 1",
            "addne r2, r2, 0xb",
            "subs r8, r8, r2",
            "addmi r8, r8, 0x1380",
            "addmi r8, r8, 0xb",
            "add sl, r8, 8",
            "add r3, r4, sl, lsl 2",
            "ldr r3, [r3, 4]",
            "cmp r3, sb",
            "beq 0xe4a8",
            "cmp r3, 0",
            "bgt 0xe428",
            "mov r1, r4",
            "mov r0, r5",
            "bl fcn.0000dfe0",
            "movw r1, 0x7568",
            "ldr r2, [r4, r7]",
            "ldr r3, [r4, r1]",
            "movw r1, 0xfff",
            "add r2, r2, 1",
            "cmp r3, r1",
            "str r2, [r4, r7]",
            "bgt 0xe4bc",
            "add r8, r8, 0x2700",
            "add sl, r4, sl, lsl 2",
            "add r8, r8, 0x28",
            "lsl r8, r8, 1",
            "add r2, r3, 1",
            "movw r1, 0x7568",
            "str sb, [sl, 4]",
            "str r2, [r4, r1]",
            "mov r5, fp",
            "strh r3, [r4, r8]",
            "b 0xe37c",
            "add r8, r8, 0x2700",
            "add r8, r8, 0x28",
            "lsl r8, r8, 1",
            "ldrh r5, [r4, r8]",
            "b 0xe37c",
            "mov r0, r4",
            "mov r5, fp",
            "bl fcn.0000e244",
            "movw r2, 0x7584",
            "movw r3, 0x756c",
            "ldr r0, [r4, r2]",
            "mov r2, 1",
            "str r2, [r4, r3]",
            "movw r2, 0x7568",
            "mov r1, r4",
            "add r3, r0, 2",
            "str r3, [r4, r2]",
            "bl fcn.0000dfe0",
            "b 0xe37c",
            "sub r5, r5, 1",
            "ldr r0, [sp, 4]",
            "str r5, [r4, 0x10]",
            "ldr r1, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "bl rsym.gdImageGetPixel",
            "mov r5, r0",
            "mov r0, r4",
            "bl fcn.0000de3c",
            "b 0xe35c"
        ]
    },
    "sym.gdImageFilledPolygon": {
        "function_address": "0x00009318",
        "instructions": [
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "mov r7, r0",
            "mov sl, r1",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 0x20]",
            "beq 0x937c",
            "movw r4, 0x1018",
            "ldr r1, [r0, r4]",
            "cmp r1, 0",
            "beq 0x9384",
            "ldr r0, [sp, 0xc]",
            "cmp r0, r1",
            "ble 0x93bc",
            "mov r3, r0",
            "lsl r1, r1, 1",
            "cmp r3, r1",
            "bgt 0x9358",
            "movw r4, 0x1018",
            "mov r0, 4",
            "str r1, [r7, r4]",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "beq 0x9688",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, 4",
            "mov r1, r2",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "bne 0x937c",
            "ldr r2, [sp, 0xc]",
            "lsl r0, r2, 2",
            "bl rsym.gdMalloc",
            "movw r3, 0x1014",
            "cmp r0, 0",
            "str r0, [r7, r3]",
            "ldrne r3, [sp, 0xc]",
            "strne r3, [r7, r4]",
            "beq 0x937c",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [sl, 4]",
            "cmp r2, 1",
            "movle ip, r0",
            "ble 0x9404",
            "ldr r4, [sp, 0xc]",
            "mov r2, sl",
            "mov ip, r0",
            "mov r3, 1",
            "ldr r1, [r2, 0xc]",
            "add r3, r3, 1",
            "add r2, r2, 8",
            "cmp r0, r1",
            "movge r0, r1",
            "cmp ip, r1",
            "movlt ip, r1",
            "cmp r3, r4",
            "bne 0x93e0",
            "movw r3, 0x1c58",
            "ldr r2, [r7, r3]",
            "add r3, r3, 8",
            "ldr r3, [r7, r3]",
            "cmp r0, r2",
            "movlt r0, r2",
            "cmp ip, r3",
            "movge ip, r3",
            "cmp ip, r0",
            "str ip, [sp, 0x1c]",
            "blt 0x95ec",
            "mov r4, r0",
            "movw sb, 0x1014",
            "ldr r3, [sp, 0x20]",
            "cmn r3, 7",
            "ldr r3, [sp, 0xc]",
            "movweq r0, 0x1c4c",
            "ldrne r2, [sp, 0x20]",
            "ldreq r0, [r7, r0]",
            "strne r2, [sp, 0x24]",
            "streq r0, [sp, 0x24]",
            "cmp r3, 0",
            "ble 0x95dc",
            "mov r6, 0",
            "mov r8, r7",
            "mov r5, r6",
            "b 0x9544",
            "ldr r7, [sl, r1, lsl 3]",
            "ldr r2, [sl, r2]",
            "cmp r4, r3",
            "movge r1, 0",
            "movlt r1, 1",
            "cmp r4, fp",
            "movlt r1, 0",
            "cmp r1, 0",
            "bne 0x94bc",
            "ldr r0, [sp, 0x1c]",
            "cmp r4, fp",
            "movle r1, 0",
            "movgt r1, 1",
            "cmp r4, r0",
            "movne r1, 0",
            "cmp r1, 0",
            "beq 0x9534",
            "cmp r3, r4",
            "blt 0x9534",
            "rsb r2, r7, r2",
            "rsb r0, fp, r4",
            "mul r0, r0, r2",
            "str r3, [sp, 8]",
            "bl fcn.00014a90",
            "ldr r3, [sp, 8]",
            "mov r2, r0",
            "str r2, [sp, 8]",
            "rsb r0, fp, r3",
            "bl fcn.00014a90",
            "ldr r2, [sp, 8]",
            "mov r1, r0",
            "mov r0, r2",
            "bl fcn.00014cd4",
            "bl fcn.000141a0",
            "mov r3, 0",
            "mov r2, 0",
            "movt r3, 0x3fe0",
            "bl fcn.00013ea8",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, r7",
            "bl fcn.00014178",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.00013ea8",
            "bl fcn.000147f0",
            "ldr r2, [r8, sb]",
            "str r0, [r2, r6, lsl 2]",
            "add r6, r6, 1",
            "ldr r3, [sp, 0xc]",
            "add r5, r5, 1",
            "cmp r5, r3",
            "beq 0x9614",
            "cmp r5, 0",
            "ldreq r0, [sp, 0xc]",
            "subne r1, r5, 1",
            "lslne r2, r5, 3",
            "moveq r2, r5",
            "subeq r1, r0, 1",
            "add r0, sl, r2",
            "lsl ip, r1, 3",
            "ldr r3, [r0, 4]",
            "add r7, sl, ip",
            "ldr fp, [r7, 4]",
            "cmp fp, r3",
            "blt 0x9470",
            "ble 0x9534",
            "mov r1, fp",
            "ldr r2, [sl, ip]",
            "mov fp, r3",
            "ldr r7, [r0]",
            "mov r3, r1",
            "b 0x9478",
            "cmp r6, 0",
            "ble 0x95dc",
            "mov fp, sl",
            "ldr sl, [sp, 0x24]",
            "mov r8, 4",
            "mov r5, 0",
            "ldr r3, [r7, sb]",
            "mov r0, r7",
            "mov r2, r4",
            "ldr r1, [r3, r5, lsl 2]",
            "add r5, r5, 2",
            "ldr r3, [r3, r8]",
            "add r8, r8, 8",
            "stm sp, {r4, sl}",
            "bl rsym.gdImageLine",
            "cmp r5, r6",
            "blt 0x95ac",
            "mov sl, fp",
            "ldr r0, [sp, 0x1c]",
            "add r4, r4, 1",
            "cmp r0, r4",
            "bge 0x9438",
            "ldr r2, [sp, 0x20]",
            "cmn r2, 7",
            "bne 0x937c",
            "mov r0, r7",
            "mov r1, sl",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x20]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b rsym.gdImagePolygon",
            "cmp r6, 1",
            "mov r7, r8",
            "ble 0x9594",
            "ldr lr, [r8, sb]",
            "mov r8, 1",
            "add r5, lr, 4",
            "mov r3, r5",
            "ldr ip, [r5], 4",
            "mov r1, r8",
            "ldr r2, [r5, -8]",
            "cmp r2, ip",
            "ble 0x9674",
            "sub r0, r5, 8",
            "mov r3, r8",
            "b 0x965c",
            "ldr r2, [r0, -4]!",
            "cmp ip, r2",
            "bge 0x9670",
            "sub r3, r3, 1",
            "str r2, [lr, r1, lsl 2]",
            "cmp r3, 0",
            "mov r1, r3",
            "bgt 0x9650",
            "add r3, lr, r3, lsl 2",
            "add r8, r8, 1",
            "str ip, [r3]",
            "cmp r8, r6",
            "bne 0x962c",
            "b 0x959c",
            "ldr r1, [r7, r4]",
            "sub r4, r4, 4",
            "ldr r0, [r7, r4]",
            "lsl r1, r1, 2",
            "bl rsym.gdRealloc",
            "cmp r0, 0",
            "str r0, [r7, r4]",
            "bne 0x93bc",
            "b 0x937c"
        ]
    },
    "fcn.00014cd4": {
        "function_address": "0x00014cd4",
        "instructions": [
            "bgt 0x14cb8",
            "cmn r2, 0x19",
            "andle r0, r0, 0x80000000",
            "bxle lr",
            "rsb r2, r2, 0",
            "lsls r1, r0, 1",
            "lsr r1, r1, r2",
            "rsb r2, r2, 0x20",
            "lsl ip, r0, r2",
            "rrxs r0, r1",
            "adc r0, r0, 0",
            "orrs r3, r3, ip, lsl 1",
            "biceq r0, r0, ip, lsr 31",
            "bx lr",
            "eor r0, r0, r1",
            "and r0, r0, 0x80000000",
            "bx lr",
            "eor r0, r0, r1",
            "and r0, r0, 0x80000000",
            "orr r0, r0, 0x7f000000",
            "orr r0, r0, 0x800000",
            "bx lr",
            "orr r0, r0, 0x7f000000",
            "orr r0, r0, 0xc00000",
            "bx lr",
            "mov ip, 0xff",
            "ands r2, ip, r0, lsr 23",
            "andsne r3, ip, r1, lsr 23",
            "teqne r2, ip",
            "teqne r3, ip",
            "beq 0x14dd8",
            "sub r2, r2, r3",
            "eor ip, r0, r1",
            "lsls r1, r1, 9",
            "lsl r0, r0, 9",
            "beq 0x14d74",
            "mov r3, 0x10000000",
            "orr r1, r3, r1, lsr 4",
            "orr r3, r3, r0, lsr 4",
            "and r0, ip, 0x80000000",
            "cmp r3, r1",
            "lsllo r3, r3, 1",
            "adc r2, r2, 0x7d",
            "mov ip, 0x800000",
            "cmp r3, r1",
            "subhs r3, r3, r1",
            "orrhs r0, r0, ip",
            "cmp r3, r1, lsr 1",
            "subhs r3, r3, r1, lsr 1",
            "orrhs r0, r0, ip, lsr 1",
            "cmp r3, r1, lsr 2",
            "subhs r3, r3, r1, lsr 2",
            "orrhs r0, r0, ip, lsr 2",
            "cmp r3, r1, lsr 3",
            "subhs r3, r3, r1, lsr 3",
            "orrhs r0, r0, ip, lsr 3",
            "lsls r3, r3, 4",
            "lsrsne ip, ip, 4",
            "bne 0x14d20",
            "cmp r2, 0xfd",
            "bhi 0x14bdc",
            "cmp r3, r1",
            "adc r0, r0, r2, lsl 23",
            "biceq r0, r0, 1",
            "bx lr",
            "and ip, ip, 0x80000000",
            "orr r0, ip, r0, lsr 9",
            "adds r2, r2, 0x7f",
            "rsbsgt r3, r2, 0xff",
            "orrgt r0, r0, r2, lsl 23",
            "bxgt lr",
            "orr r0, r0, 0x800000",
            "mov r3, 0",
            "subs r2, r2, 1",
            "b 0x14bdc",
            "teq r2, 0",
            "and ip, r0, 0x80000000",
            "lsleq r0, r0, 1",
            "tsteq r0, 0x800000",
            "subeq r2, r2, 1",
            "beq 0x14da4",
            "orr r0, r0, ip",
            "teq r3, 0",
            "and ip, r1, 0x80000000",
            "lsleq r1, r1, 1",
            "tsteq r1, 0x800000",
            "subeq r3, r3, 1",
            "beq 0x14dc0",
            "orr r1, r1, ip",
            "b 0x14cec",
            "and r3, ip, r1, lsr 23",
            "teq r2, ip",
            "bne 0x14dfc",
            "lsls r2, r0, 9",
            "bne 0x14cc8",
            "teq r3, ip",
            "bne 0x14cb4",
            "mov r0, r1",
            "b 0x14cc8",
            "teq r3, ip",
            "bne 0x14e14",
            "lsls r3, r1, 9",
            "beq 0x14c6c",
            "mov r0, r1",
            "b 0x14cc8",
            "bics ip, r0, 0x80000000",
            "bicsne ip, r1, 0x80000000",
            "bne 0x14d9c",
            "bics r2, r0, 0x80000000",
            "bne 0x14cb4",
            "bics r3, r1, 0x80000000",
            "bne 0x14c6c",
            "b 0x14cc8"
        ]
    },
    "sym.gdImageCreateFromGd2Ctx": {
        "function_address": "0x0000be24",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x7c",
            "add ip, sp, 0x60",
            "mov r4, 0",
            "add r1, sp, 0x74",
            "add r2, sp, 0x70",
            "str ip, [sp]",
            "add ip, sp, 0x5c",
            "str ip, [sp, 4]",
            "add ip, sp, 0x6c",
            "str ip, [sp, 8]",
            "add ip, sp, 0x68",
            "str ip, [sp, 0xc]",
            "add r3, sp, 0x64",
            "add ip, sp, 0x58",
            "str r0, [sp, 0x30]",
            "str r4, [sp, 0x58]",
            "str ip, [sp, 0x10]",
            "bl fcn.0000bbc4",
            "cmp r0, 1",
            "beq 0xbe84",
            "mov r0, r4",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [sp, 0x5c]",
            "sub r3, r3, 3",
            "cmp r3, 1",
            "bls 0xc2c0",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "bl rsym.gdImageCreate",
            "mov r4, r0",
            "cmp r4, 0",
            "beq 0xbe78",
            "ldr r2, [sp, 0x60]",
            "mov r1, r4",
            "ldr r0, [sp, 0x30]",
            "cmp r2, 2",
            "movne r2, 0",
            "moveq r2, 1",
            "bl rsym._gdGetColors",
            "subs r3, r0, 0",
            "beq 0xc2ec",
            "movw r3, 0x1c38",
            "ldr r0, [sp, 0x5c]",
            "ldr r2, [r4, r3]",
            "ldr r1, [sp, 0x68]",
            "ldr r3, [sp, 0x6c]",
            "cmp r2, 0",
            "moveq r2, 1",
            "movne r2, 4",
            "cmp r0, 2",
            "cmpne r0, 4",
            "movne r0, 0",
            "moveq r0, 1",
            "strne r0, [sp, 0x44]",
            "movne r5, r0",
            "strne r0, [sp, 0x48]",
            "bne 0xbf88",
            "mul r3, r3, r1",
            "cmp r3, 0",
            "movle r6, 0",
            "ble 0xbf48",
            "ldr r1, [sp, 0x58]",
            "mov r6, 0",
            "mov r0, r6",
            "add ip, r1, r0, lsl 3",
            "add r0, r0, 1",
            "ldr ip, [ip, 4]",
            "cmp r6, ip",
            "movlt r6, ip",
            "cmp r0, r3",
            "bne 0xbf2c",
            "ldr r3, [sp, 0x64]",
            "mov r1, 1",
            "mul r3, r3, r3",
            "mul r3, r2, r3",
            "mov r0, r3",
            "str r3, [sp, 0x48]",
            "bl rsym.gdCalloc",
            "subs r5, r0, 0",
            "beq 0xc2e0",
            "mov r1, 1",
            "add r0, r6, 1",
            "bl rsym.gdCalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x44]",
            "ldrne r1, [sp, 0x68]",
            "beq 0xc2d4",
            "cmp r1, 0",
            "ble 0xc13c",
            "ldr r3, [sp, 0x6c]",
            "mov r0, 0",
            "mov r8, r0",
            "movw r6, 0x1c38",
            "add r2, sp, 0x50",
            "add lr, sp, 0x54",
            "str r0, [sp, 0x40]",
            "str r0, [sp, 0x3c]",
            "str r2, [sp, 0x34]",
            "str lr, [sp, 0x4c]",
            "cmp r3, 0",
            "ble 0xc128",
            "ldr r0, [sp, 0x3c]",
            "movw ip, 0x1c3c",
            "mov fp, r5",
            "mov r2, 0",
            "str r2, [sp, 0x20]",
            "lsl r0, r0, 3",
            "str r0, [sp, 0x38]",
            "ldr r3, [sp, 0x5c]",
            "ldr r5, [sp, 0x64]",
            "ldr r7, [r4, 8]",
            "cmp r3, 2",
            "cmpne r3, 4",
            "beq 0xc228",
            "ldr lr, [sp, 0x40]",
            "mul r3, r5, lr",
            "add r5, r3, r5",
            "cmp r5, r7",
            "movge r5, r7",
            "cmp r5, r3",
            "str r5, [sp, 0x24]",
            "ble 0xc0f0",
            "lsl sl, r3, 2",
            "str r3, [sp, 0x1c]",
            "ldr r2, [sp, 0x64]",
            "ldr r0, [sp, 0x20]",
            "ldr r1, [r4, 4]",
            "ldr r3, [sp, 0x5c]",
            "mul r5, r2, r0",
            "add sb, r5, r2",
            "cmp sb, r1",
            "movge sb, r1",
            "cmp r3, 4",
            "cmpne r3, 2",
            "bne 0xc158",
            "cmp sb, r5",
            "lslgt r3, r5, 2",
            "bgt 0xc098",
            "b 0xc0d4",
            "ldrb lr, [fp, r0]",
            "add r5, r5, 1",
            "ldrb r7, [fp, r8]",
            "add r8, r2, 1",
            "ldrb r1, [fp, r1]",
            "cmp sb, r5",
            "ldr r0, [r4, ip]",
            "lsl lr, lr, 0x10",
            "ldrb r2, [fp, r2]",
            "add lr, lr, r7, lsl 24",
            "ldr r0, [r0, sl]",
            "add lr, lr, r1, lsl 8",
            "add lr, lr, r2",
            "str lr, [r0, r3]",
            "add r3, r3, 4",
            "ble 0xc0d4",
            "ldr lr, [r4, r6]",
            "add r0, r8, 1",
            "add r1, r0, 1",
            "add r2, r1, 1",
            "cmp lr, 0",
            "bne 0xc058",
            "ldr r2, [r4]",
            "add r3, r3, 4",
            "ldrb r1, [fp, r8]",
            "add r8, r8, 1",
            "ldr r2, [r2, sl]",
            "strb r1, [r2, r5]",
            "add r5, r5, 1",
            "cmp sb, r5",
            "bgt 0xc098",
            "ldr r2, [sp, 0x1c]",
            "add sl, sl, 4",
            "ldr r3, [sp, 0x24]",
            "add r2, r2, 1",
            "cmp r3, r2",
            "str r2, [sp, 0x1c]",
            "bgt 0xc01c",
            "ldr lr, [sp, 0x20]",
            "ldr r3, [sp, 0x6c]",
            "ldr r0, [sp, 0x3c]",
            "ldr r2, [sp, 0x38]",
            "add lr, lr, 1",
            "cmp r3, lr",
            "str lr, [sp, 0x20]",
            "add r0, r0, 1",
            "add r2, r2, 8",
            "str r0, [sp, 0x3c]",
            "str r2, [sp, 0x38]",
            "bgt 0xbfdc",
            "ldr r1, [sp, 0x68]",
            "mov r5, fp",
            "ldr lr, [sp, 0x40]",
            "add lr, lr, 1",
            "cmp r1, lr",
            "str lr, [sp, 0x40]",
            "bgt 0xbfb8",
            "mov r0, r5",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x44]",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x58]",
            "bl rsym.gdFree",
            "b 0xbe78",
            "cmp sb, r5",
            "ble 0xc0d4",
            "str fp, [sp, 0x28]",
            "lsl r7, r5, 2",
            "str r8, [sp, 0x2c]",
            "ldr fp, [sp, 0x34]",
            "ldr r8, [sp, 0x30]",
            "b 0xc1b0",
            "ldr r3, [r4, ip]",
            "ldr r0, [r3, sl]",
            "str ip, [sp, 0x18]",
            "add r0, r0, r7",
            "bl rsym.gdGetInt",
            "cmp r0, 0",
            "ldr ip, [sp, 0x18]",
            "ldreq r3, [r4, ip]",
            "ldreq r3, [r3, sl]",
            "streq r0, [r3, r7]",
            "add r5, r5, 1",
            "add r7, r7, 4",
            "cmp sb, r5",
            "ble 0xc200",
            "ldr r3, [r4, r6]",
            "mov r1, r8",
            "mov r0, fp",
            "cmp r3, 0",
            "bne 0xc178",
            "mov r1, r8",
            "str ip, [sp, 0x18]",
            "bl rsym.gdGetByte",
            "ldr r2, [r4]",
            "cmp r0, 0",
            "mov r3, r0",
            "ldrbne r3, [sp, 0x50]",
            "streq r0, [sp, 0x50]",
            "add r7, r7, 4",
            "ldr r2, [r2, sl]",
            "ldr ip, [sp, 0x18]",
            "strb r3, [r2, r5]",
            "add r5, r5, 1",
            "cmp sb, r5",
            "bgt 0xc1b0",
            "ldr r2, [sp, 0x1c]",
            "add sl, sl, 4",
            "ldr r3, [sp, 0x24]",
            "ldr fp, [sp, 0x28]",
            "add r2, r2, 1",
            "ldr r8, [sp, 0x2c]",
            "cmp r3, r2",
            "str r2, [sp, 0x1c]",
            "bgt 0xc01c",
            "b 0xc0f0",
            "ldr r2, [sp, 0x58]",
            "mov r3, fp",
            "ldr r8, [sp, 0x38]",
            "ldr r0, [sp, 0x48]",
            "ldr r1, [sp, 0x44]",
            "add lr, r2, r8",
            "str r0, [sp, 0x54]",
            "ldr r0, [r2, r8]",
            "ldr r2, [lr, 4]",
            "ldr r8, [sp, 0x30]",
            "ldr lr, [sp, 0x4c]",
            "str ip, [sp, 0x18]",
            "str r8, [sp, 4]",
            "str lr, [sp]",
            "bl fcn.0000bdb0",
            "cmp r0, 0",
            "ldr ip, [sp, 0x18]",
            "movne r8, 0",
            "bne 0xbff4",
            "mov r0, r4",
            "mov r5, fp",
            "bl rsym.gdImageDestroy",
            "cmp fp, 0",
            "beq 0xc290",
            "mov r0, r5",
            "bl rsym.gdFree",
            "ldr r3, [sp, 0x44]",
            "cmp r3, 0",
            "beq 0xc2a4",
            "mov r0, r3",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x58]",
            "cmp r0, 0",
            "moveq r4, r0",
            "beq 0xbe78",
            "mov r4, 0",
            "bl rsym.gdFree",
            "b 0xbe78",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "bl rsym.gdImageCreateTrueColor",
            "mov r4, r0",
            "b 0xbea4",
            "mov r0, r4",
            "bl rsym.gdImageDestroy",
            "b 0xc288",
            "mov r0, r4",
            "bl rsym.gdImageDestroy",
            "b 0xc2a4",
            "mov r0, r4",
            "mov r4, r3",
            "bl rsym.gdImageDestroy",
            "b 0xbe78"
        ]
    },
    "sym.gdImageString16": {
        "function_address": "0x000082f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "ldr r8, [sp, 0x30]",
            "mov sl, r3",
            "mov sb, r0",
            "mov r7, r1",
            "mov r4, r2",
            "ldr fp, [sp, 0x34]",
            "ldrh r3, [r8]",
            "cmp r3, 0",
            "beq 0x836c",
            "mov r6, 0",
            "mov r3, r8",
            "ldrh r5, [r3, 2]!",
            "add r6, r6, 1",
            "cmp r5, 0",
            "bne 0x8328",
            "ldrh ip, [r8], 2",
            "mov r2, r4",
            "mov r3, sl",
            "mov r0, sb",
            "mov r1, r7",
            "str fp, [sp, 4]",
            "str ip, [sp]",
            "add r5, r5, 1",
            "bl rsym.gdImageChar",
            "ldr r3, [r7, 8]",
            "cmp r5, r6",
            "add r4, r4, r3",
            "blt 0x8338",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdImageChar": {
        "function_address": "0x000081fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "ldr ip, [sp, 0x30]",
            "mov sb, r0",
            "mov r7, r2",
            "ldr r1, [r1, 4]",
            "str r3, [sp]",
            "ldr fp, [sp, 0x34]",
            "cmp r1, ip",
            "bgt 0x82ec",
            "ldr r3, [r6]",
            "add r3, r1, r3",
            "cmp ip, r3",
            "bge 0x82ec",
            "ldr r2, [r6, 0xc]",
            "rsb r1, r1, ip",
            "ldr r3, [r6, 8]",
            "ldr ip, [sp]",
            "add r0, ip, r2",
            "cmp ip, r0",
            "mul r0, r2, r3",
            "movlt sl, ip",
            "movlt r8, 0",
            "mul r1, r1, r0",
            "str r1, [sp, 4]",
            "bge 0x82ec",
            "add r1, r3, r7",
            "cmp r7, r1",
            "bge 0x82d4",
            "ldr r5, [sp, 4]",
            "mov r4, r7",
            "b 0x8290",
            "add r4, r4, 1",
            "add r2, r7, r3",
            "cmp r2, r4",
            "ble 0x82d0",
            "ldr r2, [r6, 0x10]",
            "mla r2, r8, r3, r2",
            "ldrsb r2, [r2, r5]",
            "add r5, r5, 1",
            "cmp r2, 0",
            "beq 0x8280",
            "mov r1, r4",
            "mov r2, sl",
            "mov r3, fp",
            "mov r0, sb",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r6, 8]",
            "add r4, r4, 1",
            "add r2, r7, r3",
            "cmp r2, r4",
            "bgt 0x8290",
            "ldr r2, [r6, 0xc]",
            "ldr r0, [sp]",
            "add sl, sl, 1",
            "add r1, r0, r2",
            "cmp r1, sl",
            "addgt r8, r8, 1",
            "bgt 0x8268",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.gdImageWBMPPtr": {
        "function_address": "0x00012a3c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "mov r7, r2",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mov r1, r7",
            "mov r2, r4",
            "mov r0, r6",
            "bl rsym.gdImageWBMPCtx",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageCreateFromXbm": {
        "function_address": "0x000056d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xcc",
            "mov r5, r0",
            "add r7, sp, 0x1c",
            "mov r0, r7",
            "mov r1, 0xa0",
            "ldr r4, [0x000059f0]",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "subs r6, r0, 0",
            "add r4, pc, r4",
            "bne 0x570c",
            "mov r0, r6",
            "add sp, sp, 0xcc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r7",
            "mov r1, 0x20",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "beq 0x5700",
            "add r0, r6, 1",
            "mov r1, 0x20",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "beq 0x5700",
            "add r0, r6, 1",
            "bl sym.imp.atoi",
            "subs r6, r0, 0",
            "beq 0x5700",
            "mov r0, r7",
            "mov r1, 0xa0",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0x5764",
            "mov r6, r0",
            "b 0x5700",
            "mov r0, r7",
            "mov r1, 0x20",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x575c",
            "add r0, r0, 1",
            "mov r1, 0x20",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x575c",
            "add r0, r0, 1",
            "bl sym.imp.atoi",
            "subs r8, r0, 0",
            "moveq r6, r8",
            "beq 0x5700",
            "mov r0, r7",
            "mov r1, 0xa0",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x575c",
            "mul r3, r6, r8",
            "mov r0, r6",
            "mov r1, r8",
            "cmp r3, 0",
            "add r2, r3, 7",
            "movlt r3, r2",
            "asr r3, r3, 3",
            "str r3, [sp, 4]",
            "bl rsym.gdImageCreate",
            "subs r6, r0, 0",
            "beq 0x5700",
            "mov r1, 0xff",
            "mov r0, r6",
            "mov r2, r1",
            "mov r3, r1",
            "bl rsym.gdImageColorAllocate",
            "mov r1, 0",
            "mov r0, r6",
            "mov r3, r1",
            "mov r2, r1",
            "bl rsym.gdImageColorAllocate",
            "add r3, sp, 0xc4",
            "mov r7, 0",
            "str r3, [sp, 0xc]",
            "mov sl, r7",
            "ldr r3, [0x000059f4]",
            "mov fp, r7",
            "mov sb, r4",
            "add r3, r4, r3",
            "str r3, [sp, 0x10]",
            "add r3, sp, 0xc0",
            "str r3, [sp, 0x14]",
            "ldr r3, [sp, 4]",
            "cmp fp, r3",
            "bgt 0x5930",
            "ldr r3, [r5, 0x4c]",
            "cmp r3, 0",
            "beq 0x5974",
            "ldr r1, [r5, 0x10]",
            "ldr r0, [r5, 0x18]",
            "mov r2, r1",
            "cmp r1, r0",
            "ldrblo r0, [r2], 1",
            "strlo r2, [r5, 0x10]",
            "bhs 0x595c",
            "cmp r0, 0x78",
            "bne 0x5848",
            "cmp r3, 0",
            "beq 0x59e4",
            "ldr r2, [r5, 0x10]",
            "ldr r1, [r5, 0x18]",
            "cmp r2, r1",
            "ldrblo r0, [r2], 1",
            "strlo r2, [r5, 0x10]",
            "bhs 0x59cc",
            "cmp r3, 0",
            "strb r0, [sp, 0xc4]",
            "beq 0x59bc",
            "ldr r2, [r5, 0x10]",
            "ldr r3, [r5, 0x18]",
            "cmp r2, r3",
            "ldrblo r3, [r2], 1",
            "strlo r2, [r5, 0x10]",
            "bhs 0x5980",
            "strb r3, [sp, 0xc5]",
            "mov r8, 1",
            "mov r3, 0",
            "ldr r0, [sp, 0xc]",
            "strb r3, [sp, 0xc6]",
            "add r3, sl, 8",
            "ldr r1, [sp, 0x10]",
            "ldr r2, [sp, 0x14]",
            "str r3, [sp, 8]",
            "bl sym.imp.sscanf",
            "ldr r3, [sp, 0xc0]",
            "mov r1, sl",
            "mov r0, r6",
            "mov r2, r7",
            "add r4, sl, 1",
            "tst r8, r3",
            "mov sl, r4",
            "moveq r3, 0",
            "movne r3, 1",
            "lsl r8, r8, 1",
            "bl rsym.gdImageSetPixel",
            "ldr r3, [r6, 4]",
            "cmp r3, r4",
            "beq 0x59a4",
            "ldr r3, [sp, 8]",
            "cmp r4, r3",
            "bne 0x58e0",
            "add fp, fp, 1",
            "mov sl, r4",
            "b 0x5838",
            "ldr r3, [0x000059f8]",
            "mov r1, 1",
            "ldr r0, [0x000059fc]",
            "mov r2, 0x24",
            "mov r4, sb",
            "mov r6, 0",
            "ldr r3, [sb, r3]",
            "add r0, sb, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0x5700",
            "mov r0, r5",
            "bl sym.imp.__fgetc_unlocked",
            "cmn r0, 1",
            "beq 0x5994",
            "ldr r3, [r5, 0x4c]",
            "b 0x586c",
            "mov r0, r5",
            "bl sym.imp.fgetc",
            "b 0x5964",
            "mov r0, r5",
            "bl sym.imp.__fgetc_unlocked",
            "mov r3, r0",
            "cmn r3, 1",
            "bne 0x58b8",
            "mov r0, r6",
            "mov r6, 0",
            "bl rsym.gdImageDestroy",
            "b 0x5700",
            "ldr r3, [r6, 8]",
            "add r7, r7, 1",
            "cmp r3, r7",
            "beq 0x5700",
            "mov r4, 0",
            "b 0x5924",
            "mov r0, r5",
            "bl sym.imp.fgetc",
            "mov r3, r0",
            "b 0x598c",
            "mov r0, r5",
            "bl sym.imp.__fgetc_unlocked",
            "cmn r0, 1",
            "beq 0x5994",
            "ldr r3, [r5, 0x4c]",
            "b 0x5894",
            "mov r0, r5",
            "bl sym.imp.fgetc",
            "b 0x59d4"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x0000309c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xc8]!"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x00003618",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd20]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x00003564",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd98]!"
        ]
    },
    "sym.imp.sscanf": {
        "function_address": "0x0000339c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xec8]!"
        ]
    },
    "sym.imp.__fgetc_unlocked": {
        "function_address": "0x000031f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfe0]!"
        ]
    },
    "sym.imp.fgetc": {
        "function_address": "0x000034a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe18]!"
        ]
    },
    "sym.gdImageColorClosestHWB": {
        "function_address": "0x00004168",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "movw r0, 0x1c38",
            "sub sp, sp, 0x4c",
            "ldr r5, [r8, r0]",
            "stm sp, {r1, r2}",
            "cmp r5, 0",
            "str r3, [sp, 8]",
            "bne 0x4414",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "mvnle r1, 0",
            "strle r1, [sp, 0x14]",
            "ble 0x43e4",
            "mvn r1, 0",
            "add r2, sp, 0x24",
            "str r1, [sp, 0x14]",
            "add r1, sp, 0x18",
            "mov r7, 0",
            "add r4, r8, 0x410",
            "mov r6, 1",
            "str r2, [sp, 0xc]",
            "str r1, [sp, 0x10]",
            "b 0x41d8",
            "add r5, r5, 1",
            "add r4, r4, 4",
            "cmp r3, r5",
            "ble 0x43e4",
            "ldr r2, [r4, 0x800]",
            "cmp r2, 0",
            "bne 0x41c8",
            "ldr r0, [r4, -0x400]",
            "ldr sl, [r4]",
            "bl fcn.00014178",
            "mov r3, 0xe000",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "ldr sb, [r4, 0x400]",
            "str r0, [sp, 0x3c]",
            "mov r0, sl",
            "bl fcn.00014178",
            "mov r3, 0xe000",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "str r0, [sp, 0x40]",
            "mov r0, sb",
            "bl fcn.00014178",
            "mov r3, 0xe000",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "str r0, [sp, 0x44]",
            "ldr r0, [sp]",
            "bl fcn.00014178",
            "mov r3, 0xe000",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "str r0, [sp, 0x30]",
            "ldr r0, [sp, 4]",
            "bl fcn.00014178",
            "mov r3, 0xe000",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "str r0, [sp, 0x34]",
            "ldr r0, [sp, 8]",
            "bl fcn.00014178",
            "mov r3, 0xe000",
            "mov r2, 0",
            "movt r3, 0x406f",
            "bl fcn.000144c0",
            "bl fcn.0001484c",
            "add r2, sp, 0x3c",
            "str r0, [sp, 0x38]",
            "ldr r3, [sp, 0xc]",
            "ldm r2, {r0, r1, r2}",
            "bl fcn.00003780",
            "add r2, sp, 0x30",
            "ldr r3, [sp, 0x10]",
            "ldm r2, {r0, r1, r2}",
            "bl fcn.00003780",
            "ldr sl, [sp, 0x24]",
            "mov r1, 0",
            "movt r1, 0xbf80",
            "mov r0, sl",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "bne 0x43f8",
            "ldr sb, [sp, 0x18]",
            "mov r1, 0",
            "movt r1, 0xbf80",
            "mov r0, sb",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "bne 0x43f8",
            "mov r1, sb",
            "mov r0, sl",
            "bl fcn.000148f4",
            "mov r1, 0",
            "bic sl, r0, 0x80000000",
            "movt r1, 0x4040",
            "mov r0, sl",
            "bl fcn.00014f1c",
            "cmp r0, 0",
            "beq 0x4400",
            "mov r0, 0",
            "mov r1, sl",
            "movt r0, 0x40c0",
            "bl fcn.000148f4",
            "mov r1, r0",
            "bl fcn.00014b3c",
            "mov fp, r0",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [sp, 0x28]",
            "bl fcn.000148f4",
            "ldr r1, [sp, 0x20]",
            "mov sb, r0",
            "ldr r0, [sp, 0x2c]",
            "bl fcn.000148f4",
            "mov r1, sb",
            "mov sl, r0",
            "mov r0, sb",
            "bl fcn.00014b3c",
            "mov r1, r0",
            "mov r0, fp",
            "bl fcn.000148f8",
            "mov r1, sl",
            "mov sb, r0",
            "mov r0, sl",
            "bl fcn.00014b3c",
            "mov r1, r0",
            "mov r0, sb",
            "bl fcn.000148f8",
            "cmp r6, 0",
            "mov sl, r0",
            "movne r7, r0",
            "strne r5, [sp, 0x14]",
            "movne r6, 0",
            "bne 0x43f0",
            "mov r0, r7",
            "mov r1, sl",
            "bl fcn.00014f1c",
            "cmp r0, 0",
            "beq 0x43f0",
            "ldr r3, [r8, 0xc]",
            "mov r7, sl",
            "str r5, [sp, 0x14]",
            "add r5, r5, 1",
            "add r4, r4, 4",
            "cmp r3, r5",
            "bgt 0x41d8",
            "ldr r0, [sp, 0x14]",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r8, 0xc]",
            "b 0x41c8",
            "mov fp, 0",
            "b 0x4348",
            "mov r0, sl",
            "mov r1, sl",
            "bl fcn.00014b3c",
            "mov fp, r0",
            "b 0x4348",
            "ldmib sp, {r1, r2}",
            "add r3, r2, r1, lsl 8",
            "ldr r2, [sp]",
            "add r3, r3, r2, lsl 16",
            "str r3, [sp, 0x14]",
            "b 0x43e4"
        ]
    },
    "fcn.00003780": {
        "function_address": "0x00003780",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x10",
            "add ip, sp, 4",
            "mov r4, r3",
            "stm ip, {r0, r1, r2}",
            "ldr r6, [sp, 4]",
            "ldr r7, [sp, 8]",
            "mov r0, r6",
            "ldr r8, [sp, 0xc]",
            "mov r1, r7",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "beq 0x3870",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "moveq r5, r8",
            "movne r5, r6",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "moveq sl, r7",
            "bne 0x38a0",
            "mov r1, sl",
            "mov r0, 0x3f800000",
            "bl fcn.000148f4",
            "mov r1, sl",
            "mov sb, r0",
            "mov r0, r5",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "bne 0x3928",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "beq 0x38a8",
            "mov r1, r8",
            "mov r0, r7",
            "mov r6, 0",
            "bl fcn.000148f4",
            "movt r6, 0x4040",
            "mov r8, r0",
            "mov r1, r5",
            "mov r0, sl",
            "bl fcn.000148f4",
            "mov r1, r0",
            "mov r0, r8",
            "bl fcn.00014cd4",
            "mov r1, r0",
            "mov r0, r6",
            "bl fcn.000148f4",
            "str r5, [r4, 4]",
            "str r0, [r4]",
            "str sb, [r4, 8]",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "moveq r5, r8",
            "bne 0x3908",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "moveq sl, r6",
            "beq 0x37e4",
            "mov sl, r8",
            "b 0x37e4",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "bne 0x3940",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.000148f4",
            "mov r8, r0",
            "mov r1, r6",
            "mov r0, r5",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "movne r6, 0",
            "movtne r6, 0x4040",
            "bne 0x3834",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.00014ecc",
            "cmp r0, 0",
            "movne r6, 0",
            "moveq r6, 0x3f800000",
            "movtne r6, 0x40a0",
            "b 0x3834",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.00014ee0",
            "cmp r0, 0",
            "mov r5, r7",
            "moveq sl, r6",
            "beq 0x37e4",
            "b 0x38a0",
            "mov r3, 0",
            "str r5, [r4, 4]",
            "movt r3, 0xbf80",
            "str sb, [r4, 8]",
            "str r3, [r4]",
            "b 0x3864",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.000148f4",
            "mov r8, r0",
            "b 0x38cc"
        ]
    },
    "fcn.00014ecc": {
        "function_address": "0x00014ecc",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00014eb8",
            "moveq r0, 1",
            "movne r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "sym.gdImageOpenPolygon": {
        "function_address": "0x0000924c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r6, r2, 0",
            "sub sp, sp, 8",
            "mov r8, r0",
            "mov r4, r1",
            "mov r7, r3",
            "beq 0x92ac",
            "cmp r6, 1",
            "ldr r1, [r1]",
            "ldr r2, [r4, 4]",
            "ble 0x92ac",
            "mov r5, 1",
            "ldr ip, [r4, 0xc]",
            "mov r0, r8",
            "ldr r3, [r4, 8]",
            "add r5, r5, 1",
            "str r7, [sp, 4]",
            "str ip, [sp]",
            "bl rsym.gdImageLine",
            "cmp r6, r5",
            "ldr r1, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "add r4, r4, 8",
            "bgt 0x927c",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.freewbmp": {
        "function_address": "0x00013c24",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0xc]",
            "bl rsym.gdFree",
            "mov r0, r4",
            "pop {r4, lr}",
            "b rsym.gdFree"
        ]
    },
    "sym.gdImageFilledArc": {
        "function_address": "0x000096ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x54",
            "ldr ip, [sp, 0x7c]",
            "movw r7, 0x60b7",
            "movt r7, 0xb60b",
            "smull r6, r4, r7, ip",
            "ldr r5, [sp, 0x80]",
            "smull r6, r7, r7, r5",
            "add r4, r4, ip",
            "str r0, [sp, 0x24]",
            "asr sl, ip, 0x1f",
            "mov r6, 0x168",
            "add r7, r7, r5",
            "ldr r8, [0x00009a68]",
            "asr sb, r5, 0x1f",
            "rsb r4, sl, r4, asr 8",
            "str r2, [sp, 0xc]",
            "rsb r0, sb, r7, asr 8",
            "add r8, pc, r8",
            "mov fp, r1",
            "str r3, [sp, 0x10]",
            "mls r4, r6, r4, ip",
            "mls r0, r6, r0, r5",
            "cmp r4, r0",
            "beq 0x99e8",
            "cmp ip, r6",
            "movgt ip, r4",
            "cmp r5, 0x168",
            "movgt r5, r0",
            "cmp ip, 0",
            "bge 0x973c",
            "adds ip, ip, 0x168",
            "bmi 0x9728",
            "cmp r5, ip",
            "bge 0x9744",
            "add r5, r5, 0x168",
            "cmp r5, ip",
            "blt 0x9738",
            "cmp ip, r5",
            "beq 0x99f8",
            "cmp r5, ip",
            "blt 0x9a08",
            "movw r2, 0x60b7",
            "asr r1, ip, 0x1f",
            "movt r2, 0xb60b",
            "smull r6, r3, r2, ip",
            "add r3, r3, ip",
            "mov r2, 0x168",
            "rsb r3, r1, r3, asr 8",
            "str ip, [sp, 0x14]",
            "mls r3, r2, r3, ip",
            "ldr r2, [sp, 0x88]",
            "add ip, sp, 0x38",
            "ldr r0, [0x00009a6c]",
            "movw sb, 0x60b7",
            "ldr r1, [0x00009a70]",
            "movt sb, 0xb60b",
            "and r2, r2, 1",
            "str ip, [sp, 0x34]",
            "str r2, [sp, 0x20]",
            "mov r7, r5",
            "ldr r2, [r8, r0]",
            "str r1, [sp, 0x18]",
            "ldr r1, [r8, r1]",
            "ldr ip, [r2, r3, lsl 2]",
            "str r0, [sp, 0x1c]",
            "ldr r0, [sp, 0x10]",
            "ldr sl, [r1, r3, lsl 2]",
            "ldr r1, [sp, 0x78]",
            "ldr r6, [sp, 0x88]",
            "mul ip, ip, r0",
            "ldr r4, [sp, 0x14]",
            "mul sl, sl, r1",
            "and r6, r6, 2",
            "str r6, [sp, 0x28]",
            "add r3, ip, 0x7f0",
            "cmp ip, 0",
            "add r3, r3, 0xf",
            "add r2, sl, 0x7f0",
            "movlt ip, r3",
            "add r2, r2, 0xf",
            "cmp sl, 0",
            "movlt sl, r2",
            "ldr r2, [sp, 0xc]",
            "add ip, fp, ip, asr 11",
            "str ip, [sp, 0x30]",
            "add sl, r2, sl, asr 11",
            "str sl, [sp, 0x2c]",
            "b 0x9824",
            "ldr ip, [sp, 0x84]",
            "stm sp, {r6, ip}",
            "bl rsym.gdImageLine",
            "mov sl, r6",
            "mov ip, r5",
            "add r4, r4, 1",
            "smull r0, r3, sb, r4",
            "asr r2, r4, 0x1f",
            "cmp r4, r7",
            "add r3, r3, r4",
            "rsb r3, r2, r3, asr 8",
            "bgt 0x990c",
            "ldr r2, [sp, 0x1c]",
            "mov r0, 0x168",
            "ldr r6, [sp, 0x18]",
            "mls r3, r0, r3, r4",
            "ldr r0, [sp, 0x10]",
            "ldr r1, [r8, r2]",
            "ldr r2, [r8, r6]",
            "ldr r5, [r1, r3, lsl 2]",
            "ldr r6, [r2, r3, lsl 2]",
            "ldr r1, [sp, 0x78]",
            "mul r5, r5, r0",
            "mul r6, r6, r1",
            "add r2, r5, 0x7f0",
            "cmp r5, 0",
            "add r2, r2, 0xf",
            "add r3, r6, 0x7f0",
            "movlt r5, r2",
            "add r3, r3, 0xf",
            "cmp r6, 0",
            "movlt r6, r3",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0x14]",
            "add r5, fp, r5, asr 11",
            "cmp r4, r2",
            "add r6, r3, r6, asr 11",
            "streq r5, [sp, 0x30]",
            "streq r6, [sp, 0x2c]",
            "beq 0x981c",
            "ldr r0, [sp, 0x20]",
            "cmp r0, 0",
            "bne 0x981c",
            "ldr lr, [sp, 0x28]",
            "mov r1, ip",
            "ldr r0, [sp, 0x24]",
            "mov r2, sl",
            "mov r3, r5",
            "cmp lr, 0",
            "bne 0x9810",
            "ldr lr, [sp, 0xc]",
            "mov r2, 3",
            "ldr r0, [sp, 0x24]",
            "ldr r1, [sp, 0x34]",
            "ldr r3, [sp, 0x84]",
            "str ip, [sp, 0x38]",
            "str sl, [sp, 0x3c]",
            "str r5, [sp, 0x40]",
            "str r6, [sp, 0x44]",
            "str fp, [sp, 0x48]",
            "str lr, [sp, 0x4c]",
            "bl rsym.gdImageFilledPolygon",
            "b 0x981c",
            "mov r4, ip",
            "ldr r1, [sp, 0x20]",
            "cmp r1, 0",
            "beq 0x9994",
            "ldr r2, [sp, 0x88]",
            "tst r2, 2",
            "beq 0x9a2c",
            "tst r2, 4",
            "beq 0x9970",
            "ldr r6, [sp, 0x84]",
            "mov r1, fp",
            "ldr r0, [sp, 0x24]",
            "mov r3, r4",
            "ldr r2, [sp, 0xc]",
            "str sl, [sp]",
            "str r6, [sp, 4]",
            "bl rsym.gdImageLine",
            "ldr ip, [sp, 0x2c]",
            "mov r1, fp",
            "ldr r0, [sp, 0x24]",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x30]",
            "str ip, [sp]",
            "str r6, [sp, 4]",
            "bl rsym.gdImageLine",
            "ldr lr, [sp, 0x84]",
            "mov r3, r4",
            "ldr r0, [sp, 0x24]",
            "ldr r1, [sp, 0x30]",
            "ldr r2, [sp, 0x2c]",
            "stm sp, {sl, lr}",
            "bl rsym.gdImageLine",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [sp, 0x88]",
            "and r3, r0, 6",
            "cmp r3, 6",
            "bne 0x998c",
            "ldr r6, [sp, 0x84]",
            "mov r1, fp",
            "ldr r0, [sp, 0x24]",
            "mov r3, r4",
            "ldr r2, [sp, 0xc]",
            "str sl, [sp]",
            "str r6, [sp, 4]",
            "bl rsym.gdImageLine",
            "ldr ip, [sp, 0x2c]",
            "mov r1, fp",
            "ldr r0, [sp, 0x24]",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x30]",
            "str ip, [sp]",
            "str r6, [sp, 4]",
            "bl rsym.gdImageLine",
            "b 0x998c",
            "mov r3, 0",
            "mov r5, r6",
            "str r3, [sp, 0x14]",
            "b 0x9778",
            "mov r3, 0",
            "mov r5, 0x168",
            "str r3, [sp, 0x14]",
            "b 0x9778",
            "ldr r0, [sp, 0x88]",
            "mov ip, 0",
            "str ip, [sp, 0x2c]",
            "mov sl, ip",
            "str ip, [sp, 0x30]",
            "mov r4, ip",
            "and r0, r0, 1",
            "str r0, [sp, 0x20]",
            "b 0x9910",
            "ldr r6, [sp, 0x30]",
            "add r1, sp, 0x38",
            "ldr ip, [sp, 0x2c]",
            "mov r2, 3",
            "ldr lr, [sp, 0xc]",
            "ldr r0, [sp, 0x24]",
            "ldr r3, [sp, 0x84]",
            "str r6, [sp, 0x38]",
            "str ip, [sp, 0x3c]",
            "str r4, [sp, 0x40]",
            "str sl, [sp, 0x44]",
            "str fp, [sp, 0x48]",
            "str lr, [sp, 0x4c]",
            "bl rsym.gdImageFilledPolygon",
            "b 0x998c"
        ]
    },
    "rsym.gdImageFilledPolygon": {
        "function_address": "0x00003504",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xdd8]!"
        ]
    },
    "sym.gdImageCopy": {
        "function_address": "0x00006fcc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "movw r0, 0x1c38",
            "sub sp, sp, 0x420",
            "sub sp, sp, 4",
            "mov r4, r1",
            "ldr ip, [r7, r0]",
            "str r2, [sp, 0x10]",
            "str r3, [sp, 0x14]",
            "cmp ip, 0",
            "ldr r8, [sp, 0x450]",
            "beq 0x70ac",
            "ldr r3, [r1, r0]",
            "cmp r3, 0",
            "beq 0x71ac",
            "ldr r2, [sp, 0x454]",
            "cmp r2, 0",
            "ble 0x70a0",
            "mov fp, 0",
            "movw r6, 0x1010",
            "str fp, [sp, 8]",
            "mov sb, r7",
            "ldr fp, [sp, 0x448]",
            "cmp r8, 0",
            "ble 0x7088",
            "ldr r2, [sp, 8]",
            "mov r5, 0",
            "ldr r3, [sp, 0x44c]",
            "ldr lr, [sp, 0x14]",
            "add r7, r2, r3",
            "add sl, lr, r2",
            "add r1, r5, fp",
            "mov r2, r7",
            "mov r0, r4",
            "bl rsym.gdImageGetTrueColorPixel",
            "ldr ip, [r4, r6]",
            "mov r3, r0",
            "ldr r2, [sp, 0x10]",
            "mov r0, sb",
            "cmp ip, r3",
            "add r1, r5, r2",
            "add r5, r5, 1",
            "mov r2, sl",
            "beq 0x7080",
            "bl rsym.gdImageSetPixel",
            "cmp r8, r5",
            "bgt 0x7048",
            "ldr r3, [sp, 8]",
            "ldr r1, [sp, 0x454]",
            "add r3, r3, 1",
            "cmp r1, r3",
            "str r3, [sp, 8]",
            "bgt 0x7028",
            "add sp, sp, 0x24",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r2, sp, 0x20",
            "mvn r1, 0",
            "sub r3, r2, 4",
            "add r2, r2, 0x3fc",
            "str r1, [r3, 4]!",
            "cmp r3, r2",
            "bne 0x70bc",
            "ldr r2, [sp, 0x44c]",
            "ldr r1, [sp, 0x454]",
            "add r1, r1, r2",
            "cmp r2, r1",
            "str r1, [sp, 0x1c]",
            "bge 0x70a0",
            "ldr r3, [sp, 0x448]",
            "mov sb, r2",
            "movw sl, 0x1010",
            "movw fp, 0x1c38",
            "str r7, [sp, 8]",
            "add r8, r8, r3",
            "str r8, [sp, 0xc]",
            "ldr r2, [sp, 0x448]",
            "ldr r3, [sp, 0xc]",
            "cmp r2, r3",
            "bge 0x72d4",
            "ldr lr, [sp, 0x10]",
            "mov r5, r2",
            "add r6, lr, 1",
            "b 0x714c",
            "ldr r3, [r2, -0x400]",
            "cmn r3, 1",
            "beq 0x7278",
            "ldr r0, [sp, 8]",
            "mov r1, r8",
            "ldr r2, [sp, 0x14]",
            "bl rsym.gdImageSetPixel",
            "ldr r2, [sp, 0xc]",
            "add r5, r5, 1",
            "add r6, r6, 1",
            "cmp r2, r5",
            "ble 0x72d4",
            "mov r1, r5",
            "mov r2, sb",
            "mov r0, r4",
            "sub r8, r6, 1",
            "bl rsym.gdImageGetPixel",
            "ldr r3, [r4, sl]",
            "lsl r7, r0, 2",
            "add r1, sp, 0x420",
            "mov ip, r0",
            "add r2, r1, r7",
            "cmp r3, r0",
            "beq 0x7138",
            "ldr r3, [r4, fp]",
            "cmp r3, 0",
            "beq 0x711c",
            "ubfx lr, r0, 0x18, 7",
            "uxtb r3, ip",
            "ldr r0, [sp, 8]",
            "ubfx r1, ip, 0x10, 8",
            "ubfx r2, ip, 8, 8",
            "str lr, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "mov r3, r0",
            "b 0x7128",
            "ldr r1, [sp, 0x454]",
            "cmp r1, 0",
            "ble 0x70a0",
            "movw r6, 0x1010",
            "mov sl, r8",
            "str r3, [sp, 0xc]",
            "str r7, [sp, 8]",
            "cmp sl, 0",
            "ble 0x725c",
            "ldr r2, [sp, 0xc]",
            "mov r5, 0",
            "ldr r3, [sp, 0x44c]",
            "ldr lr, [sp, 0x14]",
            "add sb, r2, r3",
            "add fp, lr, r2",
            "ldr r2, [sp, 0x448]",
            "mov r0, r4",
            "add r1, r5, r2",
            "mov r2, sb",
            "bl rsym.gdImageGetPixel",
            "ldr r2, [r4, r6]",
            "add r3, r0, 0x600",
            "add r7, r0, 4",
            "add ip, r0, 0x204",
            "add r8, r0, 0x104",
            "add r3, r3, 0xe",
            "cmp r2, r0",
            "ldr r2, [sp, 0x10]",
            "ldr r0, [sp, 8]",
            "add r1, r5, r2",
            "add r5, r5, 1",
            "mov r2, fp",
            "beq 0x7254",
            "ldr lr, [r4, r7, lsl 2]",
            "ldr r7, [r4, r3, lsl 2]",
            "ldr ip, [r4, ip, lsl 2]",
            "ldr r3, [r4, r8, lsl 2]",
            "lsl lr, lr, 0x10",
            "add lr, lr, r7, lsl 24",
            "add lr, lr, ip",
            "add r3, lr, r3, lsl 8",
            "bl rsym.gdImageSetPixel",
            "cmp sl, r5",
            "bgt 0x71e8",
            "ldr r3, [sp, 0xc]",
            "ldr r1, [sp, 0x454]",
            "add r3, r3, 1",
            "cmp r1, r3",
            "str r3, [sp, 0xc]",
            "bgt 0x71c8",
            "b 0x70a0",
            "add r3, r0, 0x204",
            "add r2, r0, 4",
            "add lr, r0, 0x104",
            "str r3, [sp, 0x18]",
            "add r3, r0, 0x600",
            "ldr r0, [sp, 8]",
            "add r3, r3, 0xe",
            "cmp r0, r4",
            "moveq r0, ip",
            "beq 0x72c0",
            "ldr r1, [r4, r2, lsl 2]",
            "ldr r2, [r4, lr, lsl 2]",
            "ldr lr, [sp, 0x18]",
            "ldr ip, [r4, lr, lsl 2]",
            "ldr lr, [r4, r3, lsl 2]",
            "mov r3, ip",
            "str lr, [sp]",
            "bl rsym.gdImageColorResolveAlpha",
            "add r1, sp, 0x420",
            "mov r3, r0",
            "add r7, r1, r7",
            "str r0, [r7, -0x400]",
            "b 0x7128",
            "ldr r3, [sp, 0x1c]",
            "add sb, sb, 1",
            "cmp sb, r3",
            "bge 0x70a0",
            "ldr r1, [sp, 0x14]",
            "add r1, r1, 1",
            "str r1, [sp, 0x14]",
            "b 0x70fc"
        ]
    },
    "sym.gdNewDynamicCtxEx": {
        "function_address": "0x0000d044",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000d138]",
            "mov r0, 0x20",
            "mov r6, r1",
            "mov sl, r2",
            "bl rsym.gdMalloc",
            "subs r7, r0, 0",
            "add r4, pc, r4",
            "beq 0xd100",
            "mov r0, 0x18",
            "bl rsym.gdMalloc",
            "subs r8, r0, 0",
            "beq 0xd128",
            "cmp r6, 0",
            "strne r5, [r8, 4]",
            "strne r6, [r8]",
            "beq 0xd108",
            "mov sb, 1",
            "str r5, [r8, 8]",
            "str sb, [r8, 0xc]",
            "mov r0, r7",
            "ldr sb, [0x0000d13c]",
            "ldr r6, [0x0000d140]",
            "ldr ip, [0x0000d144]",
            "ldr r1, [0x0000d148]",
            "ldr r2, [0x0000d14c]",
            "add r6, r4, r6",
            "ldr r3, [0x0000d150]",
            "add ip, r4, ip",
            "ldr r5, [0x0000d154]",
            "add r1, r4, r1",
            "add r2, r4, r2",
            "str sl, [r8, 0x14]",
            "add r3, r4, r3",
            "add r5, r4, r5",
            "add r4, r4, sb",
            "mov sb, 0",
            "str sb, [r8, 0x10]",
            "str r8, [r7, 0x1c]",
            "str r6, [r7]",
            "stmib r7, {r1, ip}",
            "str r2, [r7, 0xc]",
            "str r3, [r7, 0x10]",
            "str r5, [r7, 0x14]",
            "str r4, [r7, 0x18]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "str r6, [r8, 4]",
            "mov r0, r5",
            "str r6, [r8, 0xc]",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [r8]",
            "streq r0, [r8, 8]",
            "bne 0xd08c",
            "mov r0, r7",
            "bl rsym.gdFree",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.gdImagePngPtr": {
        "function_address": "0x00010e08",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, 0x800",
            "mov r1, 0",
            "bl rsym.gdNewDynamicCtx",
            "mov r4, r0",
            "mvn r2, 0",
            "mov r0, r6",
            "mov r1, r4",
            "bl rsym.gdImagePngCtxEx",
            "mov r1, r5",
            "mov r0, r4",
            "bl rsym.gdDPExtractData",
            "ldr r3, [r4, 0x18]",
            "mov r5, r0",
            "mov r0, r4",
            "blx r3",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.gdImageGifAnimAdd": {
        "function_address": "0x0000f424",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x14",
            "mov r0, r1",
            "mov r7, r2",
            "mov r6, r3",
            "bl rsym.gdNewFileCtx",
            "ldr ip, [sp, 0x28]",
            "mov r4, r0",
            "mov r3, r6",
            "mov r0, r5",
            "mov r2, r7",
            "mov r1, r4",
            "str ip, [sp]",
            "ldr ip, [sp, 0x2c]",
            "str ip, [sp, 4]",
            "ldr ip, [sp, 0x30]",
            "str ip, [sp, 8]",
            "ldr ip, [sp, 0x34]",
            "str ip, [sp, 0xc]",
            "bl rsym.gdImageGifAnimAddCtx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.gdImageGif": {
        "function_address": "0x0000eb50",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "bl rsym.gdNewFileCtx",
            "mov r4, r0",
            "mov r0, r5",
            "mov r1, r4",
            "bl rsym.gdImageGifCtx",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "blx r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.gdImageCreateFromPngCtx": {
        "function_address": "0x0000f920",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x7c",
            "str r0, [sp, 0x20]",
            "mvn r3, 0",
            "add r5, sp, 0x34",
            "mov r4, 0",
            "ldr r0, [0x00010304]",
            "mov r1, 8",
            "str r3, [sp, 0x40]",
            "ldr r2, [sp, 0x20]",
            "str r0, [sp, 0x18]",
            "mov r0, r5",
            "ldr r3, [sp, 0x18]",
            "str r4, [sp, 0x3c]",
            "str r4, [sp, 0x34]",
            "add r3, pc, r3",
            "str r4, [sp, 0x38]",
            "str r3, [sp, 0x18]",
            "bl rsym.gdGetBuf",
            "cmp r0, 7",
            "strle r4, [sp, 0x1c]",
            "bgt 0xf984",
            "ldr r0, [sp, 0x1c]",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r5",
            "mov r1, 8",
            "bl sym.imp.png_check_sig",
            "cmp r0, 0",
            "streq r0, [sp, 0x1c]",
            "beq 0xf978",
            "ldr r6, [sp, 0x18]",
            "mov r3, r4",
            "ldr r5, [0x00010308]",
            "ldr r0, [0x0001030c]",
            "ldr r2, [0x00010310]",
            "add r5, r6, r5",
            "add r0, r6, r0",
            "mov r1, r5",
            "add r2, r6, r2",
            "bl sym.imp.png_create_read_struct",
            "cmp r0, r4",
            "str r0, [sp, 0x74]",
            "beq 0x101bc",
            "bl sym.imp.png_create_info_struct",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [sp, 0x70]",
            "beq 0x10180",
            "mov r0, r5",
            "bl sym.imp._setjmp",
            "subs r4, r0, 0",
            "bne 0x10044",
            "ldr r0, [sp, 0x74]",
            "mov r1, 8",
            "bl sym.imp.png_set_sig_bytes",
            "ldr ip, [sp, 0x18]",
            "ldr r2, [0x00010314]",
            "ldr r1, [sp, 0x20]",
            "ldr r0, [sp, 0x74]",
            "add r2, ip, r2",
            "bl sym.imp.png_set_read_fn",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "bl sym.imp.png_read_info",
            "add ip, sp, 0x64",
            "add r3, sp, 0x68",
            "str ip, [sp]",
            "add ip, sp, 0x60",
            "str ip, [sp, 4]",
            "add r2, sp, 0x6c",
            "add ip, sp, 0x5c",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "str ip, [sp, 8]",
            "str r4, [sp, 0xc]",
            "str r4, [sp, 0x10]",
            "bl sym.imp.png_get_IHDR",
            "ldr r3, [sp, 0x60]",
            "cmp r3, 2",
            "cmpne r3, 6",
            "beq 0xfef4",
            "cmp r3, 4",
            "beq 0xfef4",
            "ldr r0, [sp, 0x6c]",
            "ldr r1, [sp, 0x68]",
            "bl rsym.gdImageCreate",
            "str r0, [sp, 0x1c]",
            "ldr lr, [sp, 0x1c]",
            "cmp lr, 0",
            "beq 0x1027c",
            "ldr r3, [sp, 0x64]",
            "cmp r3, 0x10",
            "beq 0x10038",
            "cmp r3, 7",
            "ble 0x10020",
            "ldr ip, [sp, 0x18]",
            "ldr r0, [0x00010308]",
            "add r0, ip, r0",
            "bl sym.imp._setjmp",
            "cmp r0, 0",
            "bne 0x10100",
            "ldr r3, [sp, 0x60]",
            "cmp r3, 6",
            "addls pc, pc, r3, lsl 2",
            "b 0xfb4c",
            "b 0xfd80",
            "b 0xfb4c",
            "b 0xfaec",
            "b 0xfe4c",
            "b 0xfae4",
            "b 0xfb4c",
            "b 0xfaec",
            "ldr r0, [sp, 0x74]",
            "bl sym.imp.png_set_gray_to_rgb",
            "ldr r0, [sp, 0x74]",
            "mov r2, 0x10",
            "ldr r1, [sp, 0x70]",
            "bl sym.imp.png_get_valid",
            "cmp r0, 0",
            "beq 0xfb4c",
            "mov r2, 0",
            "add r1, sp, 0x48",
            "mov r3, r2",
            "str r1, [sp]",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "bl sym.imp.png_get_tRNS",
            "ldr r3, [sp, 0x64]",
            "cmp r3, 0x10",
            "beq 0x10158",
            "ldr r3, [sp, 0x48]",
            "ldrh r2, [r3, 4]",
            "ldrh r1, [r3, 2]",
            "ldrh r3, [r3, 6]",
            "lsl r2, r2, 8",
            "add r2, r2, r1, lsl 16",
            "add r3, r2, r3",
            "str r3, [sp, 0x40]",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "bl sym.imp.png_read_update_info",
            "ldr r1, [sp, 0x70]",
            "ldr r0, [sp, 0x74]",
            "bl sym.imp.png_get_rowbytes",
            "ldr r1, [sp, 0x68]",
            "mov r5, r0",
            "bl rsym.overflow2",
            "subs r4, r0, 0",
            "bne 0x100c0",
            "ldr r0, [sp, 0x68]",
            "mul r0, r0, r5",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "str r0, [sp, 0x2c]",
            "beq 0x101e4",
            "ldr r0, [sp, 0x68]",
            "mov r1, 4",
            "bl rsym.overflow2",
            "subs r6, r0, 0",
            "bne 0x100d8",
            "ldr r0, [sp, 0x68]",
            "lsl r0, r0, 2",
            "bl rsym.gdMalloc",
            "subs r4, r0, 0",
            "beq 0x10230",
            "ldr r1, [sp, 0x68]",
            "cmp r1, 0",
            "beq 0xfbe0",
            "ldr r3, [sp, 0x2c]",
            "mov r2, r4",
            "add r6, r6, 1",
            "str r3, [r2], 4",
            "cmp r6, r1",
            "add r3, r3, r5",
            "blo 0xfbcc",
            "ldr r0, [sp, 0x74]",
            "mov r1, r4",
            "bl sym.imp.png_read_image",
            "ldr r0, [sp, 0x74]",
            "mov r1, 0",
            "bl sym.imp.png_read_end",
            "ldr r0, [sp, 0x1c]",
            "movw r3, 0x1c38",
            "ldr r1, [r0, r3]",
            "cmp r1, 0",
            "movne r5, 0",
            "bne 0xfca4",
            "ldr r8, [sp, 0x58]",
            "add r5, r0, 0xc10",
            "cmp r8, 0",
            "str r8, [r0, 0xc]",
            "ble 0xfc7c",
            "ldr r7, [sp, 0x50]",
            "add ip, r0, 0x800",
            "mov r2, r0",
            "add r6, r8, r8, lsl 1",
            "add r0, r0, 0xc00",
            "add ip, ip, 0xc",
            "add r0, r0, 0xc",
            "mov lr, 1",
            "mov r3, r7",
            "ldrb sl, [r3, r1]!",
            "add r1, r1, 3",
            "cmp r1, r6",
            "str sl, [r2, 0x10]",
            "ldrb sl, [r3, 1]",
            "str sl, [r2, 0x410]",
            "add r2, r2, 4",
            "ldrb r3, [r3, 2]",
            "str lr, [r0, 4]!",
            "str r3, [ip, 4]!",
            "bne 0xfc44",
            "cmp r8, 0xff",
            "bgt 0xfca4",
            "ldr r6, [sp, 0x1c]",
            "add r3, r8, 0x300",
            "add r3, r3, 3",
            "mov r1, 1",
            "add r2, r6, 0x1000",
            "add r3, r6, r3, lsl 2",
            "add r2, r2, 0xc",
            "str r1, [r3, 4]!",
            "cmp r3, r2",
            "bne 0xfc98",
            "ldr r6, [sp, 0x1c]",
            "movw r3, 0x1010",
            "ldr lr, [sp, 0x40]",
            "add r0, sp, 0x74",
            "ldr ip, [sp, 0x5c]",
            "add r1, sp, 0x70",
            "mov r2, 0",
            "str lr, [r6, r3]",
            "movw r3, 0x1830",
            "cmp ip, 1",
            "movne ip, 0",
            "moveq ip, 1",
            "str ip, [r6, r3]",
            "bl sym.imp.png_destroy_read_struct",
            "ldr r3, [sp, 0x60]",
            "cmp r3, 4",
            "beq 0xff90",
            "cmp r3, 6",
            "beq 0xff90",
            "cmp r3, 2",
            "beq 0xff08",
            "ldr r3, [sp, 0x68]",
            "cmp r3, 0",
            "beq 0xfd60",
            "ldr r6, [sp, 0x1c]",
            "mov r1, 0",
            "mov lr, r1",
            "mov ip, r1",
            "ldr r3, [sp, 0x6c]",
            "cmp r3, 0",
            "movne r3, ip",
            "beq 0xfd4c",
            "ldr r2, [r4, r1]",
            "ldr r0, [r6]",
            "ldrb r2, [r2, r3]",
            "ldr r0, [r0, r1]",
            "strb r2, [r0, r3]",
            "add r3, r3, 1",
            "str ip, [r5, r2, lsl 2]",
            "ldr r2, [sp, 0x6c]",
            "cmp r2, r3",
            "bhi 0xfd24",
            "ldr r3, [sp, 0x68]",
            "add lr, lr, 1",
            "add r1, r1, 4",
            "cmp r3, lr",
            "bhi 0xfd14",
            "ldr r3, [sp, 0x3c]",
            "cmp r3, 0",
            "bne 0x1002c",
            "ldr r0, [sp, 0x2c]",
            "bl rsym.gdFree",
            "mov r0, r4",
            "bl rsym.gdFree",
            "b 0xf978",
            "mov r0, 0x300",
            "bl rsym.gdMalloc",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [sp, 0x50]",
            "beq 0x102c8",
            "ldr r3, [sp, 0x64]",
            "mov r2, 1",
            "str r2, [sp, 0x3c]",
            "cmp r3, 7",
            "bgt 0x10088",
            "lsl r3, r2, r3",
            "mov r5, 0",
            "mov r6, r5",
            "sub r7, r3, 1",
            "str r3, [sp, 0x58]",
            "mov r0, r6",
            "mov r1, r7",
            "add r6, r6, 0xff",
            "bl fcn.00013da0",
            "cmp r6, 0xff00",
            "uxtb r0, r0",
            "add r3, r4, r5",
            "strb r0, [r4, r5]",
            "add r5, r5, 3",
            "strb r0, [r3, 2]",
            "strb r0, [r3, 1]",
            "bne 0xfdc0",
            "ldr r0, [sp, 0x74]",
            "mov r2, 0x10",
            "ldr r1, [sp, 0x70]",
            "bl sym.imp.png_get_valid",
            "cmp r0, 0",
            "beq 0xfb4c",
            "mov r2, 0",
            "add ip, sp, 0x4c",
            "mov r3, r2",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "str ip, [sp]",
            "bl sym.imp.png_get_tRNS",
            "ldr r3, [sp, 0x64]",
            "cmp r3, 0x10",
            "ldreq r3, [sp, 0x4c]",
            "ldrne r3, [sp, 0x4c]",
            "ldrheq r3, [r3, 8]",
            "ldrhne r3, [r3, 8]",
            "lsreq r3, r3, 8",
            "strne r3, [sp, 0x40]",
            "streq r3, [sp, 0x40]",
            "b 0xfb4c",
            "ldr r1, [sp, 0x70]",
            "add r2, sp, 0x50",
            "add r3, sp, 0x58",
            "ldr r0, [sp, 0x74]",
            "bl sym.imp.png_get_PLTE",
            "ldr r0, [sp, 0x74]",
            "mov r2, 0x10",
            "ldr r1, [sp, 0x70]",
            "bl sym.imp.png_get_valid",
            "cmp r0, 0",
            "beq 0xfb4c",
            "mov r4, 0",
            "ldr r0, [sp, 0x74]",
            "ldr r1, [sp, 0x70]",
            "add r2, sp, 0x44",
            "add r3, sp, 0x54",
            "str r4, [sp]",
            "bl sym.imp.png_get_tRNS",
            "ldr ip, [sp, 0x54]",
            "cmp ip, r4",
            "ble 0xfb4c",
            "ldr r6, [sp, 0x1c]",
            "mov r0, 1",
            "ldr r2, [sp, 0x44]",
            "mov lr, r4",
            "add r3, r6, 0x1800",
            "add r3, r3, 0x34",
            "ldrb r1, [r2, r4]",
            "lsr r1, r1, 1",
            "rsb r1, r1, 0x7f",
            "str r1, [r3, 4]!",
            "ldrb r1, [r2, r4]",
            "cmp r1, 0",
            "movne r1, 0",
            "andeq r1, r0, 1",
            "cmp r1, 0",
            "strne r4, [sp, 0x40]",
            "add r4, r4, 1",
            "movne r0, lr",
            "cmp r4, ip",
            "bne 0xfeb8",
            "b 0xfb4c",
            "ldr r0, [sp, 0x6c]",
            "ldr r1, [sp, 0x68]",
            "bl rsym.gdImageCreateTrueColor",
            "str r0, [sp, 0x1c]",
            "b 0xfa80",
            "ldr sl, [sp, 0x68]",
            "cmp sl, 0",
            "beq 0xfd60",
            "ldr r8, [sp, 0x6c]",
            "mov r6, 0",
            "str sl, [sp, 0x24]",
            "mov r7, r6",
            "ldr sl, [sp, 0x1c]",
            "movw sb, 0x1c3c",
            "mov fp, r6",
            "lsl r5, r8, 2",
            "cmp r8, 0",
            "beq 0xff78",
            "ldr r1, [sl, sb]",
            "mov r2, fp",
            "ldr r3, [r4, r6]",
            "ldr lr, [r1, r6]",
            "ldrb r0, [r3, 1]",
            "ldrb ip, [r3]",
            "ldrb r1, [r3, 2]",
            "add r3, r3, 3",
            "lsl r0, r0, 8",
            "add r0, r0, ip, lsl 16",
            "add r0, r0, r1",
            "str r0, [lr, r2]",
            "add r2, r2, 4",
            "cmp r2, r5",
            "bne 0xff4c",
            "ldr ip, [sp, 0x24]",
            "add r7, r7, 1",
            "add r6, r6, 4",
            "cmp r7, ip",
            "blo 0xff34",
            "b 0xfd60",
            "ldr sl, [sp, 0x68]",
            "cmp sl, 0",
            "beq 0xfd60",
            "ldr r8, [sp, 0x6c]",
            "mov r6, 0",
            "mov r7, r6",
            "movw sb, 0x1c3c",
            "lsl fp, r8, 2",
            "str fp, [sp, 0x28]",
            "ldr fp, [sp, 0x1c]",
            "cmp r8, 0",
            "beq 0x1000c",
            "ldr r2, [fp, sb]",
            "ldr r3, [r4, r6]",
            "ldr lr, [sp, 0x28]",
            "ldr r2, [r2, r6]",
            "add r5, lr, r3",
            "ldrb ip, [r3, 1]",
            "ldrb lr, [r3]",
            "ldrb r0, [r3, 3]",
            "ldrb r1, [r3, 2]",
            "add r3, r3, 4",
            "lsl ip, ip, 8",
            "cmp r3, r5",
            "add ip, ip, lr, lsl 16",
            "lsr r0, r0, 1",
            "add ip, ip, r1",
            "rsb r0, r0, 0x7f",
            "add r0, ip, r0, lsl 24",
            "str r0, [r2], 4",
            "bne 0xffd4",
            "add r7, r7, 1",
            "add r6, r6, 4",
            "cmp sl, r7",
            "bhi 0xffb8",
            "b 0xfd60",
            "ldr r0, [sp, 0x74]",
            "bl sym.imp.png_set_packing",
            "b 0xfaa0",
            "ldr r0, [sp, 0x50]",
            "bl rsym.gdFree",
            "b 0xfd6c",
            "ldr r0, [sp, 0x74]",
            "bl sym.imp.png_set_strip_16",
            "b 0xfaa0",
            "ldr r0, [sp, 0x18]",
            "mov lr, 0",
            "ldr r3, [0x00010318]",
            "mov r1, 1",
            "ldr r6, [sp, 0x18]",
            "mov r2, 0x2f",
            "str lr, [sp, 0x1c]",
            "ldr r3, [r0, r3]",
            "ldr r0, [0x0001031c]",
            "ldr r3, [r3]",
            "add r0, r6, r0",
            "bl sym.imp.fwrite",
            "add r0, sp, 0x74",
            "add r1, sp, 0x70",
            "mov r2, 0",
            "bl sym.imp.png_destroy_read_struct",
            "b 0xf978",
            "mov r3, 0",
            "mov r1, 0x100",
            "mov r2, r3",
            "str r1, [sp, 0x58]",
            "uxtb r1, r2",
            "add r2, r2, 1",
            "cmp r2, 0x100",
            "add r0, r4, r3",
            "strb r1, [r4, r3]",
            "strb r1, [r0, 2]",
            "add r3, r3, 3",
            "strb r1, [r0, 1]",
            "bne 0x10098",
            "b 0xfdf0",
            "mov r2, 0",
            "add r0, sp, 0x74",
            "add r1, sp, 0x70",
            "str r2, [sp, 0x1c]",
            "bl sym.imp.png_destroy_read_struct",
            "b 0xf978",
            "add r1, sp, 0x70",
            "mov r2, r4",
            "add r0, sp, 0x74",
            "bl sym.imp.png_destroy_read_struct",
            "ldr r0, [sp, 0x2c]",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x1c]",
            "str r4, [sp, 0x1c]",
            "bl rsym.gdImageDestroy",
            "b 0xf978",
            "ldr lr, [sp, 0x18]",
            "mov r1, 1",
            "ldr r3, [0x00010318]",
            "mov r2, 0x2e",
            "ldr r0, [0x00010320]",
            "ldr r3, [lr, r3]",
            "add r0, lr, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "add r1, sp, 0x70",
            "mov r2, 0",
            "add r0, sp, 0x74",
            "bl sym.imp.png_destroy_read_struct",
            "mov r0, 0",
            "bl rsym.gdFree",
            "mov r0, 0",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x1c]",
            "mov r1, 0",
            "str r1, [sp, 0x1c]",
            "bl rsym.gdImageDestroy",
            "b 0xf978",
            "ldr r3, [sp, 0x48]",
            "ldrh r1, [r3, 2]",
            "ldrh r0, [r3, 4]",
            "ldrh r2, [r3, 6]",
            "lsr r1, r1, 8",
            "and r3, r0, 0xff00",
            "add r3, r3, r1, lsl 16",
            "add r3, r3, r2, lsr 8",
            "str r3, [sp, 0x40]",
            "b 0xfb4c",
            "ldr ip, [sp, 0x18]",
            "mov r1, 1",
            "ldr r3, [0x00010318]",
            "mov r2, 0x31",
            "str r0, [sp, 0x1c]",
            "ldr r0, [0x00010324]",
            "ldr r3, [ip, r3]",
            "add r0, ip, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "add r0, sp, 0x74",
            "mov r1, r4",
            "mov r2, r4",
            "bl sym.imp.png_destroy_read_struct",
            "b 0xf978",
            "ldr r3, [0x00010318]",
            "mov r1, 1",
            "str r0, [sp, 0x1c]",
            "mov r2, 0x31",
            "ldr r0, [0x00010328]",
            "ldr r3, [r6, r3]",
            "add r0, r6, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xf978",
            "ldr r0, [sp, 0x18]",
            "mov r1, 1",
            "ldr r3, [0x00010318]",
            "mov r2, 0x29",
            "ldr r6, [sp, 0x18]",
            "ldr r3, [r0, r3]",
            "ldr r0, [0x0001032c]",
            "ldr r3, [r3]",
            "add r0, r6, r0",
            "bl sym.imp.fwrite",
            "add r0, sp, 0x74",
            "add r1, sp, 0x70",
            "ldr r2, [sp, 0x2c]",
            "bl sym.imp.png_destroy_read_struct",
            "ldr ip, [sp, 0x2c]",
            "ldr r0, [sp, 0x1c]",
            "str ip, [sp, 0x1c]",
            "bl rsym.gdImageDestroy",
            "b 0xf978",
            "ldr lr, [sp, 0x18]",
            "mov r1, 1",
            "ldr r3, [0x00010318]",
            "mov r2, 0x2b",
            "ldr r0, [0x00010330]",
            "ldr r3, [lr, r3]",
            "add r0, lr, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "add r1, sp, 0x70",
            "mov r2, r4",
            "add r0, sp, 0x74",
            "bl sym.imp.png_destroy_read_struct",
            "ldr r0, [sp, 0x1c]",
            "str r4, [sp, 0x1c]",
            "bl rsym.gdImageDestroy",
            "ldr r0, [sp, 0x2c]",
            "bl rsym.gdFree",
            "b 0xf978",
            "ldr r0, [sp, 0x18]",
            "mov r1, 1",
            "ldr r3, [0x00010318]",
            "mov r2, 0x2d",
            "ldr r6, [sp, 0x18]",
            "ldr r3, [r0, r3]",
            "ldr r0, [0x00010334]",
            "ldr r3, [r3]",
            "add r0, r6, r0",
            "bl sym.imp.fwrite",
            "add r1, sp, 0x70",
            "ldr r2, [sp, 0x1c]",
            "add r0, sp, 0x74",
            "bl sym.imp.png_destroy_read_struct",
            "ldr r0, [sp, 0x1c]",
            "bl rsym.gdFree",
            "ldr r0, [sp, 0x1c]",
            "bl rsym.gdFree",
            "b 0xf978",
            "ldr ip, [sp, 0x18]",
            "mov r1, 1",
            "ldr r3, [0x00010318]",
            "mov r2, 0x2b",
            "str r0, [sp, 0x1c]",
            "ldr r0, [0x00010338]",
            "ldr r3, [ip, r3]",
            "add r0, ip, r0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "add r0, sp, 0x74",
            "add r1, sp, 0x70",
            "mov r2, r4",
            "bl sym.imp.png_destroy_read_struct",
            "b 0xf978"
        ]
    },
    "sym.imp.png_check_sig": {
        "function_address": "0x00003300",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf30]!"
        ]
    },
    "sym.imp.png_create_read_struct": {
        "function_address": "0x00003348",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf00]!"
        ]
    },
    "sym.imp.png_set_sig_bytes": {
        "function_address": "0x00003090",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0xd0]!"
        ]
    },
    "sym.imp.png_set_read_fn": {
        "function_address": "0x00003018",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x120]!"
        ]
    },
    "sym.imp.png_read_info": {
        "function_address": "0x00003408",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xe80]!"
        ]
    },
    "sym.imp.png_get_IHDR": {
        "function_address": "0x000032b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf60]!"
        ]
    },
    "sym.imp.png_set_gray_to_rgb": {
        "function_address": "0x00002fac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x168]!"
        ]
    },
    "sym.imp.png_get_valid": {
        "function_address": "0x000033cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xea8]!"
        ]
    },
    "sym.imp.png_get_tRNS": {
        "function_address": "0x000033a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xec0]!"
        ]
    },
    "sym.imp.png_read_update_info": {
        "function_address": "0x00003600",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd30]!"
        ]
    },
    "sym.imp.png_get_rowbytes": {
        "function_address": "0x0000315c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x48]!"
        ]
    },
    "sym.imp.png_read_image": {
        "function_address": "0x00002fd0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x150]!"
        ]
    },
    "sym.imp.png_read_end": {
        "function_address": "0x0000357c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd88]!"
        ]
    },
    "sym.imp.png_destroy_read_struct": {
        "function_address": "0x00003228",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xfc0]!"
        ]
    },
    "sym.imp.png_get_PLTE": {
        "function_address": "0x000030f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x90]!"
        ]
    },
    "sym.imp.png_set_strip_16": {
        "function_address": "0x000035c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd58]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x0000370c",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00003768]",
            "ldr r3, [0x0000376c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x373c",
            "ldr r0, [0x00003770]",
            "ldr r1, [0x00003774]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl loc.imp.__register_frame_info",
            "ldr r3, [0x00003778]",
            "add r0, r4, r3",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x0000377c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x0000363c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xd08]!"
        ]
    },
    "fcn.00014eb8": {
        "function_address": "0x00014eb8",
        "instructions": [
            "push {r0, r1, r2, r3, lr}",
            "bl fcn.00014e44",
            "cmp r0, 0",
            "cmnmi r0, 0",
            "pop {r0, r1, r2, r3, pc}"
        ]
    },
    "fcn.00014e44": {
        "function_address": "0x00014e44",
        "instructions": [
            "mov ip, 1",
            "str ip, [sp, -4]!",
            "lsl r2, r0, 1",
            "lsl r3, r1, 1",
            "mvns ip, r2, asr 24",
            "mvnsne ip, r3, asr 24",
            "beq 0x14e80",
            "add sp, sp, 4",
            "orrs ip, r2, r3, lsr 1",
            "teqne r0, r1",
            "subspl r0, r2, r3",
            "asrhi r0, r1, 0x1f",
            "mvnlo r0, r1, asr 31",
            "orrne r0, r0, 1",
            "bx lr",
            "mvns ip, r2, asr 24",
            "bne 0x14e90",
            "lsls ip, r0, 9",
            "bne 0x14ea0",
            "mvns ip, r3, asr 24",
            "bne 0x14e60",
            "lsls ip, r1, 9",
            "beq 0x14e60",
            "pop {r0}",
            "bx lr"
        ]
    },
    "fcn.00014654": {
        "function_address": "0x00014654",
        "instructions": [
            "and r5, ip, r3, lsr 20",
            "teq r4, ip",
            "teqeq r5, ip",
            "beq 0x144b4",
            "teq r4, ip",
            "bne 0x14688",
            "orrs r4, r0, r1, lsl 12",
            "bne 0x144b4",
            "teq r5, ip",
            "bne 0x1449c",
            "mov r0, r2",
            "mov r1, r3",
            "b 0x144b4",
            "teq r5, ip",
            "bne 0x146a4",
            "orrs r5, r2, r3, lsl 12",
            "beq 0x14450",
            "mov r0, r2",
            "mov r1, r3",
            "b 0x144b4",
            "orrs r6, r0, r1, lsl 1",
            "orrsne r6, r2, r3, lsl 1",
            "bne 0x143e8",
            "orrs r4, r0, r1, lsl 1",
            "bne 0x1449c",
            "orrs r5, r2, r3, lsl 1",
            "bne 0x14450",
            "b 0x144b4"
        ]
    },
    "fcn.00014434": {
        "function_address": "0x00014434",
        "instructions": [
            "teq r4, 0",
            "bne 0x14414",
            "and r6, r1, 0x80000000",
            "lsls r0, r0, 1",
            "adc r1, r1, r1",
            "tst r1, 0x100000",
            "subeq r4, r4, 1",
            "beq 0x143f4",
            "orr r1, r1, r6",
            "teq r5, 0",
            "bxne lr",
            "and r6, r3, 0x80000000",
            "lsls r2, r2, 1",
            "adc r3, r3, r3",
            "tst r3, 0x100000",
            "subeq r5, r5, 1",
            "beq 0x14418",
            "orr r3, r3, r6",
            "bx lr",
            "teq r4, ip",
            "and r5, ip, r3, lsr 20",
            "teqne r5, ip",
            "beq 0x14460",
            "orrs r6, r0, r1, lsl 1",
            "orrsne r6, r2, r3, lsl 1",
            "bne 0x143e8",
            "eor r1, r1, r3",
            "and r1, r1, 0x80000000",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "orrs r6, r0, r1, lsl 1",
            "moveq r0, r2",
            "moveq r1, r3",
            "orrsne r6, r2, r3, lsl 1",
            "beq 0x144b4",
            "teq r4, ip",
            "bne 0x14484",
            "orrs r6, r0, r1, lsl 12",
            "bne 0x144b4",
            "teq r5, ip",
            "bne 0x1449c",
            "orrs r6, r2, r3, lsl 12",
            "movne r0, r2",
            "movne r1, r3",
            "bne 0x144b4",
            "eor r1, r1, r3",
            "orr r1, r1, 0x7f000000",
            "orr r1, r1, 0xf80000",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00014ea8": {
        "function_address": "0x00014ea8",
        "instructions": [
            "mov ip, r0",
            "mov r0, r1",
            "mov r1, ip",
            "b fcn.00014eb8"
        ]
    },
    "fcn.00013da8": {
        "function_address": "0x00013da8",
        "instructions": [
            "eor ip, r0, r1",
            "rsbmi r1, r1, 0",
            "subs r2, r1, 1",
            "beq 0x13e38",
            "movs r3, r0",
            "rsbmi r3, r0, 0",
            "cmp r3, r1",
            "bls 0x13e44",
            "tst r1, r2",
            "beq 0x13e54",
            "clz r2, r1",
            "clz r0, r3",
            "sub r0, r2, r0",
            "mov r2, 1",
            "lsl r1, r1, r0",
            "lsl r2, r2, r0",
            "mov r0, 0",
            "cmp r3, r1",
            "subhs r3, r3, r1",
            "orrhs r0, r0, r2",
            "cmp r3, r1, lsr 1",
            "subhs r3, r3, r1, lsr 1",
            "orrhs r0, r0, r2, lsr 1",
            "cmp r3, r1, lsr 2",
            "subhs r3, r3, r1, lsr 2",
            "orrhs r0, r0, r2, lsr 2",
            "cmp r3, r1, lsr 3",
            "subhs r3, r3, r1, lsr 3",
            "orrhs r0, r0, r2, lsr 3",
            "cmp r3, 0",
            "lsrsne r2, r2, 4",
            "lsrne r1, r1, 4",
            "bne 0x13dec",
            "cmp ip, 0",
            "rsbmi r0, r0, 0",
            "bx lr",
            "teq ip, r0",
            "rsbmi r0, r0, 0",
            "bx lr",
            "movlo r0, 0",
            "asreq r0, ip, 0x1f",
            "orreq r0, r0, 1",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "cmp ip, 0",
            "lsr r0, r3, r2",
            "rsbmi r0, r0, 0",
            "bx lr"
        ]
    },
    "fcn.0001475c": {
        "function_address": "0x0001475c",
        "instructions": [
            "mov ip, r0",
            "mov r0, r2",
            "mov r2, ip",
            "mov ip, r1",
            "mov r1, r3",
            "mov r3, ip",
            "b fcn.00014778"
        ]
    },
    "fcn.00014778": {
        "function_address": "0x00014778",
        "instructions": [
            "push {r0, lr}",
            "bl fcn.000146d4",
            "cmp r0, 0",
            "cmnmi r0, 0",
            "pop {r0, pc}"
        ]
    },
    "fcn.000146d4": {
        "function_address": "0x000146d4",
        "instructions": [
            "mov ip, 1",
            "str ip, [sp, -4]!",
            "lsl ip, r1, 1",
            "mvns ip, ip, asr 21",
            "lsl ip, r3, 1",
            "mvnsne ip, ip, asr 21",
            "beq 0x1472c",
            "add sp, sp, 4",
            "orrs ip, r0, r1, lsl 1",
            "orrseq ip, r2, r3, lsl 1",
            "teqne r1, r3",
            "teqeq r0, r2",
            "moveq r0, 0",
            "bxeq lr",
            "cmn r0, 0",
            "teq r1, r3",
            "cmppl r1, r3",
            "cmpeq r0, r2",
            "asrhs r0, r3, 0x1f",
            "mvnlo r0, r3, asr 31",
            "orr r0, r0, 1",
            "bx lr",
            "lsl ip, r1, 1",
            "mvns ip, ip, asr 21",
            "bne 0x14740",
            "orrs ip, r0, r1, lsl 12",
            "bne 0x14754",
            "lsl ip, r3, 1",
            "mvns ip, ip, asr 21",
            "bne 0x146f0",
            "orrs ip, r2, r3, lsl 12",
            "beq 0x146f0",
            "pop {r0}",
            "bx lr"
        ]
    },
    "rsym.gdImageFilledRectangle": {
        "function_address": "0x00003324",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf18]!"
        ]
    },
    "sym.imp.uncompress": {
        "function_address": "0x00002fc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1b000",
            "ldr pc, [ip, 0x158]!"
        ]
    },
    "fcn.0000ce48": {
        "function_address": "0x0000ce48",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r4, [r0, 0x1c]",
            "ldr r3, [r4, 0x10]",
            "ldr r5, [r4, 4]",
            "rsb r5, r3, r5",
            "cmp r5, r2",
            "bge 0xce94",
            "cmp r5, 0",
            "beq 0xce8c",
            "ldr ip, [r4]",
            "mov r0, r1",
            "mov r2, r5",
            "add r1, ip, r3",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 0x10]",
            "add r3, r3, r5",
            "str r3, [r4, 0x10]",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}",
            "mov r5, r2",
            "b 0xce6c"
        ]
    },
    "fcn.0000cf44": {
        "function_address": "0x0000cf44",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0xc]",
            "mov r6, r1",
            "mov r5, r2",
            "cmp r0, 0",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4, 0x10]",
            "ldr r0, [r4, 8]",
            "add r7, r2, r3",
            "cmp r7, r0",
            "ble 0xcfb4",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "moveq r0, r3",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "mov r1, 2",
            "bl rsym.overflow2",
            "cmp r0, 0",
            "movne r0, 0",
            "popne {r3, r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "lsl r1, r7, 1",
            "bl fcn.0000cde8",
            "cmp r0, 0",
            "ldrne r3, [r4, 0x10]",
            "streq r0, [r4, 0xc]",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [r4]",
            "mov r2, r5",
            "mov r1, r6",
            "add r0, r0, r3",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, 0x10]",
            "ldr r3, [r4, 4]",
            "add r5, r5, r2",
            "cmp r5, r3",
            "str r5, [r4, 0x10]",
            "strgt r5, [r4, 4]",
            "movgt r0, 1",
            "popgt {r3, r4, r5, r6, r7, pc}",
            "mov r0, 1",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0000d24c": {
        "function_address": "0x0000d24c",
        "instructions": [
            "cmp r3, 0",
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r1",
            "mov r5, r2",
            "bne 0xd2d0",
            "ldr r3, [r1, 0x118]",
            "ldr r1, [r1, 0x11c]",
            "add r2, r2, r3",
            "cmp r2, r1",
            "bge 0xd2ec",
            "cmp r5, 0",
            "movle r0, 0",
            "ble 0xd2c8",
            "mov r0, 0",
            "mov r1, r0",
            "asr ip, r3, 0x1f",
            "cmp r3, 0",
            "add r6, r3, 7",
            "lsr ip, ip, 0x1d",
            "movge r6, r3",
            "ldrb r6, [r4, r6, asr 3]",
            "add r7, r3, ip",
            "add r3, r3, 1",
            "and r7, r7, 7",
            "rsb ip, ip, r7",
            "asr ip, r6, ip",
            "and ip, ip, 1",
            "orr r0, r0, ip, lsl r1",
            "add r1, r1, 1",
            "cmp r1, r5",
            "bne 0xd288",
            "str r2, [r4, 0x118]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r3, 0",
            "str r3, [r1, 0x118]",
            "mov r0, r3",
            "str r3, [r1, 0x11c]",
            "str r3, [r1, 0x124]",
            "str r3, [r1, 0x120]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4, 0x120]",
            "cmp r3, 0",
            "beq 0xd300",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4, 0x124]",
            "add r1, r4, 2",
            "ldr r2, [sp, 0x18]",
            "add r3, r4, r3",
            "ldrb ip, [r3, -2]",
            "strb ip, [r4]",
            "ldrb r3, [r3, -1]",
            "strb r3, [r4, 1]",
            "bl fcn.0000d1d8",
            "uxtb r2, r0",
            "ldr r0, [r4, 0x118]",
            "cmp r2, 0",
            "add r2, r2, 2",
            "moveq r3, 1",
            "lsl r1, r2, 3",
            "streq r3, [r4, 0x120]",
            "ldr r3, [r4, 0x11c]",
            "str r2, [r4, 0x124]",
            "add r2, r0, 0x10",
            "str r1, [r4, 0x11c]",
            "rsb r3, r3, r2",
            "add r2, r5, r3",
            "b 0xd274"
        ]
    },
    "fcn.0000d35c": {
        "function_address": "0x0000d35c",
        "instructions": [
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x11c",
            "mov r6, r0",
            "mov r4, r1",
            "ldr r8, [sp, 0x140]",
            "bne 0xd560",
            "ldr r3, [r1]",
            "cmp r3, 0",
            "bne 0xd518",
            "mov r3, 0x24",
            "add sb, r1, 0x8000",
            "movt r3, 1",
            "add sb, sb, 0x24",
            "ldr r2, [r1, r3]",
            "cmp r2, sb",
            "bhi 0xd640",
            "add r5, r1, 0x10000",
            "add fp, sp, 0x14",
            "add r5, r5, 0x28",
            "add r7, sb, 0x8000",
            "ldr r2, [r4, 4]",
            "mov r0, r6",
            "mov r1, r5",
            "mov r3, 0",
            "str r8, [sp]",
            "bl fcn.0000d24c",
            "subs sl, r0, 0",
            "blt 0xd554",
            "ldr r1, [r4, 0x1c]",
            "cmp r1, sl",
            "beq 0xd688",
            "ldr r3, [r4, 0x20]",
            "cmp r3, sl",
            "beq 0xd650",
            "mov r1, 0x24",
            "movt r1, 1",
            "ldr r0, [r4, r1]",
            "cmp r0, r7",
            "beq 0xd680",
            "ldr r3, [r4, 0xc]",
            "cmp r3, sl",
            "ldrle r3, [r4, 0x14]",
            "movgt r3, sl",
            "strle r3, [r0], 4",
            "ldrle r3, [r4, 0x18]",
            "ldr r2, [r4, 0x1c]",
            "strle r0, [r4, r1]",
            "cmp r3, r2",
            "blt 0xd468",
            "cmp r7, r0",
            "beq 0xd680",
            "mov r2, r0",
            "b 0xd43c",
            "cmp r7, r2",
            "beq 0xd62c",
            "add r1, r3, 0x1000",
            "add r3, r4, r3, lsl 2",
            "add r1, r1, 8",
            "add r1, r4, r1, lsl 2",
            "ldr r1, [r1, 4]",
            "str r1, [r2], 4",
            "mov r0, r2",
            "ldr r3, [r3, 0x24]",
            "ldr r1, [r4, 0x1c]",
            "cmp r1, r3",
            "ble 0xd434",
            "add r3, r3, 0x1000",
            "movw ip, 0xfff",
            "add r3, r3, 8",
            "mov r2, 0x24",
            "add r3, r4, r3, lsl 2",
            "movt r2, 1",
            "ldr r3, [r3, 4]",
            "str r3, [r4, 0x14]",
            "str r3, [r0], 4",
            "ldr r3, [r4, 0xc]",
            "str r0, [r4, r2]",
            "cmp r3, ip",
            "bgt 0xd4f4",
            "ldr r1, [r4, 0x10]",
            "add r2, r3, 0x1000",
            "add r2, r2, 8",
            "add r2, r4, r2, lsl 2",
            "str r1, [sp, 0xc]",
            "add r1, r3, 1",
            "ldr ip, [sp, 0xc]",
            "add r3, r4, r3, lsl 2",
            "str r1, [r4, 0xc]",
            "cmp r1, ip",
            "ldr r1, [r4, 0x18]",
            "str r1, [r3, 0x24]",
            "ldr r3, [r4, 0x14]",
            "str r3, [r2, 4]",
            "blt 0xd4f4",
            "cmp ip, 0x1000",
            "beq 0xd4f4",
            "ldr r3, [r4, 4]",
            "lsl ip, ip, 1",
            "str ip, [r4, 0x10]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "cmp sb, r0",
            "str sl, [r4, 0x18]",
            "bhs 0xd3b0",
            "mov r3, 0x24",
            "sub r2, r0, 4",
            "movt r3, 1",
            "ldr sl, [r0, -4]",
            "str r2, [r4, r3]",
            "b 0xd554",
            "add r5, r1, 0x10000",
            "str r2, [r1]",
            "add r5, r5, 0x28",
            "ldr r2, [r4, 4]",
            "mov r3, 0",
            "mov r0, r6",
            "mov r1, r5",
            "str r8, [sp]",
            "bl fcn.0000d24c",
            "ldr r3, [r4, 0x1c]",
            "str r0, [r4, 0x18]",
            "str r0, [r4, 0x14]",
            "cmp r3, r0",
            "beq 0xd524",
            "mov sl, r0",
            "mov r0, sl",
            "add sp, sp, 0x11c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r5, 1",
            "str r3, [r4, 8]",
            "lsl r2, r5, r3",
            "add r6, r3, r5",
            "add r1, r1, 0x10000",
            "str r6, [r4, 4]",
            "lsl lr, r2, r5",
            "add r3, r2, r5",
            "add ip, r2, 2",
            "str r2, [r4, 0x1c]",
            "str r3, [r4, 0x20]",
            "add r1, r1, 0x28",
            "str lr, [r4, 0x10]",
            "mov r2, 0",
            "str ip, [r4, 0xc]",
            "mov r3, r5",
            "str r8, [sp]",
            "bl fcn.0000d24c",
            "ldr r0, [r4, 0x1c]",
            "str r5, [r4]",
            "cmp r0, 0",
            "ble 0xd73c",
            "add r2, r4, 0x4000",
            "mov r3, 0",
            "add r1, r4, 0x20",
            "add r2, r2, 0x20",
            "mov ip, r3",
            "str ip, [r1, 4]!",
            "str r3, [r2, 4]!",
            "add r3, r3, 1",
            "cmp r3, r0",
            "bne 0xd5cc",
            "cmp r3, 0x1000",
            "bge 0xd610",
            "add r2, r3, 8",
            "mov r1, 0",
            "add r2, r4, r2, lsl 2",
            "movw r0, 0xfff",
            "add r3, r3, 1",
            "str r1, [r2, 4]!",
            "cmp r3, r0",
            "ble 0xd5f8",
            "movw r3, 0x4024",
            "str r1, [r4, r3]",
            "mov r2, 0x24",
            "add r3, r4, 0x8000",
            "movt r2, 1",
            "add r3, r3, 0x24",
            "str r3, [r4, r2]",
            "mov sl, 0",
            "b 0xd554",
            "mov r3, 0x24",
            "mvn sl, 0",
            "movt r3, 1",
            "str r7, [r4, r3]",
            "b 0xd554",
            "sub r1, r2, 4",
            "ldr sl, [r2, -4]",
            "str r1, [r4, r3]",
            "b 0xd554",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "bne 0xd678",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, r8",
            "bl fcn.0000d1d8",
            "cmp r0, 0",
            "bgt 0xd65c",
            "beq 0xd3e8",
            "mvn sl, 1",
            "b 0xd554",
            "mvn sl, 0",
            "b 0xd554",
            "cmp r1, 0",
            "beq 0xd744",
            "add r2, r4, 0x4000",
            "mov r3, 0",
            "add r0, r4, 0x20",
            "add r2, r2, 0x20",
            "mov ip, r3",
            "str ip, [r0, 4]!",
            "str r3, [r2, 4]!",
            "add r3, r3, 1",
            "cmp r3, r1",
            "bne 0xd6a4",
            "cmp r3, 0x1000",
            "bge 0xd6f0",
            "add r0, r3, 0x1000",
            "add ip, r3, 8",
            "add r0, r0, 8",
            "add ip, r4, ip, lsl 2",
            "add r0, r4, r0, lsl 2",
            "mov r2, 0",
            "movw lr, 0xfff",
            "add r3, r3, 1",
            "str r2, [r0, 4]!",
            "cmp r3, lr",
            "str r2, [ip, 4]!",
            "ble 0xd6dc",
            "ldr r2, [r4, 8]",
            "lsl r0, r1, 1",
            "mov r3, 0x24",
            "str r8, [sp]",
            "add r1, r1, 2",
            "movt r3, 1",
            "add r2, r2, 1",
            "str r0, [r4, 0x10]",
            "str r1, [r4, 0xc]",
            "mov r0, r6",
            "str sb, [r4, r3]",
            "mov r1, r5",
            "str r2, [r4, 4]",
            "mov r3, 0",
            "bl fcn.0000d24c",
            "mov sl, r0",
            "str r0, [r4, 0x18]",
            "str r0, [r4, 0x14]",
            "b 0xd554",
            "mov r3, 0",
            "b 0xd5e8",
            "mov r3, r1",
            "b 0xd6c0"
        ]
    },
    "fcn.0000dfe0": {
        "function_address": "0x0000dfe0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r2, 0x7590",
            "ldr r3, [0x0000e23c]",
            "mov r4, r1",
            "movw r6, 0x7590",
            "mov fp, r0",
            "ldr r5, [0x0000e240]",
            "ldr r2, [r1, r2]",
            "add r3, pc, r3",
            "movw r1, 0x758c",
            "add r5, r3, r5",
            "ldr ip, [r4, r1]",
            "ldr r3, [r5, r2, lsl 2]",
            "cmp r2, 0",
            "and ip, r3, ip",
            "ldr r3, [r4, 0x1c]",
            "str ip, [r4, r1]",
            "orrgt ip, ip, r0, lsl r2",
            "strle r0, [r4, r1]",
            "add r2, r2, r3",
            "strgt ip, [r4, r1]",
            "cmp r2, 7",
            "str r2, [r4, r6]",
            "ble 0xe0c0",
            "movw r7, 0x758c",
            "add sl, r4, 0x7500",
            "ldr r3, [r4, r7]",
            "movw r5, 0x7594",
            "movw r8, 0x7580",
            "add sl, sl, 0x98",
            "mov sb, 0",
            "ldr r2, [r4, r5]",
            "add r1, r2, 1",
            "add r2, r4, r2",
            "add r2, r2, 0x7500",
            "cmp r1, 0xfd",
            "add r2, r2, 0x98",
            "uxtb r0, r1",
            "str r1, [r4, r5]",
            "strb r3, [r2]",
            "ble 0xe0a4",
            "ldr r1, [r4, r8]",
            "bl rsym.gdPutC",
            "mov r0, sl",
            "ldr r1, [r4, r5]",
            "ldr r2, [r4, r8]",
            "bl rsym.gdPutBuf",
            "ldr r3, [r4, r7]",
            "str sb, [r4, r5]",
            "ldr r2, [r4, r6]",
            "lsr r3, r3, 8",
            "str r3, [r4, r7]",
            "sub r2, r2, 8",
            "cmp r2, 7",
            "str r2, [r4, r6]",
            "bgt 0xe05c",
            "movw r2, 0x7568",
            "ldr r3, [r4, 0x20]",
            "ldr r2, [r4, r2]",
            "cmp r2, r3",
            "bgt 0xe1e8",
            "movw r3, 0x756c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xe108",
            "movw r3, 0x757c",
            "movw r2, 0x756c",
            "ldr r3, [r4, r3]",
            "mov r1, 0",
            "str r1, [r4, r2]",
            "mvn r2, 0",
            "str r3, [r4, 0x1c]",
            "mvn r3, r2, lsl r3",
            "str r3, [r4, 0x20]",
            "movw r3, 0x7588",
            "ldr r3, [r4, r3]",
            "cmp r3, fp",
            "popne {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r5, 0x7590",
            "ldr r3, [r4, r5]",
            "cmp r3, 0",
            "ble 0xe230",
            "movw r7, 0x758c",
            "movw r6, 0x7594",
            "ldr r2, [r4, r7]",
            "add sb, r4, 0x7500",
            "ldr r3, [r4, r6]",
            "movw sl, 0x7580",
            "add sb, sb, 0x98",
            "mov r8, 0",
            "add r1, r4, r3",
            "add r3, r3, 1",
            "add r1, r1, 0x7500",
            "cmp r3, 0xfd",
            "add r1, r1, 0x98",
            "uxtb r0, r3",
            "str r3, [r4, r6]",
            "strb r2, [r1]",
            "ble 0xe190",
            "ldr r1, [r4, sl]",
            "bl rsym.gdPutC",
            "ldr r2, [r4, sl]",
            "mov r0, sb",
            "ldr r1, [r4, r6]",
            "bl rsym.gdPutBuf",
            "ldr r2, [r4, r7]",
            "mov r3, r8",
            "str r8, [r4, r6]",
            "ldr r1, [r4, r5]",
            "lsr r2, r2, 8",
            "str r2, [r4, r7]",
            "sub r1, r1, 8",
            "cmp r1, 0",
            "str r1, [r4, r5]",
            "bgt 0xe148",
            "cmp r3, 0",
            "pople {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r6, 0x7580",
            "uxtb r0, r3",
            "ldr r1, [r4, r6]",
            "movw r5, 0x7594",
            "bl rsym.gdPutC",
            "add r0, r4, 0x7500",
            "ldr r1, [r4, r5]",
            "add r0, r0, 0x98",
            "ldr r2, [r4, r6]",
            "bl rsym.gdPutBuf",
            "mov r3, 0",
            "str r3, [r4, r5]",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r3, 0x756c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0xe0e4",
            "ldr r3, [r4, 0x1c]",
            "add r3, r3, 1",
            "cmp r3, 0xc",
            "str r3, [r4, 0x1c]",
            "mvnne r2, 0",
            "moveq r3, 0x1000",
            "mvnne r3, r2, lsl r3",
            "streq r3, [r4, 0x20]",
            "strne r3, [r4, 0x20]",
            "movw r3, 0x7588",
            "ldr r3, [r4, r3]",
            "cmp r3, fp",
            "popne {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "b 0xe118",
            "movw r3, 0x7594",
            "ldr r3, [r4, r3]",
            "b 0xe1ac"
        ]
    },
    "fcn.0000e244": {
        "function_address": "0x0000e244",
        "instructions": [
            "add ip, r0, 0x4e00",
            "movw r1, 0x137b",
            "add ip, ip, 0x50",
            "mvn r2, 0",
            "mov r3, ip",
            "sub r1, r1, 0x10",
            "str r2, [r3, -0x40]",
            "cmn r1, 5",
            "str r2, [r3, -0x3c]",
            "str r2, [r3, -0x38]",
            "str r2, [r3, -0x34]",
            "str r2, [r3, -0x30]",
            "str r2, [r3, -0x2c]",
            "str r2, [r3, -0x28]",
            "str r2, [r3, -0x24]",
            "str r2, [r3, -0x20]",
            "str r2, [r3, -0x1c]",
            "str r2, [r3, -0x18]",
            "str r2, [r3, -0x14]",
            "str r2, [r3, -0x10]",
            "str r2, [r3, -0xc]",
            "str r2, [r3, -8]",
            "str r2, [r3, -4]",
            "sub r3, r3, 0x40",
            "bne 0xe258",
            "sub r3, ip, 0x4e00",
            "add r0, r0, 0x50",
            "sub r3, r3, 0x2c",
            "str r2, [r0, -4]!",
            "cmp r0, r3",
            "bne 0xe2b4",
            "bx lr"
        ]
    },
    "fcn.0000de3c": {
        "function_address": "0x0000de3c",
        "instructions": [
            "ldr r3, [r0, 8]",
            "ldr r2, [r0]",
            "add r3, r3, 1",
            "cmp r3, r2",
            "str r3, [r0, 8]",
            "bxne lr",
            "ldr r3, [r0, 0x18]",
            "mov r2, 0",
            "str r2, [r0, 8]",
            "cmp r3, r2",
            "beq 0xde98",
            "ldr r3, [r0, 0x14]",
            "cmp r3, 3",
            "addls pc, pc, r3, lsl 2",
            "b 0xde94",
            "b 0xdea8",
            "b 0xded0",
            "b 0xdef4",
            "b 0xde88",
            "ldr r3, [r0, 0xc]",
            "add r3, r3, 2",
            "str r3, [r0, 0xc]",
            "bx lr",
            "ldr r3, [r0, 0xc]",
            "add r3, r3, 1",
            "str r3, [r0, 0xc]",
            "bx lr",
            "ldr r3, [r0, 0xc]",
            "ldr r2, [r0, 4]",
            "add r3, r3, 8",
            "cmp r3, r2",
            "str r3, [r0, 0xc]",
            "movge r3, 1",
            "strge r3, [r0, 0x14]",
            "movge r3, 4",
            "strge r3, [r0, 0xc]",
            "bx lr",
            "ldr r3, [r0, 0xc]",
            "ldr r2, [r0, 4]",
            "add r3, r3, 8",
            "cmp r3, r2",
            "str r3, [r0, 0xc]",
            "movge r3, 2",
            "strge r3, [r0, 0x14]",
            "strge r3, [r0, 0xc]",
            "bx lr",
            "ldr r3, [r0, 0xc]",
            "ldr r2, [r0, 4]",
            "add r3, r3, 4",
            "cmp r3, r2",
            "str r3, [r0, 0xc]",
            "movge r3, 3",
            "strge r3, [r0, 0x14]",
            "movge r3, 1",
            "strge r3, [r0, 0xc]",
            "bx lr"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00003270",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xf90]!"
        ]
    },
    "sym.imp.vfprintf": {
        "function_address": "0x00003654",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x1a000",
            "ldr pc, [ip, 0xcf8]!"
        ]
    }
}