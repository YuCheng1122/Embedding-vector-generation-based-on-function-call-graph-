{
    "fcn.000096e8": {
        "function_address": "0x000096e8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r2, [r1]",
            "mov r6, r0",
            "mov r1, 0x20",
            "mov r0, 1",
            "ldr r3, [0x00009828]",
            "str r2, [r3]",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "beq 0x97f4",
            "mov r2, 0",
            "mov r3, r4",
            "str r2, [r3], 4",
            "add r3, r3, 4",
            "str r2, [r4, 4]",
            "str r2, [r3], 4",
            "str r2, [r3], 4",
            "str r2, [r3], 4",
            "str r2, [r3], 4",
            "str r2, [r3], 4",
            "str r2, [r3]",
            "bl fcn.00009468",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x97e0",
            "ldr r3, [0x0000982c]",
            "ldrh r3, [r3, 4]",
            "tst r3, 2",
            "beq 0x9778",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "ldr r0, aav.0x0000c8d4",
            "mov r2, 0x27",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "ldr r3, [0x00009838]",
            "mov r0, 0x11",
            "ldr r1, aav.0x00009224",
            "str r4, [r3]",
            "bl sym.imp.signal",
            "ldr r1, aav.0x000091f0",
            "mov r0, 0xe",
            "bl sym.imp.signal",
            "ldr r1, aav.0x000091d0",
            "mov r0, 0xf",
            "bl sym.imp.signal",
            "ldr r1, aav.0x000091bc",
            "mov r0, 0xd",
            "bl sym.imp.signal",
            "ldr r1, aav.0x000091d0",
            "mov r0, 6",
            "bl sym.imp.signal",
            "mov r1, r5",
            "mov r2, r4",
            "mov r0, r6",
            "bl fcn.0000aa38",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}",
            "mov r0, r4",
            "bl fcn.000093c0",
            "cmp r0, 0",
            "bne 0x9750",
            "b 0x9778",
            "ldr r3, [0x0000982c]",
            "ldrh r3, [r3, 4]",
            "tst r3, 1",
            "bne 0x980c",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x30",
            "ldr r0, aav.0x0000c8a0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0x9804"
        ]
    },
    "sym.imp.calloc": {
        "function_address": "0x00008eb0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2ac]!"
        ]
    },
    "fcn.00009468": {
        "function_address": "0x00009468",
        "instructions": [
            "ldr r3, aav.0x0000c890",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x4f0",
            "mov lr, 0",
            "sub sp, sp, 4",
            "ldm r3, {r0, r1, r2, r3}",
            "add ip, sp, 0x4d0",
            "add ip, ip, 8",
            "strb lr, [r4]",
            "stm ip!, {r0, r1, r2}",
            "add r0, sp, 0x4d0",
            "add r0, r0, 8",
            "ldr r1, aav.0x0000c940",
            "strh r3, [ip]",
            "bl sym.imp.fopen",
            "subs sb, r0, 0",
            "beq 0x9628",
            "add r6, sp, 0x10",
            "mov r1, 0x3e8",
            "sub r6, r6, 4",
            "mov r2, sb",
            "mov r0, r6",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x9620",
            "mov r0, r6",
            "mov r1, 0x3e8",
            "mov r2, sb",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x9620",
            "add sl, sp, 0x4b0",
            "add r8, sp, 0x3f4",
            "mov fp, 3",
            "add sl, sl, 8",
            "add r3, r8, 4",
            "str r3, [sp, 4]",
            "mov r0, r6",
            "mov r1, 0x3e8",
            "mov r2, sb",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x9620",
            "str r6, [sp, 0x4e8]",
            "bl sym.imp.__ctype_b_loc",
            "mov r3, r6",
            "ldr r1, [r0]",
            "b 0x9530",
            "str r3, [sp, 0x4e8]",
            "ldrb r2, [r3], 1",
            "lsl r2, r2, 1",
            "ldrh r5, [r1, r2]",
            "ands r5, r5, 0x20",
            "bne 0x952c",
            "add r0, sp, 0x4e0",
            "ldr r1, aav.0x0000ca44",
            "add r0, r0, 8",
            "bl sym.imp.strsep",
            "subs r7, r0, 0",
            "beq 0x9500",
            "mov r1, r7",
            "mov r2, 0xf",
            "mov r0, r4",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "strb r5, [r4, 0xf]",
            "mov r2, r5",
            "mov r1, r0",
            "bl sym.imp.socket",
            "subs r5, r0, 0",
            "blt 0x966c",
            "mov r1, 0",
            "mov r2, 0xc4",
            "mov r0, r8",
            "bl sym.imp.memset",
            "mov r1, r7",
            "mov r2, 0x10",
            "mov r0, sl",
            "str fp, [sp, 0x3f4]",
            "str r8, [sp, 0x4c8]",
            "bl sym.imp.strncpy",
            "mov r0, r5",
            "movw r1, 0x8946",
            "mov r2, sl",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "blt 0x9634",
            "add r0, sp, 0x4e0",
            "ldr r1, [sp, 4]",
            "mov r2, fp",
            "add r0, r0, 0xc",
            "bl sym.imp.strncpy",
            "mov r0, r5",
            "bl sym.imp.close",
            "add r0, sp, 0x4e0",
            "ldr r1, aav.0x0000c88c",
            "add r0, r0, 0xc",
            "mov r2, 2",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x9658",
            "mov r3, 0",
            "mov r0, r6",
            "strb r3, [r4]",
            "mov r1, 0x3e8",
            "mov r2, sb",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0x9518",
            "mov r0, sb",
            "bl sym.imp.fclose",
            "add sp, sp, 0xf4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "bl sym.imp.__errno_location",
            "ldr r3, [r0]",
            "cmp r3, 1",
            "beq 0x9678",
            "mov r3, 0",
            "mov r0, r5",
            "strb r3, [sp, 0x4ec]",
            "bl sym.imp.close",
            "b 0x9600",
            "mov r0, r4",
            "bl fcn.000093c0",
            "cmp r0, 0",
            "bne 0x9600",
            "b 0x9620",
            "ldr r0, aav.0x0000c850",
            "bl fcn.0000917c",
            "ldr r0, aav.0x0000c87c",
            "bl fcn.0000917c"
        ]
    },
    "sym.imp.fwrite": {
        "function_address": "0x00009018",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1bc]!"
        ]
    },
    "sym.imp.signal": {
        "function_address": "0x00008f28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x25c]!"
        ]
    },
    "fcn.0000aa38": {
        "function_address": "0x0000aa38",
        "instructions": [
            "ldr ip, [0x0000b608]",
            "mov r3, 2",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x84",
            "str r2, [sp, 0x10]",
            "mov r2, r3",
            "str r3, [ip, 0x10]",
            "bl fcn.00009e20",
            "subs sb, r0, 0",
            "blt 0xabcc",
            "bl fcn.0000b75c",
            "cmp r0, 0",
            "blt 0xabdc",
            "add r2, sp, 0x38",
            "ldr r0, [sp, 0x10]",
            "add r2, r2, 4",
            "add r1, sp, 0x68",
            "add r3, r2, 4",
            "str r2, [sp, 0x20]",
            "add ip, r3, 4",
            "str r3, [sp, 0x24]",
            "add r3, ip, 4",
            "mov r2, 0",
            "str ip, [sp, 0x28]",
            "add ip, r3, 4",
            "str r2, [sp, 0x1c]",
            "add fp, sp, 0x58",
            "str r2, [sp, 0x34]",
            "str r2, [sp, 0x14]",
            "add r2, ip, 4",
            "ldr r8, [0x0000b60c]",
            "ldr r5, [0x0000b610]",
            "ldr r6, [0x0000b614]",
            "str r3, [sp, 0x2c]",
            "str ip, [sp, 0x30]",
            "str r2, [sp, 0x18]",
            "bl fcn.00009854",
            "mvn r3, 0",
            "mov r4, 0",
            "str r3, [r6]",
            "mov r0, sb",
            "mov r3, 0x10",
            "mov r1, fp",
            "add r2, sp, 0x78",
            "str r4, [sp, 0x7c]",
            "str r3, [sp, 0x78]",
            "bl fcn.00009a18",
            "cmn r0, 1",
            "str r0, [r6]",
            "beq 0xae24",
            "ldr r0, [0x0000b614]",
            "mov r1, r4",
            "bl fcn.0000a354",
            "cmp r0, r4",
            "str r0, [r5]",
            "beq 0xae00",
            "mov r1, r4",
            "bl fcn.0000a5f0",
            "ldrh r3, [r8]",
            "tst r3, 2",
            "bne 0xae4c",
            "ldr r3, [r5]",
            "ldr r7, [r3, 4]",
            "cmp r7, 0",
            "moveq r4, r7",
            "bne 0xaec8",
            "mov r0, r4",
            "bl fcn.0000a5f4",
            "cmn r0, 1",
            "mov sl, r0",
            "beq 0xadf4",
            "ldr r7, [r5]",
            "ldr r3, [r7, 8]",
            "tst r3, 0x200",
            "beq 0xac0c",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0xabb0",
            "ldr r3, [r7, 4]",
            "cmp r3, 3",
            "bls 0xabb0",
            "mov r3, 1",
            "mov r2, 4",
            "str r3, [r4]",
            "ldrh r3, [r8]",
            "str r2, [r7, 4]",
            "tst r3, 2",
            "bne 0xb14c",
            "ldr r0, [sp, 0x10]",
            "mov r1, r4",
            "mov r2, 0",
            "bl fcn.0000a8b4",
            "cmp r0, 0",
            "blt 0xb178",
            "ldr r0, [r6]",
            "bl fcn.0000a948",
            "cmp r4, 0",
            "beq 0xaacc",
            "mov r0, r4",
            "bl sym.imp.free",
            "b 0xaacc",
            "ldr r3, [0x0000b60c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0xabec",
            "mvn r7, 0",
            "mov r0, r7",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x29",
            "ldr r0, aav.0x0000cd3c",
            "mvn r7, 0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xabe0",
            "tst r3, 8",
            "beq 0xac68",
            "ldr r3, [0x0000b620]",
            "cmp r4, 0",
            "mov r2, 1",
            "str r2, [r3]",
            "beq 0xac38",
            "mov r0, r4",
            "mov r1, 0x25",
            "bl sym.imp.strchr",
            "str r0, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [sp, 0x10]",
            "bl fcn.0000c7c4",
            "subs sl, r0, 0",
            "ble 0xafd8",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "ldrne r7, [r5]",
            "ldreq r7, [r5]",
            "ldrne r3, [r7, 8]",
            "ldreq r3, [r7, 8]",
            "strne sl, [r7, 4]",
            "tst r3, 0x20",
            "bne 0xac90",
            "ldr r3, [r7]",
            "movw r2, 0x2710",
            "cmp r3, r2",
            "movwhi r2, 0xebe0",
            "movthi r2, 0x1b",
            "addhi r2, r3, r2",
            "strhi r2, [r7]",
            "ldrhi r7, [r5]",
            "ldr r3, [r7, 8]",
            "tst r3, 3",
            "beq 0xaca8",
            "ldrb r2, [r7, 0x14]",
            "cmp r2, 0",
            "bne 0xaf44",
            "tst r3, 0x41",
            "beq 0xad38",
            "ldr ip, [r7, 4]",
            "ldr r3, [r7, 8]",
            "cmp ip, 0",
            "moveq r4, 0",
            "tst r3, 1",
            "beq 0xad14",
            "ldr sl, [r7]",
            "movw r1, 0x107",
            "subs r2, r4, 0",
            "movne r2, 1",
            "cmp sl, r1",
            "movne r2, 0",
            "cmp r2, 0",
            "bne 0xb060",
            "mov r3, ip",
            "mov r1, sl",
            "mov ip, 1",
            "ldr r0, [sp, 0x10]",
            "mov r2, r4",
            "str ip, [sp]",
            "bl fcn.0000933c",
            "ldrh r3, [r8]",
            "mov sl, r0",
            "tst r3, 2",
            "bne 0xb42c",
            "cmn sl, 0x2d",
            "beq 0xb268",
            "ldr r7, [r5]",
            "ldr r3, [r7, 8]",
            "tst r3, 0x40",
            "bne 0xafe4",
            "mov r2, 1",
            "mov r3, r2",
            "str r2, [r7, 8]",
            "tst r3, 0x82",
            "beq 0xadac",
            "ldr ip, [r7]",
            "movw r2, 0x106",
            "subs r3, r4, 0",
            "movne r3, 1",
            "cmp ip, r2",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0xad80",
            "ldr r2, [r7, 4]",
            "mov r0, r4",
            "ldr r1, aav.0x0000d028",
            "str ip, [sp, 8]",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldr ip, [sp, 8]",
            "beq 0xb414",
            "ldr r3, [r7, 8]",
            "tst r3, 2",
            "bne 0xb03c",
            "cmn sl, 0x2d",
            "beq 0xb2a8",
            "ldr r3, [r5]",
            "ldr r2, [r3, 8]",
            "tst r2, 0x80",
            "bne 0xb00c",
            "mov r2, 2",
            "str r2, [r3, 8]",
            "ldrh r3, [r8]",
            "tst r3, 2",
            "bne 0xaefc",
            "add r1, sp, 0x68",
            "ldr r0, [sp, 0x10]",
            "bl fcn.00009864",
            "ldr r0, [sp, 0x10]",
            "mov r1, r4",
            "mov r2, sl",
            "bl fcn.0000a8b4",
            "cmp r0, 0",
            "blt 0xaf1c",
            "ldr r3, [r5]",
            "ldr r3, [r3, 8]",
            "cmp r3, 8",
            "beq 0xadf4",
            "ldr r0, [r6]",
            "bl fcn.0000a948",
            "cmp r4, 0",
            "bne 0xabc0",
            "b 0xaacc",
            "ldrh r3, [r8]",
            "tst r3, 4",
            "beq 0xaacc",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "mov r2, 0x29",
            "ldr r0, aav.0x0000cd68",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "ldrh r3, [r8]",
            "tst r3, 4",
            "beq 0xaacc",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "mov r2, 0x29",
            "ldr r0, aav.0x0000cd68",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xaacc",
            "movw r3, 0x82bc",
            "ldr r4, obj.stdout",
            "movt r3, 1",
            "ldr r1, aav.0x0000cd94",
            "ldr ip, [r3]",
            "ldr r0, [r4]",
            "ldm ip, {r2, r3, lr}",
            "str lr, [sp]",
            "ldr ip, [ip, 0x10]",
            "str ip, [sp, 4]",
            "bl sym.imp.fprintf",
            "movw ip, 0x6218",
            "movt ip, 1",
            "ldrh r3, [ip]",
            "tst r3, 2",
            "beq 0xab2c",
            "movw r2, 0x82bc",
            "ldr r0, [r4]",
            "movt r2, 1",
            "ldr r1, aav.0x0000cda4",
            "ldr ip, [r2]",
            "ldm ip, {r2, r3, lr}",
            "str lr, [sp]",
            "ldr ip, [ip, 0xc]",
            "str ip, [sp, 4]",
            "bl sym.imp.fprintf",
            "ldr r3, [r5]",
            "ldr r7, [r3, 4]",
            "cmp r7, 0",
            "moveq r4, r7",
            "beq 0xab40",
            "mov r0, r7",
            "bl sym.imp.malloc",
            "subs r4, r0, 0",
            "bne 0xab40",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xaacc",
            "ldr r3, obj.stderr",
            "mov r2, r7",
            "ldr r1, aav.0x0000cddc",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0xaacc",
            "ldr r3, [r5]",
            "ldr r0, obj.stdout",
            "ldr r1, aav.0x0000d07c",
            "ldr r2, [r3]",
            "ldr r0, [r0]",
            "ldr r3, [r3, 4]",
            "bl sym.imp.fprintf",
            "b 0xadb8",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xaddc",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x17",
            "ldr r0, aav.0x0000ce0c",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xaddc",
            "ldr ip, [sp, 0x20]",
            "mov r3, 0",
            "add r1, r7, 0x14",
            "mov r2, 0x10",
            "add r0, sp, 0x38",
            "str r3, [sp, 0x38]",
            "str r3, [ip]",
            "ldr ip, [sp, 0x24]",
            "str r3, [ip]",
            "ldr ip, [sp, 0x28]",
            "str r3, [ip]",
            "ldr ip, [sp, 0x2c]",
            "str r3, [ip]",
            "ldr ip, [sp, 0x30]",
            "str r3, [ip]",
            "ldr ip, [sp, 0x18]",
            "str r3, [ip]",
            "str r3, [ip, 4]",
            "bl sym.imp.strncpy",
            "add r0, sp, 0x38",
            "bl fcn.000093c0",
            "cmp r0, 0",
            "beq 0xb2e8",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "bne 0xb358",
            "ldr ip, [r5]",
            "mov r3, 0",
            "ldr r0, [sp, 0x10]",
            "mov r1, r3",
            "mvn r2, 0x27",
            "str r3, [ip, 4]",
            "bl fcn.0000a8b4",
            "cmp r4, 0",
            "beq 0xafd8",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r0, [r6]",
            "bl fcn.0000a948",
            "b 0xaacc",
            "ldr r1, [r7]",
            "mov ip, 1",
            "ldr r3, [r7, 4]",
            "mov r2, r4",
            "ldr r0, [sp, 0x10]",
            "str ip, [sp]",
            "bl fcn.000092a8",
            "ldr r7, [r5]",
            "mov sl, r0",
            "b 0xad2c",
            "ldr r1, [r3]",
            "mov r2, r4",
            "ldr r3, [r3, 4]",
            "mov ip, 0",
            "ldr r0, [sp, 0x10]",
            "str ip, [sp]",
            "bl fcn.000092a8",
            "movw r2, 0x82bc",
            "mov sl, r0",
            "movt r2, 1",
            "ldr r3, [r2]",
            "b 0xada4",
            "ldr r3, [r7, 4]",
            "mov r1, ip",
            "ldr r0, [sp, 0x10]",
            "mov ip, 0",
            "mov r2, r4",
            "str ip, [sp]",
            "bl fcn.0000933c",
            "mov sl, r0",
            "b 0xad8c",
            "mov r2, ip",
            "mov r0, r4",
            "ldr r1, aav.0x0000ce68",
            "str r3, [sp, 0xc]",
            "str ip, [sp, 8]",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldr r3, [sp, 0xc]",
            "ldr ip, [sp, 8]",
            "bne 0xb0c0",
            "ldrh r2, [r8]",
            "tst r2, 2",
            "moveq sl, 0",
            "beq 0xad24",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "ldr r0, aav.0x0000ce70",
            "mov r2, 0x13",
            "mov sl, 0",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "ldr r7, [r5]",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "mov r2, ip",
            "mov r0, r4",
            "ldr r1, aav.0x0000ce84",
            "str ip, [sp, 8]",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldr ip, [sp, 8]",
            "bne 0xb1a0",
            "ldrh r3, [r8]",
            "ands r3, r3, 2",
            "bne 0xb494",
            "ldr ip, [sp, 0x34]",
            "cmp ip, 0",
            "bne 0xb3d8",
            "cmp r3, 0",
            "bne 0xb130",
            "ldr r0, aav.0x0000cebc",
            "ldr r1, aav.0x0000cecc",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "beq 0xb5b4",
            "ldr r7, [r5]",
            "mov r2, 1",
            "str r2, [sp, 0x34]",
            "mov sl, 0",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "mov r2, 0x11",
            "ldr r0, aav.0x0000cea8",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb100",
            "ldr r3, obj.stdout",
            "ldr r1, aav.0x0000cdf8",
            "ldr r2, [r4]",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "ldr r0, [sp, 0x10]",
            "mov r1, r4",
            "mov r2, 0",
            "bl fcn.0000a8b4",
            "cmp r0, 0",
            "bge 0xabb0",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xabb0",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x17",
            "ldr r0, aav.0x0000ce0c",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xabb0",
            "mov r2, ip",
            "mov r0, r4",
            "ldr r1, aav.0x0000cefc",
            "str ip, [sp, 8]",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldr ip, [sp, 8]",
            "bne 0xb204",
            "ldrh r3, [r8]",
            "ands r3, r3, 2",
            "bne 0xb50c",
            "ldr ip, [sp, 0x34]",
            "cmp ip, 0",
            "bne 0xb470",
            "cmp r3, 0",
            "ldreq r0, aav.0x0000cf40",
            "beq 0xb104",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "ldr r0, aav.0x0000cf28",
            "mov r2, 0x17",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "ldr r0, aav.0x0000cf40",
            "b 0xb104",
            "mov r2, ip",
            "mov r0, r4",
            "ldr r1, aav.0x0000cf68",
            "str ip, [sp, 8]",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldr ip, [sp, 8]",
            "bne 0xace8",
            "ldrh r3, [r8]",
            "tst r3, 2",
            "bne 0xb4f0",
            "ldr r2, [sp, 0x1c]",
            "cmp r2, 0",
            "beq 0xb4d4",
            "ldr r2, [r5]",
            "add r0, r4, 0x11",
            "ldr r3, [sp, 0x1c]",
            "mov r1, 1",
            "mov sl, 0",
            "ldr r2, [r2, 4]",
            "sub r2, r2, 0x11",
            "bl sym.imp.fwrite",
            "ldr r7, [r5]",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "mov r2, 0",
            "add ip, sp, 0x7c",
            "ldr r0, [sp, 0x10]",
            "mov r3, r2",
            "ldr r1, aav.0x0000cfd8",
            "str ip, [sp]",
            "bl fcn.0000a67c",
            "cmp r0, 0",
            "beq 0xb314",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "bne 0xb538",
            "ldr r0, [sp, 0x10]",
            "add r1, sp, 0x68",
            "bl fcn.00009864",
            "b 0xad1c",
            "mov r2, 0",
            "add ip, sp, 0x7c",
            "ldr r0, [sp, 0x10]",
            "mov r3, r2",
            "ldr r1, aav.0x0000cfd8",
            "str ip, [sp]",
            "bl fcn.0000a67c",
            "cmp r0, 0",
            "beq 0xb374",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "bne 0xb554",
            "ldr r0, [sp, 0x10]",
            "add r1, sp, 0x68",
            "bl fcn.00009864",
            "b 0xad94",
            "ldr r1, [r5]",
            "ldr r0, [sp, 0x10]",
            "add r1, r1, 0x14",
            "bl fcn.00009864",
            "cmp r0, 0",
            "beq 0xb3b8",
            "movw r2, 0x82bc",
            "movt r2, 1",
            "ldr r7, [r2]",
            "ldr r3, [r7, 8]",
            "b 0xaca8",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xb298",
            "ldr r7, obj.stderr",
            "ldr r1, aav.0x0000d004",
            "ldr r2, [sp, 0x7c]",
            "ldr r0, [r7]",
            "bl sym.imp.fprintf",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xb298",
            "mov r1, 1",
            "mov r2, 0x1c",
            "ldr r3, [r7]",
            "ldr r0, aav.0x0000d008",
            "bl sym.imp.fwrite",
            "b 0xb298",
            "ldr r2, [r5]",
            "ldr r3, obj.stderr",
            "ldr r1, aav.0x0000ce24",
            "add r2, r2, 0x14",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0xafac",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xb2d8",
            "ldr r7, obj.stderr",
            "ldr r1, aav.0x0000d004",
            "ldr r2, [sp, 0x7c]",
            "ldr r0, [r7]",
            "bl sym.imp.fprintf",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "beq 0xb2d8",
            "mov r1, 1",
            "mov r2, 0x1b",
            "ldr r3, [r7]",
            "ldr r0, aav.0x0000d060",
            "bl sym.imp.fwrite",
            "b 0xb2d8",
            "ldrh r3, [r8]",
            "tst r3, 4",
            "bne 0xb570",
            "movw r3, 0x82bc",
            "movt r3, 1",
            "ldr r7, [r3]",
            "ldr r3, [r7, 8]",
            "b 0xaca8",
            "cmp r3, 0",
            "bne 0xb598",
            "ldr r2, [sp, 0x1c]",
            "cmp r2, 0",
            "beq 0xb4c0",
            "mov r3, 0",
            "ldr r0, [sp, 0x1c]",
            "str r3, [sp, 0x1c]",
            "mov sl, 0",
            "bl sym.imp.fclose",
            "ldr r7, [r5]",
            "ldr ip, [sp, 0x1c]",
            "str ip, [sp, 0x34]",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "mov r0, r4",
            "mov r7, sl",
            "bl sym.imp.free",
            "mov r0, sb",
            "bl fcn.0000a948",
            "b 0xabe0",
            "ldr r3, [r5]",
            "ldr r7, obj.stdout",
            "ldr r1, aav.0x0000cfac",
            "ldr r2, [r3]",
            "ldr r0, [r7]",
            "ldr r3, [r3, 4]",
            "bl sym.imp.fprintf",
            "movw ip, 0x6218",
            "movt ip, 1",
            "ldrh r3, [ip]",
            "tst r3, 2",
            "beq 0xad14",
            "ldr r0, [r7]",
            "mov r2, sl",
            "ldr r1, aav.0x0000cfc8",
            "bl sym.imp.fprintf",
            "b 0xad14",
            "cmp r3, 0",
            "beq 0xb3e0",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "mov r2, 0x19",
            "ldr r0, aav.0x0000cf4c",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb3e0",
            "ldr r3, obj.stdout",
            "mov r2, 0x17",
            "mov r1, 1",
            "ldr r0, aav.0x0000ce90",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "movw r2, 0x6218",
            "movt r2, 1",
            "ldrh r3, [r2]",
            "and r3, r3, 2",
            "b 0xb0ec",
            "ldr r7, [r5]",
            "mov sl, 0",
            "str r2, [sp, 0x34]",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "bne 0xb5d8",
            "ldr r7, [r5]",
            "mov sl, 0",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "mov r2, 0x17",
            "ldr r0, aav.0x0000cf74",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb230",
            "ldr r3, obj.stdout",
            "mov r2, 0x1d",
            "mov r1, 1",
            "ldr r0, aav.0x0000cf08",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "movw r2, 0x6218",
            "movt r2, 1",
            "ldrh r3, [r2]",
            "and r3, r3, 2",
            "b 0xb1cc",
            "ldr r7, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x1d",
            "ldr r0, aav.0x0000cfe4",
            "ldr r3, [r7]",
            "bl sym.imp.fwrite",
            "b 0xb334",
            "ldr r7, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x2e",
            "ldr r0, aav.0x0000d030",
            "ldr r3, [r7]",
            "bl sym.imp.fwrite",
            "b 0xb394",
            "ldr r3, obj.stdout",
            "ldr r2, [sp, 0x10]",
            "ldr r1, aav.0x0000ce48",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "movw ip, 0x82bc",
            "movt ip, 1",
            "ldr r7, [ip]",
            "ldr r3, [r7, 8]",
            "b 0xaca8",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "mov r2, 0x13",
            "ldr r0, aav.0x0000cee8",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb3e0",
            "ldrh r3, [r8]",
            "tst r3, 1",
            "bne 0xb5f4",
            "ldr r7, [r5]",
            "mov r3, 1",
            "str r3, [sp, 0x34]",
            "mov sl, 0",
            "ldr r3, [r7, 8]",
            "b 0xad24",
            "ldr r0, aav.0x0000cf8c",
            "mov r1, 1",
            "mov r2, 0x1f",
            "ldr r3, obj.stderr",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb4e0",
            "mov r1, 1",
            "ldr r0, aav.0x0000ced0",
            "mov r2, 0x14",
            "str r1, [sp, 0x34]",
            "b 0xb5e4"
        ]
    },
    "sym.imp.free": {
        "function_address": "0x0000909c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x164]!"
        ]
    },
    "fcn.000093c0": {
        "function_address": "0x000093c0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x10",
            "mov r4, 0",
            "add r5, sp, 0xc",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, 4",
            "mov r6, r0",
            "str r4, [sp]",
            "bl fcn.0000933c",
            "cmp r0, 0",
            "bge 0x93f8",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}",
            "ldr r2, [sp, 0xc]",
            "movw r3, 0x6c77",
            "movt r3, 0x14e4",
            "cmp r2, r3",
            "mvnne r0, 0",
            "bne 0x93f0",
            "mov r0, r6",
            "mov r1, 1",
            "mov r2, r5",
            "mov r3, 4",
            "str r4, [sp]",
            "bl fcn.0000933c",
            "cmp r0, 0",
            "blt 0x93f0",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 2",
            "movle r0, r4",
            "ble 0x93f0",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000c858",
            "mov r2, 0x21",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "b 0x93f0"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x00009030",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1ac]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x00009128",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00009168]",
            "cmp r3, 0",
            "beq 0x9144",
            "ldr r0, aav.0x0000d3bc",
            "ldr r1, [0x00009170]",
            "bl loc.imp.__register_frame_info",
            "ldr r0, [0x00009174]",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "ldr r3, [0x00009178]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "blx r3",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00009084",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x174]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x000090e4",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x0000911c]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "popne {r3, pc}",
            "ldr r3, [0x00009120]",
            "cmp r3, 0",
            "beq 0x910c",
            "ldr r0, aav.0x0000d3bc",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x0000911c]",
            "mov r2, 1",
            "strb r2, [r3]",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00008eec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x284]!"
        ]
    },
    "fcn.0000917c": {
        "function_address": "0x0000917c",
        "instructions": [
            "movw r3, 0x6238",
            "movw r2, 0x82a4",
            "movt r3, 1",
            "movt r2, 1",
            "movw r1, 0xc848",
            "push {r4, lr}",
            "movt r1, 0",
            "ldr r2, [r2]",
            "mov r4, r0",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "bl sym.imp.perror",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00008ebc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2a4]!"
        ]
    },
    "sym.imp.perror": {
        "function_address": "0x00008e08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x31c]!"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x00009024",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1b4]!"
        ]
    },
    "fcn.0000933c": {
        "function_address": "0x0000933c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "mov r0, 2",
            "sub sp, sp, 0x1c",
            "mov r5, r1",
            "mov r6, r2",
            "mov r1, r0",
            "mov r2, 0",
            "mov sl, r3",
            "ldrb r8, [sp, 0x38]",
            "bl sym.imp.socket",
            "subs r7, r0, 0",
            "blt 0x93b0",
            "str sp, [r4, 0x10]",
            "mov r2, r4",
            "mov r0, r7",
            "movw r1, 0x89f0",
            "stm sp, {r5, r6, sl}",
            "strb r8, [sp, 0xc]",
            "bl sym.imp.ioctl",
            "subs r4, r0, 0",
            "bge 0x939c",
            "cmp r5, 0",
            "mvnne r4, 0x2c",
            "mov r0, r7",
            "bl sym.imp.close",
            "mov r0, r4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, aav.0x0000c850",
            "bl fcn.0000917c"
        ]
    },
    "sym.imp.socket": {
        "function_address": "0x00008e50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2ec]!"
        ]
    },
    "sym.imp.ioctl": {
        "function_address": "0x00008d6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x384]!"
        ]
    },
    "sym.imp.close": {
        "function_address": "0x00009090",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x16c]!"
        ]
    },
    "sym.imp.fopen": {
        "function_address": "0x00008fac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x204]!"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x00008de4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x334]!"
        ]
    },
    "sym.imp.__ctype_b_loc": {
        "function_address": "0x0000900c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1c4]!"
        ]
    },
    "sym.imp.strsep": {
        "function_address": "0x00009000",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1cc]!"
        ]
    },
    "sym.imp.strncpy": {
        "function_address": "0x00008f4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x244]!"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x00008fb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1fc]!"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x00008f40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x24c]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x00008fd0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1ec]!"
        ]
    },
    "fcn.00009e20": {
        "function_address": "0x00009e20",
        "instructions": [
            "ldr r3, aav.0x0000ca98",
            "mov ip, r0",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "cmp r0, 3",
            "mov r6, r1",
            "sub sp, sp, 0x40",
            "mov r4, r2",
            "add r5, sp, 0xc",
            "ldm r3, {r0, r1}",
            "str r0, [sp, 0xc]",
            "strb r1, [sp, 0x10]",
            "beq 0x9ee0",
            "cmp ip, 2",
            "bne 0xa0e8",
            "bl sym.imp.__ctype_b_loc",
            "ldr r1, [r6, 4]",
            "ldr r2, [r0]",
            "ldrb r3, [r1]",
            "lsl r3, r3, 1",
            "ldrh r3, [r2, r3]",
            "tst r3, 4",
            "bne 0xa0a0",
            "tst r3, 8",
            "movne r0, r1",
            "beq 0x9ec8",
            "bl sym.imp.atoi",
            "uxth r7, r0",
            "ldr r6, [0x0000a0f4]",
            "ldrh r3, [r6]",
            "tst r3, 2",
            "bne 0x9f54",
            "mov r1, 0",
            "mov r0, r4",
            "mov r2, r1",
            "mov r3, r1",
            "bl fcn.00009d3c",
            "ldr r4, [r0]",
            "cmn r4, 1",
            "bne 0x9f8c",
            "mov r0, r4",
            "add sp, sp, 0x40",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [0x0000a0f4]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0xa050",
            "mvn r0, 0",
            "b 0x9ec0",
            "bl sym.imp.__ctype_b_loc",
            "ldr r1, [r6, 4]",
            "add r6, r6, 4",
            "ldr r7, [r0]",
            "ldrb r3, [r1]",
            "lsl r3, r3, 1",
            "ldrh r3, [r7, r3]",
            "tst r3, 4",
            "beq 0xa070",
            "mov r0, r5",
            "bl sym.imp.strcpy",
            "ldr r0, [r6, 4]",
            "ldrb r3, [r0]",
            "lsl r3, r3, 1",
            "ldrh r3, [r7, r3]",
            "tst r3, 8",
            "bne 0x9e84",
            "ldr r3, [0x0000a0f4]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0x9ed8",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000cacc",
            "mov r2, 0x1b",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "b 0x9ec0",
            "ldr r0, obj.stdout",
            "mov r2, r5",
            "ldr r1, aav.0x0000caf8",
            "mov r3, r7",
            "ldr r0, [r0]",
            "bl sym.imp.fprintf",
            "mov r1, 0",
            "mov r0, r4",
            "mov r2, r1",
            "mov r3, r1",
            "bl fcn.00009d3c",
            "ldr r4, [r0]",
            "cmn r4, 1",
            "beq 0x9ebc",
            "mov r8, 1",
            "add r3, sp, 0x40",
            "str r8, [r3, -4]!",
            "mov sl, 4",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 2",
            "str sl, [sp]",
            "bl sym.imp.setsockopt",
            "cmn r0, 1",
            "mov sb, r0",
            "beq 0xa0b0",
            "add sb, sp, 0x2c",
            "mov r3, 0",
            "add r2, sb, 8",
            "mov r1, sb",
            "str r3, [r2], 4",
            "mov r0, r5",
            "str r3, [r2]",
            "str r3, [sp, 0x2c]",
            "str r3, [sp, 0x30]",
            "bl fcn.00009c70",
            "lsr r3, r7, 8",
            "mov r0, r4",
            "mov r1, sb",
            "orr r7, r3, r7, lsl 8",
            "mov r2, 0x10",
            "mov r3, 2",
            "strh r3, [sp, 0x2c]",
            "strh r7, [sp, 0x2e]",
            "bl fcn.00009948",
            "cmn r0, 1",
            "beq 0x9ec0",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.000099b0",
            "cmn r0, 1",
            "beq 0x9ec0",
            "ldrh r3, [r6]",
            "tst r3, 4",
            "beq 0x9ebc",
            "ldr r3, obj.stdout",
            "mov r1, r8",
            "ldr r0, aav.0x0000cb3c",
            "mov r2, 0x21",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, r4",
            "b 0x9ec0",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000cae8",
            "mov r2, 0xc",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "b 0x9ec0",
            "ldr r3, [0x0000a0f4]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0x9ed8",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000caa0",
            "mov r2, 0x28",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "b 0x9ec0",
            "mov r0, r5",
            "mov r7, 0x1f40",
            "bl sym.imp.strcpy",
            "b 0x9e8c",
            "ldr r0, aav.0x0000cb20",
            "bl sym.imp.perror",
            "ldrh r3, [r6]",
            "tst r3, 1",
            "moveq r0, sb",
            "beq 0x9ec0",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, sb",
            "b 0x9ec0",
            "mov r7, 0x1f40",
            "b 0x9e8c"
        ]
    },
    "fcn.0000b75c": {
        "function_address": "0x0000b75c",
        "instructions": [
            "push {r3, lr}",
            "movw r1, 0x309",
            "ldr r0, aav.0x0000d0b8",
            "bl sym.imp.mkdir",
            "cmp r0, 0",
            "blt 0xb77c",
            "mov r0, 1",
            "pop {r3, pc}",
            "bl sym.imp.__errno_location",
            "ldr r3, [r0]",
            "cmp r3, 0x11",
            "mvnne r0, 0",
            "moveq r0, 1",
            "pop {r3, pc}"
        ]
    },
    "fcn.00009854": {
        "function_address": "0x00009854",
        "instructions": [
            "mov r3, r0",
            "mov r0, r1",
            "mov r1, r3",
            "b sym.imp.strcpy"
        ]
    },
    "fcn.00009a18": {
        "function_address": "0x00009a18",
        "instructions": [
            "push {r4, lr}",
            "bl sym.imp.accept",
            "cmn r0, 1",
            "mov r4, r0",
            "beq 0x9a34",
            "mov r0, r4",
            "pop {r4, pc}",
            "ldr r0, aav.0x0000c988",
            "bl sym.imp.perror",
            "ldr r3, [0x00009a6c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0x9a2c",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x9a2c"
        ]
    },
    "fcn.0000a354": {
        "function_address": "0x0000a354",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, 0",
            "ldr r4, [0x0000a470]",
            "ldr r2, [0x0000a474]",
            "add r3, r4, 8",
            "str r5, [r4]",
            "str r5, [r3]",
            "add r3, r4, 0xc",
            "str r5, [r3]",
            "add r3, r4, 0x10",
            "ldr r2, [r2]",
            "str r5, [r3]",
            "add r3, r4, 0x14",
            "str r5, [r3]",
            "add r3, r4, 0x18",
            "str r5, [r3]",
            "cmp r2, 2",
            "add r3, r4, 0x1c",
            "str r5, [r4, 4]",
            "str r5, [r3]",
            "add r3, r4, 0x20",
            "str r5, [r3]",
            "beq 0xa3e8",
            "ldr r3, [0x0000a478]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0xa3c8",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000cc38",
            "mov r2, 0x19",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [r0]",
            "mov r1, r4",
            "mov r2, 0x24",
            "mov r3, r5",
            "bl fcn.00009b84",
            "cmn r0, 1",
            "mov r6, r0",
            "beq 0xa444",
            "cmp r0, 0",
            "movne r0, r4",
            "popne {r4, r5, r6, pc}",
            "ldr r3, [0x0000a478]",
            "ldrh r0, [r3]",
            "ands r0, r0, 4",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "ldr r0, aav.0x0000cc10",
            "mov r2, 0x27",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x0000a478]",
            "ldrh r3, [r3]",
            "ands r0, r3, 1",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, obj.stderr",
            "mov r2, r6",
            "ldr r1, aav.0x0000cbf0",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0000a5f0": {
        "function_address": "0x0000a5f0",
        "instructions": [
            "bx lr"
        ]
    },
    "fcn.0000a5f4": {
        "function_address": "0x0000a5f4",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r2, r0",
            "ldr r4, [0x0000a668]",
            "sub sp, sp, 0xc",
            "mov ip, 0",
            "ldr r0, [0x0000a66c]",
            "ldr r1, [r4]",
            "ldr r3, [r1, 4]",
            "str ip, [sp]",
            "bl fcn.0000a490",
            "cmn r0, 1",
            "mov r5, r0",
            "movne r0, 1",
            "beq 0xa634",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "ldr r3, [0x0000a670]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "moveq r0, r5",
            "beq 0xa62c",
            "ldr r3, [r4]",
            "ldr r2, obj.stderr",
            "ldr r1, aav.0x0000cce0",
            "ldr r0, [r2]",
            "ldr r2, [r3, 4]",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "b 0xa62c"
        ]
    },
    "fcn.0000a8b4": {
        "function_address": "0x0000a8b4",
        "instructions": [
            "ldr r3, [0x0000a934]",
            "mov ip, r1",
            "push {r4, lr}",
            "mov r1, r2",
            "mov r2, ip",
            "sub sp, sp, 0x10",
            "ldr r3, [r3]",
            "ldr r0, [0x0000a938]",
            "ldr ip, [r3, 4]",
            "mov r3, 4",
            "str r3, [sp, 4]",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "mov r3, ip",
            "str ip, [sp]",
            "bl fcn.0000a1e4",
            "subs r4, r0, 0",
            "blt 0xa908",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, pc}",
            "ldr r3, [0x0000a93c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0xa8fc",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x21",
            "ldr r0, aav.0x0000cd18",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xa8fc"
        ]
    },
    "fcn.0000a948": {
        "function_address": "0x0000a948",
        "instructions": [
            "str lr, [sp, -4]!",
            "movw r3, 0x827c",
            "sub sp, sp, 0xc",
            "movt r3, 1",
            "add r1, sp, 8",
            "str r0, [r1, -4]!",
            "ldr r0, [r3, 0x10]",
            "bl fcn.0000a1e0",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x00009060",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x18c]!"
        ]
    },
    "fcn.0000c7c4": {
        "function_address": "0x0000c7c4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xbe0",
            "sub sp, sp, 0xc",
            "ldr r3, aav.0x0000b73c",
            "add r4, sp, 0xbe0",
            "mov r6, r0",
            "add r4, r4, 8",
            "str r3, [r4, -0x14]!",
            "add r0, r4, 0xc",
            "bl sym.imp.sigemptyset",
            "mov r3, 0x10000000",
            "mov r0, 0x11",
            "mov r1, r4",
            "mov r2, 0",
            "str r3, [sp, 0xbd8]",
            "bl sym.imp.sigaction",
            "cmn r0, 1",
            "beq 0xbc00",
            "mov r3, 0",
            "ldr r5, [0x0000bc68]",
            "mov r4, r3",
            "b 0xb918",
            "add r4, r4, 1",
            "add r3, r3, 0x38",
            "cmp r4, 0x80",
            "beq 0xbbf8",
            "ldr r2, [r5, r3]",
            "cmp r2, 0",
            "bgt 0xb908",
            "ldr r0, [0x0000bc68]",
            "lsl r7, r4, 3",
            "ldr r1, aav.0x0000d0f8",
            "mov r3, r4",
            "rsb ip, r4, r7",
            "ldr r2, aav.0x0000d100",
            "add r0, r0, ip, lsl 3",
            "add r0, r0, 4",
            "bl sym.imp.sprintf",
            "rsb r3, r4, r7",
            "add sb, sp, 0xb50",
            "add r3, r5, r3, lsl 3",
            "add sb, sb, 8",
            "mov r0, sb",
            "ldr r1, aav.0x0000d10c",
            "add r3, r3, 4",
            "ldr r2, aav.0x0000d0b8",
            "bl sym.imp.sprintf",
            "ldr r3, [0x0000bc7c]",
            "ldrh r3, [r3]",
            "tst r3, 4",
            "bne 0xbaac",
            "cmp r4, 0x7f",
            "bgt 0xbc0c",
            "bl sym.imp.fork",
            "cmp r0, 0",
            "beq 0xbac4",
            "blt 0xbc24",
            "ldr r1, aav.0x0000d1d0",
            "add r8, sp, 0x9d0",
            "mov r0, r6",
            "bl sym.imp.strtok",
            "mov r0, r8",
            "bl sym.imp.uname",
            "add r0, r8, 0x104",
            "ldr r1, aav.0x0000d158",
            "mov r2, 0x41",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xba6c",
            "add sl, sp, 0xbc0",
            "ldr r1, aav.0x0000d1e0",
            "mov r0, sl",
            "mov r2, r6",
            "bl sym.imp.sprintf",
            "mov r0, 1",
            "bl sym.imp.sleep",
            "mov r0, sl",
            "ldr r1, aav.0x0000c940",
            "bl sym.imp.popen",
            "subs fp, r0, 0",
            "beq 0xbc44",
            "add sl, sp, 0xb80",
            "mov r1, 0x32",
            "add sl, sl, 0xc",
            "mov r2, fp",
            "mov r0, sl",
            "bl sym.imp.fgets",
            "add r0, r8, 0x104",
            "ldr r1, aav.0x0000d158",
            "mov r2, 0x41",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0xbb98",
            "mov r0, sl",
            "bl sym.imp.atoi",
            "mov r8, r0",
            "cmp r8, 0",
            "bne 0xba84",
            "mov r0, sb",
            "bl fcn.0000b6b4",
            "mov r4, r0",
            "mov r1, r6",
            "mov r0, sb",
            "mov r2, r4",
            "bl fcn.0000b798",
            "mov r0, fp",
            "bl sym.imp.pclose",
            "mov r0, r4",
            "add sp, sp, 0x3ec",
            "add sp, sp, 0x800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add sl, sp, 0xbc0",
            "ldr r1, aav.0x0000d1d4",
            "mov r0, sl",
            "mov r2, r6",
            "bl sym.imp.sprintf",
            "b 0xb9d8",
            "ldr r1, aav.0x0000d200",
            "mov r2, r8",
            "rsb r4, r4, r7",
            "mov r0, r6",
            "str r8, [r5, r4, lsl 3]",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "mov r4, r0",
            "b 0xba54",
            "ldr r3, obj.stdout",
            "mov r2, r4",
            "ldr r1, aav.0x0000d114",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0xb97c",
            "ldr r1, aav.0x0000d154",
            "add r4, sp, 0x9d0",
            "mov r0, r6",
            "bl sym.imp.strtok",
            "mov r0, r4",
            "bl sym.imp.uname",
            "add r0, r4, 0x104",
            "ldr r1, aav.0x0000d158",
            "mov r2, 0x41",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xbb70",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "mov r2, 4",
            "ldr r1, aav.0x0000d164",
            "add r0, r6, r0",
            "bl sym.imp.memcpy",
            "mov r1, sb",
            "mov r0, r6",
            "bl sym.imp.strcat",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "ldr r1, aav.0x0000d168",
            "add r0, r6, r0",
            "mov r2, 8",
            "bl sym.imp.memcpy",
            "mov r3, r6",
            "mov r4, 0",
            "ldr r0, aav.0x0000d170",
            "ldr r1, aav.0x0000d178",
            "ldr r2, aav.0x0000d17c",
            "str r4, [sp]",
            "bl sym.imp.execl",
            "cmn r0, 1",
            "mov r3, r0",
            "bne 0xbc5c",
            "mov r0, r6",
            "ldr r1, aav.0x0000d004",
            "ldr r2, aav.0x0000d180",
            "mov r4, r3",
            "bl sym.imp.sprintf",
            "b 0xba5c",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "mov r2, 4",
            "add r0, r6, r0",
            "ldr r1, aav.0x0000d160",
            "bl sym.imp.memcpy",
            "mov r0, r6",
            "mov r1, sb",
            "bl sym.imp.strcat",
            "b 0xbb30",
            "mov r0, sl",
            "add sl, sp, 0x18",
            "sub sl, sl, 0xc",
            "ldr r1, aav.0x0000d1d0",
            "mov r2, sl",
            "bl sym.imp.strtok_r",
            "cmp r0, 0",
            "beq 0xba38",
            "ldrb r3, [r0]",
            "cmp r3, 0xa",
            "bne 0xbbd4",
            "b 0xba38",
            "ldrb r3, [r0]",
            "cmp r3, 0xa",
            "beq 0xba30",
            "bl sym.imp.atoi",
            "ldr r1, aav.0x0000d1d0",
            "mov r8, r0",
            "mov r2, sl",
            "mov r0, 0",
            "bl sym.imp.strtok_r",
            "cmp r0, 0",
            "bne 0xbbc8",
            "b 0xba30",
            "mov r7, 0x400",
            "b 0xb948",
            "ldr r0, aav.0x0000d0ec",
            "bl sym.imp.perror",
            "b 0xb8f8",
            "mov r0, r6",
            "ldr r1, aav.0x0000d128",
            "ldr r2, aav.0x0000d130",
            "mvn r4, 0",
            "bl sym.imp.sprintf",
            "b 0xba5c",
            "ldr r0, aav.0x0000d1a0",
            "mvn r4, 0",
            "bl sym.imp.perror",
            "mov r0, r6",
            "ldr r1, aav.0x0000d004",
            "ldr r2, aav.0x0000d1b0",
            "bl sym.imp.sprintf",
            "b 0xba5c",
            "mov r0, r6",
            "ldr r1, aav.0x0000d004",
            "ldr r2, aav.0x0000d1ec",
            "mvn r4, 0",
            "bl sym.imp.sprintf",
            "b 0xba5c",
            "mov r0, r4",
            "bl sym.imp.exit",
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r1, 0x25",
            "mov r4, r0",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0xc7f0",
            "ldr r1, aav.0x0000d154",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xc814",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0000bddc",
            "ldr r1, [0x0000c830]",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x0000c834]",
            "mov r2, 1",
            "mov r0, r4",
            "str r2, [r3]",
            "pop {r4, r5, r6, lr}",
            "b 0xb8b0"
        ]
    },
    "fcn.00009864": {
        "function_address": "0x00009864",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "ldrb r3, [r1]",
            "mov r4, r0",
            "cmp r3, 0",
            "beq 0x989c",
            "mov r0, r1",
            "bl sym.imp.strlen",
            "mov r1, r5",
            "add r2, r0, 1",
            "mov r0, r4",
            "bl sym.imp.strncpy",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [0x000098d4]",
            "ldrh r3, [r3, 4]",
            "tst r3, 4",
            "bne 0x98b4",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "ldr r0, aav.0x0000c8fc",
            "mov r2, 0x24",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.malloc": {
        "function_address": "0x00008e2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x304]!"
        ]
    },
    "fcn.000092a8": {
        "function_address": "0x000092a8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "mov r0, 2",
            "sub sp, sp, 0x24",
            "mov r5, r1",
            "mov r6, r2",
            "mov r1, r0",
            "mov r2, 0",
            "mov sl, r3",
            "ldrb r8, [sp, 0x40]",
            "bl sym.imp.socket",
            "subs r7, r0, 0",
            "blt 0x932c",
            "add r2, sp, 4",
            "movw r3, 0x4944",
            "str r2, [r4, 0x10]",
            "movt r3, 0x44",
            "mov r2, r4",
            "mov r0, r7",
            "movw r1, 0x89f0",
            "stmib sp, {r5, r6, sl}",
            "strb r8, [sp, 0x10]",
            "str r3, [sp, 0x1c]",
            "bl sym.imp.ioctl",
            "subs r4, r0, 0",
            "bge 0x9318",
            "cmp r5, 0",
            "mvnne r4, 0x2c",
            "mov r0, r7",
            "bl sym.imp.close",
            "mov r0, r4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, aav.0x0000c850",
            "bl fcn.0000917c"
        ]
    },
    "fcn.0000a67c": {
        "function_address": "0x0000a67c",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov ip, 0",
            "sub sp, sp, 0xc",
            "str ip, [sp]",
            "bl fcn.0000933c",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r1",
            "ldr r4, [0x0000a6f4]",
            "mov r1, 0",
            "mov r6, r0",
            "mov r7, r2",
            "mov r2, 0x2000",
            "mov r8, r3",
            "mov r0, r4",
            "ldr sl, [sp, 0x20]",
            "bl sym.imp.memset",
            "mov r1, r5",
            "mov r0, r4",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r8, 0",
            "beq 0xa6d8",
            "add r0, r0, 1",
            "mov r1, r7",
            "add r0, r4, r0",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "str r4, [sl]",
            "mov r0, r6",
            "movw r1, 0x106",
            "mov r2, r4",
            "mov r3, 0x2000",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b 0x969c"
        ]
    },
    "fcn.00009d3c": {
        "function_address": "0x00009d3c",
        "instructions": [
            "cmp r0, 2",
            "push {r4, r5, r6, lr}",
            "mov r2, r0",
            "beq 0x9d74",
            "ldr r3, [0x00009e04]",
            "ldrh r0, [r3]",
            "ands r0, r0, 1",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, obj.stderr",
            "ldr r1, aav.0x0000ca6c",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r1, 1",
            "mov r2, 6",
            "bl sym.imp.socket",
            "cmn r0, 1",
            "mov r4, r0",
            "beq 0x9d98",
            "ldr r0, [0x00009e10]",
            "str r4, [r0]",
            "pop {r4, r5, r6, pc}",
            "ldr r5, [0x00009e04]",
            "ldr r0, aav.0x0000ca30",
            "bl sym.imp.perror",
            "ldrh r0, [r5]",
            "ands r0, r0, 1",
            "bne 0x9dbc",
            "ldr r3, [0x00009e10]",
            "str r4, [r3]",
            "pop {r4, r5, r6, pc}",
            "ldr r6, obj.stderr",
            "bl sym.imp.__errno_location",
            "ldr r1, aav.0x0000ca48",
            "ldr r2, [r0]",
            "ldr r0, [r6]",
            "bl sym.imp.fprintf",
            "ldrh r0, [r5]",
            "ldr r3, [0x00009e10]",
            "ands r0, r0, 1",
            "str r4, [r3]",
            "popeq {r4, r5, r6, pc}",
            "ldr r0, aav.0x0000ca54",
            "mov r1, 1",
            "mov r2, 0x14",
            "ldr r3, [r6]",
            "bl sym.imp.fwrite",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00009c70": {
        "function_address": "0x00009c70",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "mov r0, 2",
            "sub sp, sp, 0x24",
            "mov r6, r1",
            "mov r2, 0",
            "mov r1, r0",
            "bl sym.imp.socket",
            "subs r4, r0, 0",
            "blt 0x9cfc",
            "mov r1, r5",
            "mov r0, sp",
            "bl sym.imp.strcpy",
            "mov r3, 2",
            "mov r0, r4",
            "movw r1, 0x8915",
            "mov r2, sp",
            "strh r3, [sp, 0x10]",
            "mov r7, sp",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "bne 0x9cec",
            "add r1, sp, 0x10",
            "mov r2, 0x10",
            "mov r0, r6",
            "bl sym.imp.memcpy",
            "mov r0, r4",
            "bl sym.imp.close",
            "mov r0, 1",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "bl sym.imp.close",
            "mvn r0, 0",
            "b 0x9ce4",
            "ldr r3, [0x00009d30]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0",
            "beq 0x9ce4",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000ca1c",
            "mov r2, 0x12",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "b 0x9ce4"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x00008d54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x394]!"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x00008df0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x32c]!"
        ]
    },
    "fcn.00009948": {
        "function_address": "0x00009948",
        "instructions": [
            "push {r4, lr}",
            "bl sym.imp.bind",
            "cmn r0, 1",
            "mov r4, r0",
            "movne r0, 1",
            "popne {r4, pc}",
            "ldr r0, aav.0x0000c950",
            "bl sym.imp.perror",
            "ldr r3, [0x000099a4]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0x9980",
            "mov r0, r4",
            "pop {r4, pc}",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.bind": {
        "function_address": "0x00008ee0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x28c]!"
        ]
    },
    "fcn.000099b0": {
        "function_address": "0x000099b0",
        "instructions": [
            "push {r4, lr}",
            "bl sym.imp.listen",
            "cmn r0, 1",
            "mov r4, r0",
            "movne r0, 1",
            "popne {r4, pc}",
            "ldr r0, aav.0x0000c96c",
            "bl sym.imp.perror",
            "ldr r3, [0x00009a0c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0x99e8",
            "mov r0, r4",
            "pop {r4, pc}",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.listen": {
        "function_address": "0x00008f70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x22c]!"
        ]
    },
    "fcn.00009a78": {
        "function_address": "0x00009a78",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r2, 0",
            "sub sp, sp, 0xc",
            "mov sl, r0",
            "mov r6, r1",
            "mov r8, r3",
            "movle r4, 0",
            "ble 0x9b10",
            "ldr sb, [0x00009b6c]",
            "mov r4, 0",
            "ldr fp, obj.stdout",
            "b 0x9ab0",
            "cmp r7, r4",
            "ble 0x9b10",
            "rsb r5, r4, r7",
            "mov r1, r6",
            "mov r3, r8",
            "mov r2, r5",
            "mov r0, sl",
            "bl sym.imp.send",
            "cmn r0, 1",
            "mov r3, r0",
            "add r4, r4, r0",
            "add r6, r6, r0",
            "beq 0x9b1c",
            "cmp r0, r7",
            "beq 0x9b64",
            "cmp r5, r0",
            "beq 0x9aa8",
            "ldrh r2, [sb]",
            "tst r2, 4",
            "beq 0x9aa8",
            "ldr r0, [fp]",
            "mov r2, r5",
            "ldr r1, aav.0x0000c9bc",
            "bl sym.imp.fprintf",
            "cmp r7, r4",
            "bgt 0x9ab0",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, aav.0x0000c9a8",
            "str r3, [sp, 4]",
            "bl sym.imp.perror",
            "ldr r2, [0x00009b6c]",
            "ldr r3, [sp, 4]",
            "ldrh r2, [r2]",
            "tst r2, 1",
            "moveq r4, r3",
            "beq 0x9b10",
            "bl sym.imp.__errno_location",
            "ldr r3, [sp, 4]",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "mov r4, r3",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x9b10",
            "mov r4, r7",
            "b 0x9b10"
        ]
    },
    "sym.imp.send": {
        "function_address": "0x00008e74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2d4]!"
        ]
    },
    "fcn.00009b84": {
        "function_address": "0x00009b84",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r8, r2, 0",
            "mov sb, r0",
            "mov r7, r1",
            "mov sl, r3",
            "movle r4, 0",
            "ble 0x9c20",
            "ldr fp, [0x00009c5c]",
            "mov r5, 0",
            "b 0x9bbc",
            "cmp r4, 0",
            "beq 0x9c20",
            "cmp r8, r5",
            "ble 0x9c20",
            "rsb r6, r5, r8",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, sl",
            "mov r0, sb",
            "bl sym.imp.recv",
            "cmn r0, 1",
            "mov r4, r0",
            "add r5, r5, r0",
            "add r7, r7, r0",
            "beq 0x9c28",
            "cmp r6, r0",
            "beq 0x9bac",
            "ldrh r3, [fp]",
            "tst r3, 4",
            "beq 0x9bac",
            "movw r3, 0x6234",
            "mov r2, r6",
            "movt r3, 1",
            "ldr r1, aav.0x0000c9fc",
            "ldr r0, [r3]",
            "mov r3, r4",
            "bl sym.imp.fprintf",
            "cmp r4, 0",
            "bne 0x9bb4",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, aav.0x0000c9e8",
            "bl sym.imp.perror",
            "ldr r3, [0x00009c5c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0x9c20",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x9c20"
        ]
    },
    "sym.imp.recv": {
        "function_address": "0x00008d90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x36c]!"
        ]
    },
    "fcn.000098e0": {
        "function_address": "0x000098e0",
        "instructions": [
            "push {r4, lr}",
            "bl sym.imp.connect",
            "cmn r0, 1",
            "mov r4, r0",
            "movne r0, 1",
            "popne {r4, pc}",
            "ldr r0, aav.0x0000c924",
            "bl sym.imp.perror",
            "ldr r3, [0x0000993c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0x9918",
            "mov r0, r4",
            "pop {r4, pc}",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.connect": {
        "function_address": "0x00008d9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x364]!"
        ]
    },
    "fcn.0000a490": {
        "function_address": "0x0000a490",
        "instructions": [
            "push {r4, lr}",
            "ldr ip, [r1, 0x10]",
            "ldr r3, [r1, 4]",
            "cmp ip, r3",
            "bhi 0xa4f0",
            "ldr r3, [0x0000a540]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "beq 0xa4bc",
            "mov r0, 1",
            "pop {r4, pc}",
            "mov r1, r2",
            "ldr r0, [r0]",
            "mov r2, ip",
            "mov r3, 0",
            "bl fcn.00009b84",
            "cmn r0, 1",
            "mov r4, r0",
            "bne 0xa4b4",
            "ldr r3, [0x0000a544]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0xa520",
            "pop {r4, pc}",
            "ldr r2, [0x0000a544]",
            "ldrh r2, [r2]",
            "tst r2, 1",
            "mvneq r0, 0",
            "popeq {r4, pc}",
            "ldr r0, obj.stderr",
            "mov r2, ip",
            "ldr r1, aav.0x0000cc54",
            "ldr r0, [r0]",
            "bl sym.imp.fprintf",
            "mvn r0, 0",
            "pop {r4, pc}",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000cc88",
            "mov r2, 0x22",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.000096b8": {
        "function_address": "0x000096b8",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov ip, 1",
            "sub sp, sp, 0xc",
            "str ip, [sp]",
            "bl fcn.0000933c",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0000a1e4": {
        "function_address": "0x0000a1e4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r3",
            "ldr r6, [0x0000a338]",
            "mov r4, 0",
            "mov sl, r2",
            "mov r8, r0",
            "ldr ip, [0x0000a33c]",
            "ldrb r3, [r6]",
            "ldr r7, [sp, 0x20]",
            "add r2, ip, 0xc",
            "mov r0, ip",
            "str r4, [r2]",
            "cmp r3, r4",
            "add r2, ip, 0x18",
            "ldr r3, [sp, 0x24]",
            "str r4, [r2]",
            "add r2, ip, 0x1c",
            "str r4, [r2]",
            "add r2, ip, 0x20",
            "str r4, [r0, 0x14]!",
            "str r4, [r2]",
            "stm ip, {r1, r5}",
            "str r3, [ip, 8]",
            "str r7, [ip, 0x10]",
            "bne 0xa2c0",
            "cmp r5, r7",
            "blo 0xa2d0",
            "ldr r3, [0x0000a340]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "movne r0, 0",
            "popne {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, [r8]",
            "mov r2, 0x24",
            "ldr r1, [0x0000a33c]",
            "mov r3, 0",
            "bl fcn.00009a78",
            "cmn r0, 1",
            "mov r4, r0",
            "beq 0xa304",
            "ldr r0, [r8]",
            "mov r1, sl",
            "mov r2, r7",
            "mov r3, 0",
            "bl fcn.00009a78",
            "cmn r0, 1",
            "mov r4, r0",
            "movne r0, r5",
            "popne {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [0x0000a344]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0xa318",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov r1, r6",
            "mov r2, 0xf",
            "bl sym.imp.strncpy",
            "b 0xa248",
            "ldr r3, [0x0000a344]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0",
            "popeq {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, obj.stderr",
            "mov r2, r7",
            "ldr r1, aav.0x0000cba0",
            "mov r3, r5",
            "ldr r0, [r0]",
            "bl sym.imp.fprintf",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [0x0000a344]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "moveq r0, r0",
            "popeq {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "ldr r0, aav.0x0000cbd0",
            "mov r2, 0x1c",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0000a1e0": {
        "function_address": "0x0000a1e0",
        "instructions": [
            "cmp r0, 2",
            "push {r4, lr}",
            "beq 0xa140",
            "ldr r3, [0x0000a1bc]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "bne 0xa150",
            "mov r0, 1",
            "pop {r4, pc}",
            "cmp r1, 0",
            "bne 0xa16c",
            "mov r0, 1",
            "pop {r4, pc}",
            "ldr r3, obj.stderr",
            "mov r2, r0",
            "ldr r1, aav.0x0000cb7c",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "pop {r4, pc}",
            "ldr r0, [r1]",
            "bl sym.imp.close",
            "cmn r0, 1",
            "mov r4, r0",
            "bne 0xa148",
            "ldr r0, aav.0x0000cb60",
            "bl sym.imp.perror",
            "ldr r3, [0x0000a1bc]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "moveq r0, r4",
            "popeq {r4, pc}",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "pop {r4, pc}",
            "b 0xa11c"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x0000903c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1a4]!"
        ]
    },
    "sym.imp.setsockopt": {
        "function_address": "0x00008ef8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x27c]!"
        ]
    },
    "sym.imp.mkdir": {
        "function_address": "0x00009078",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x17c]!"
        ]
    },
    "sym.imp.accept": {
        "function_address": "0x00008ea4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2b4]!"
        ]
    },
    "sym.imp.sigemptyset": {
        "function_address": "0x00008da8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x35c]!"
        ]
    },
    "sym.imp.sigaction": {
        "function_address": "0x00008f88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x21c]!"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x00008fe8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1dc]!"
        ]
    },
    "sym.imp.fork": {
        "function_address": "0x00008f7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x224]!"
        ]
    },
    "sym.imp.strtok": {
        "function_address": "0x00008f64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x234]!"
        ]
    },
    "sym.imp.uname": {
        "function_address": "0x00008e98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2bc]!"
        ]
    },
    "sym.imp.sleep": {
        "function_address": "0x00008e44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2f4]!"
        ]
    },
    "sym.imp.popen": {
        "function_address": "0x00008d84",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x374]!"
        ]
    },
    "fcn.0000b6b4": {
        "function_address": "0x0000b6b4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r1, aav.0x0000d098",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "beq 0xb6fc",
            "mov r1, 0",
            "mov r2, 2",
            "bl sym.imp.fseek",
            "cmp r0, 0",
            "movlt r5, 0",
            "blt 0xb6f4",
            "mov r0, r4",
            "bl sym.imp.ftell",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [0x0000b730]",
            "ldrh r5, [r3]",
            "ands r5, r5, 4",
            "beq 0xb6f4",
            "ldr r3, obj.stdout",
            "mov r1, 1",
            "ldr r0, aav.0x0000d09c",
            "mov r2, 0x1b",
            "mov r5, r4",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb6f4"
        ]
    },
    "fcn.0000b798": {
        "function_address": "0x0000b798",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r3, 0",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "mov r5, r0",
            "mov r7, r2",
            "ldr r1, aav.0x0000d098",
            "str r3, [sp, 4]",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "beq 0xb84c",
            "ldr r3, [0x0000b894]",
            "ldr r1, [r3]",
            "cmp r1, 1",
            "beq 0xb878",
            "cmp r7, 0",
            "bne 0xb830",
            "mov r0, r4",
            "ldr r1, aav.0x0000d0c4",
            "add r2, sp, 4",
            "bl sym.imp.fscanf",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "bl sym.imp.remove",
            "ldr r3, [0x0000b89c]",
            "ldrh r3, [r3]",
            "tst r3, 4",
            "bne 0xb818",
            "ldr r0, [sp, 4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, obj.stdout",
            "mov r2, r6",
            "ldr r1, aav.0x0000d0c8",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0xb80c",
            "mov r0, r6",
            "mov r1, 1",
            "mov r2, r7",
            "mov r3, r4",
            "bl sym.imp.fread",
            "str r0, [sp, 4]",
            "b 0xb7dc",
            "ldr r3, [0x0000b89c]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0xb80c",
            "ldr r3, obj.stderr",
            "mov r1, 1",
            "mov r2, 0x1b",
            "ldr r0, aav.0x0000d09c",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "b 0xb80c",
            "mov r0, r6",
            "mov r2, 0x100",
            "mov r3, r4",
            "bl sym.imp.fread",
            "str r0, [sp, 4]",
            "b 0xb7ec"
        ]
    },
    "sym.imp.pclose": {
        "function_address": "0x00008db4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x354]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x00009048",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x19c]!"
        ]
    },
    "sym.imp.strcat": {
        "function_address": "0x00008ed4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x294]!"
        ]
    },
    "sym.imp.execl": {
        "function_address": "0x00008dfc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x324]!"
        ]
    },
    "sym.imp.strtok_r": {
        "function_address": "0x00008d78",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x37c]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00008fdc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1e4]!"
        ]
    },
    "fcn.0000bddc": {
        "function_address": "0x0000bddc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "ldr lr, aav.0x0000d3a8",
            "sub sp, sp, 0x1000",
            "sub sp, sp, 0x24",
            "mov ip, r0",
            "mov r8, r0",
            "mov r7, r1",
            "sub r0, fp, 0x3c",
            "sub r1, fp, 0x1000",
            "movw r4, 0xeffc",
            "str r0, [r1, -0x38]",
            "sub r5, fp, 0x24",
            "ldm lr!, {r0, r1, r2, r3}",
            "movt r4, 0xffff",
            "str ip, [r5, r4]",
            "sub r5, fp, 0x1000",
            "ldr ip, [lr]",
            "ldr lr, [r5, -0x38]",
            "stm lr!, {r0, r1, r2, r3}",
            "mov r0, r8",
            "str ip, [lr]",
            "bl sym.imp.strlen",
            "add r3, r0, 0xf",
            "ldr r1, aav.0x0000d2bc",
            "bic r3, r3, 7",
            "mov r0, r8",
            "sub sp, sp, r3",
            "bl sym.imp.strstr",
            "subs r6, r0, 0",
            "add r5, sp, 8",
            "beq 0xbfe4",
            "sub r4, fp, 0x1000",
            "mov r0, r8",
            "sub r4, r4, 0x14",
            "sub r4, r4, 0xc",
            "bl sym.imp.system",
            "mov r0, r8",
            "ldr r1, aav.0x0000d1d0",
            "mov r2, r4",
            "bl sym.imp.strtok_r",
            "cmp r0, 0",
            "moveq r5, r0",
            "beq 0xbecc",
            "ldrb r3, [r0]",
            "cmp r3, 0xa",
            "moveq r5, 0",
            "bne 0xbeac",
            "b 0xbecc",
            "ldrb r3, [r0]",
            "cmp r3, 0xa",
            "beq 0xbecc",
            "bl sym.imp.atoi",
            "ldr r1, aav.0x0000d1d0",
            "mov r5, r0",
            "mov r2, r4",
            "mov r0, 0",
            "bl sym.imp.strtok_r",
            "cmp r0, 0",
            "bne 0xbea0",
            "mov r3, 0",
            "ldr r6, [0x0000c738]",
            "mov r4, r3",
            "b 0xbee8",
            "add r4, r4, 1",
            "cmp r4, 0x80",
            "beq 0xc2d4",
            "ldr r2, [r6, r3]",
            "add r3, r3, 0x38",
            "cmp r2, r5",
            "bne 0xbedc",
            "ldr sb, [0x0000c738]",
            "lsl ip, r4, 3",
            "sub lr, fp, 0x1000",
            "ldr r1, aav.0x0000d10c",
            "rsb r3, r4, ip",
            "sub sl, fp, 0x70",
            "str ip, [lr, -0x2c]",
            "mov r0, sl",
            "add sb, sb, r3, lsl 3",
            "ldr r2, aav.0x0000d0b8",
            "add sb, sb, 4",
            "mov r3, sb",
            "bl sym.imp.sprintf",
            "mov r0, sl",
            "bl fcn.0000b6b4",
            "cmp r0, 0",
            "ble 0xbfd0",
            "mov r0, sl",
            "ldr r1, aav.0x0000d098",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0xc6a4",
            "mov r1, 0",
            "mov r2, r1",
            "bl sym.imp.fseek",
            "cmp r0, 0",
            "blt 0xc620",
            "mov r0, r8",
            "mov r1, 1",
            "mov r2, 0x100",
            "mov r3, r5",
            "bl sym.imp.fread",
            "cmp r0, 0",
            "beq 0xc610",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mov r0, sb",
            "bl sym.imp.remove",
            "sub r3, fp, 0x1000",
            "mov r2, 0x100",
            "ldr r3, [r3, -0x2c]",
            "rsb r4, r4, r3",
            "mov r3, 0",
            "lsl r4, r4, 3",
            "str r3, [r6, r4]",
            "movw r3, 0xeffc",
            "sub r5, fp, 0x24",
            "movt r3, 0xffff",
            "mov r0, r7",
            "ldr r1, [r5, r3]",
            "bl fcn.0000a8b4",
            "mov r0, 0",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r8",
            "ldr r1, aav.0x0000d2e0",
            "mov r2, r5",
            "bl sym.imp.sprintf",
            "b 0xbf88",
            "sub r0, fp, 0x3c",
            "bl sym.imp.mkstemp",
            "cmp r0, 0",
            "blt 0xc6d8",
            "bl sym.imp.close",
            "sub lr, fp, 0x24",
            "mov r0, r5",
            "ldr r8, [lr, r4]",
            "mov r1, r8",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "ldr r1, aav.0x0000d304",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0xc080",
            "mov r0, r5",
            "sub r1, fp, 0x3c",
            "bl fcn.0000bcdc",
            "cmp r0, 0",
            "bgt 0xc2fc",
            "sub r6, fp, 0x1000",
            "sub r0, fp, 0x24",
            "sub r6, r6, 0x24",
            "ldr r1, [r0, r4]",
            "sub r6, r6, 4",
            "mov r0, r5",
            "bl sym.imp.strcpy",
            "ldr r1, aav.0x0000d1d0",
            "mov r2, r6",
            "mov r0, r5",
            "bl sym.imp.strtok_r",
            "sub r2, fp, 0x24",
            "mov r0, r5",
            "ldr r1, [r2, r4]",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "ldr r1, aav.0x0000d1d0",
            "mov r2, r6",
            "bl sym.imp.strtok_r",
            "ldr r5, [0x0000c750]",
            "mov r6, 1",
            "ldr sb, [0x0000c754]",
            "ldr r0, [r5]",
            "bl sym.imp.alarm",
            "ldr r1, aav.0x00009224",
            "mov r0, 0x11",
            "bl sym.imp.signal",
            "ldr r1, aav.0x000096d4",
            "mov r0, 2",
            "bl sym.imp.signal",
            "ldr r1, aav.0x000096d4",
            "mov r0, 0xf",
            "bl sym.imp.signal",
            "movw r3, 0xeffc",
            "sub ip, fp, 0x24",
            "movt r3, 0xffff",
            "ldr r0, aav.0x0000d310",
            "str r6, [sb]",
            "ldr r1, [ip, r3]",
            "bl sym.imp.strcmp",
            "subs r8, r0, 0",
            "beq 0xc578",
            "ldr r4, [0x0000c764]",
            "sub sl, fp, 0x650",
            "sub sl, sl, 0xc",
            "bl sym.imp.fork",
            "subs lr, r0, 0",
            "sub r1, fp, 0x1000",
            "str lr, [r1, -0x34]",
            "beq 0xc4e8",
            "sub lr, fp, 0x1000",
            "movw r3, 0x82a0",
            "ldr r0, [lr, -0x34]",
            "movt r3, 1",
            "sub r1, fp, 0x28",
            "mov r2, 1",
            "str r0, [r3]",
            "bl sym.imp.waitpid",
            "ldr r3, [fp, -0x28]",
            "tst r3, 0x7f",
            "bne 0xc2dc",
            "movw r0, 0x6258",
            "sub lr, fp, 0x1000",
            "movt r0, 1",
            "ubfx r3, r3, 8, 8",
            "str r0, [lr, -0x30]",
            "strb r3, [r0]",
            "ldr r8, [0x0000c768]",
            "sub r0, fp, 0x3c",
            "mov r1, 0x1000",
            "bl sym.imp.open",
            "sub lr, fp, 0x1000",
            "str r0, [lr, -0x2c]",
            "sub r1, fp, 0x1000",
            "mov r2, 0x400",
            "ldr r0, [r1, -0x2c]",
            "mov r1, sl",
            "bl sym.imp.read",
            "ldr r3, [r4]",
            "cmp r0, 0",
            "mov r6, r0",
            "str r0, [r3, 4]",
            "ble 0xc190",
            "mov r0, r7",
            "mov r1, sl",
            "mov r2, 0",
            "bl fcn.0000a8b4",
            "mov r0, r7",
            "bl fcn.0000a97c",
            "cmp r0, 0",
            "blt 0xc1b0",
            "ldr r3, [r4]",
            "ldr r3, [r3, 8]",
            "cmn r3, 4",
            "beq 0xc32c",
            "mov r0, r7",
            "bl fcn.0000a97c",
            "cmp r0, 0",
            "blt 0xc1d0",
            "ldr r3, [r4]",
            "ldr r3, [r3, 8]",
            "cmn r3, 4",
            "beq 0xc3ec",
            "ldr r3, [r8]",
            "cmp r3, 1",
            "beq 0xc294",
            "ldr r3, [r5, 4]",
            "cmp r3, 0",
            "bne 0xc208",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "bne 0xc208",
            "movw r0, 0x8294",
            "mov r1, 1",
            "movt r0, 1",
            "str r1, [r0, 4]",
            "b 0xc158",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "bne 0xc158",
            "cmp r6, 0",
            "bne 0xc158",
            "mov r6, 0",
            "mov r0, r6",
            "bl sym.imp.wait",
            "sub r2, fp, 0x1000",
            "ldr r0, [r2, -0x2c]",
            "bl sym.imp.close",
            "sub ip, fp, 0x1000",
            "ldr r3, [r4]",
            "ldr ip, [ip, -0x30]",
            "mov r1, r6",
            "mov r0, r7",
            "str r6, [r3, 4]",
            "ldrb r2, [ip]",
            "str r2, [r3]",
            "ldrb r2, [ip]",
            "bl fcn.0000a8b4",
            "mov r0, r6",
            "bl sym.imp.alarm",
            "sub r0, fp, 0x3c",
            "str r6, [r5, 4]",
            "bl sym.imp.unlink",
            "mov r1, r6",
            "mov r0, 2",
            "str r6, [r5]",
            "bl sym.imp.signal",
            "mov r0, 0xf",
            "mov r1, r6",
            "bl sym.imp.signal",
            "mov r0, r6",
            "b 0xbfc8",
            "sub ip, fp, 0x1000",
            "ldr r3, [r4]",
            "ldr ip, [ip, -0x30]",
            "mov r1, 0",
            "mov r0, r7",
            "str r1, [r3, 4]",
            "ldrb r2, [ip]",
            "str r2, [r3]",
            "ldrb r2, [ip]",
            "bl fcn.0000a8b4",
            "sub r0, fp, 0x3c",
            "bl sym.imp.unlink",
            "mov r1, 9",
            "mov r0, 0",
            "bl sym.imp.kill",
            "b 0xc1dc",
            "mov r2, 0x100",
            "b 0xbfac",
            "movw r3, 0x6258",
            "sub r2, fp, 0x1000",
            "movt r3, 1",
            "str r3, [r2, -0x30]",
            "mov r3, 1",
            "ldr ip, [r2, -0x30]",
            "strb r3, [ip]",
            "b 0xc140",
            "ldr r3, [0x0000c764]",
            "mov r1, r6",
            "ldr ip, [0x0000c76c]",
            "mov r0, r7",
            "mov r2, r6",
            "ldr r3, [r3]",
            "ldrb ip, [ip]",
            "str r6, [r3, 4]",
            "str ip, [r3]",
            "bl fcn.0000a8b4",
            "mov r0, 1",
            "b 0xbfc8",
            "sub r6, fp, 0x25c",
            "mov r0, r6",
            "bl sym.imp.uname",
            "mov r2, 0x41",
            "ldr r1, aav.0x0000d158",
            "add r0, r6, 0x104",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldr r1, aav.0x0000d344",
            "subeq r2, fp, 0x1000",
            "add r0, r6, 0x104",
            "ldreq r3, [r2, -0x34]",
            "addeq r2, r3, 1",
            "subeq r3, fp, 0x1000",
            "streq r2, [r3, -0x34]",
            "mov r2, 0x41",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xc4ac",
            "sub r6, fp, 0xd4",
            "mov r1, 0x64",
            "ldr r2, aav.0x0000d350",
            "mov r0, r6",
            "bl sym.imp.snprintf",
            "mov r0, r6",
            "ldr r1, aav.0x0000c940",
            "bl sym.imp.popen",
            "subs r8, r0, 0",
            "beq 0xc5f8",
            "mov r1, 0x64",
            "mov r2, r8",
            "mov r0, r6",
            "bl sym.imp.fgets",
            "mov r0, r6",
            "bl sym.imp.atoi",
            "sub ip, fp, 0x1000",
            "mov r6, r0",
            "ldr ip, [ip, -0x34]",
            "cmp ip, r0",
            "bgt 0xc4a0",
            "mov sl, ip",
            "mov r0, sl",
            "mov r1, 9",
            "add sl, sl, 1",
            "bl sym.imp.kill",
            "cmp r6, sl",
            "bge 0xc3d0",
            "b 0xc4a0",
            "sub r6, fp, 0x25c",
            "mov r0, r6",
            "add r6, r6, 0x104",
            "bl sym.imp.uname",
            "mov r0, r6",
            "ldr r1, aav.0x0000d158",
            "mov r2, 0x41",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0xc4c0",
            "mov r0, r6",
            "ldr r1, aav.0x0000d344",
            "mov r2, 0x41",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0xc630",
            "sub r3, fp, 0x1000",
            "ldr r3, [r3, -0x34]",
            "cmp r3, 0",
            "subne r6, fp, 0xd4",
            "beq 0xc21c",
            "movw r0, 0x82a0",
            "ldr r2, aav.0x0000d370",
            "movt r0, 1",
            "mov r1, 0x64",
            "ldr r3, [r0]",
            "mov r0, r6",
            "bl sym.imp.snprintf",
            "ldr r1, aav.0x0000c940",
            "mov r0, r6",
            "bl sym.imp.popen",
            "subs r8, r0, 0",
            "mov r1, 0x64",
            "mov r2, r8",
            "mov r0, r6",
            "beq 0xc5f8",
            "bl sym.imp.fgets",
            "mov r0, r6",
            "bl sym.imp.atoi",
            "cmp r0, 0",
            "mov r1, 9",
            "bne 0xc4d8",
            "ldr r3, [0x0000c784]",
            "ldr r0, [r3]",
            "bl sym.imp.kill",
            "mov r0, r8",
            "bl sym.imp.pclose",
            "b 0xc21c",
            "sub r1, fp, 0x1000",
            "ldr r0, [r1, -0x34]",
            "mov r1, 9",
            "bl sym.imp.kill",
            "b 0xc21c",
            "sub r2, fp, 0x1000",
            "mov r1, 9",
            "ldr r2, [r2, -0x34]",
            "add r0, r2, 1",
            "bl sym.imp.kill",
            "b 0xc21c",
            "bl sym.imp.kill",
            "mov r0, r8",
            "bl sym.imp.pclose",
            "b 0xc440",
            "mov r0, 1",
            "bl sym.imp.close",
            "movw r1, 0x1001",
            "sub r0, fp, 0x3c",
            "bl sym.imp.open",
            "sub r2, fp, 0x1000",
            "mov r6, r0",
            "ldr r0, [r2, -0x34]",
            "bl sym.imp.close",
            "sub r3, fp, 0x1000",
            "ldr r0, aav.0x0000d32c",
            "ldr r1, [r3, -0x34]",
            "bl sym.imp.open",
            "mov r0, 2",
            "bl sym.imp.close",
            "sub ip, fp, 0x1000",
            "mov r2, 2",
            "ldr r1, [ip, -0x34]",
            "mov r0, r6",
            "bl sym.imp.fcntl",
            "sub ip, fp, 0x1000",
            "movw r3, 0xeffc",
            "ldr ip, [ip, -0x34]",
            "sub lr, fp, 0x24",
            "movt r3, 0xffff",
            "ldr r0, aav.0x0000d170",
            "ldr r3, [lr, r3]",
            "ldr r1, aav.0x0000d178",
            "ldr r2, aav.0x0000d17c",
            "str ip, [sp]",
            "bl sym.imp.execl",
            "cmn r0, 1",
            "bne 0xc0fc",
            "ldr r0, aav.0x0000d338",
            "bl sym.imp.perror",
            "b 0xc0fc",
            "sub sl, fp, 0x650",
            "mov r1, r8",
            "sub sl, sl, 4",
            "mov r2, 0x400",
            "sub sl, sl, 8",
            "ldr r4, [0x0000c764]",
            "mov r0, sl",
            "bl sym.imp.memset",
            "ldr ip, aav.0x0000d318",
            "mov lr, sl",
            "ldm ip!, {r0, r1, r2, r3}",
            "ldr ip, [ip]",
            "stm lr!, {r0, r1, r2, r3}",
            "mov r1, sl",
            "mov r2, r8",
            "mov r0, r7",
            "lsr r3, ip, 0x10",
            "strh ip, [lr]",
            "strb r3, [sl, 0x12]",
            "bl fcn.0000a8b4",
            "ldr r3, [r4]",
            "mov r1, r8",
            "mov r2, r8",
            "mov r0, r7",
            "str r8, [r3, 4]",
            "str r8, [r3]",
            "bl fcn.0000a8b4",
            "mov r0, r6",
            "bl sym.imp.sleep",
            "sub r0, fp, 0x3c",
            "bl sym.imp.remove",
            "b 0xc0e8",
            "mov r0, sl",
            "ldr r1, aav.0x0000d004",
            "ldr r2, aav.0x0000d1ec",
            "bl sym.imp.sprintf",
            "mvn r0, 0",
            "b 0xbfc8",
            "ldr r1, aav.0x0000d004",
            "mov r0, r8",
            "ldr r2, aav.0x0000d2c4",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mvn r2, 0",
            "b 0xbfac",
            "sub r6, fp, 0xd4",
            "mov r1, 0x64",
            "ldr r2, aav.0x0000d350",
            "mov r0, r6",
            "bl sym.imp.snprintf",
            "mov r0, r6",
            "ldr r1, aav.0x0000c940",
            "bl sym.imp.popen",
            "subs r8, r0, 0",
            "beq 0xc5f8",
            "mov r1, 0x64",
            "mov r2, r8",
            "mov r0, r6",
            "bl sym.imp.fgets",
            "mov r0, r6",
            "bl sym.imp.atoi",
            "sub ip, fp, 0x1000",
            "mov r6, r0",
            "ldr ip, [ip, -0x34]",
            "cmp ip, r0",
            "bgt 0xc4a0",
            "mov sl, ip",
            "mov r0, sl",
            "mov r1, 9",
            "add sl, sl, 1",
            "bl sym.imp.kill",
            "cmp r6, sl",
            "bge 0xc688",
            "b 0xc4a0",
            "ldr r3, [0x0000c7ac]",
            "ldrh r3, [r3]",
            "tst r3, 4",
            "mvneq r2, 0",
            "beq 0xbfac",
            "ldr r3, obj.stdout",
            "mov r2, 0x1b",
            "mov r1, 1",
            "ldr r0, aav.0x0000d09c",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r2, 0",
            "b 0xbfac",
            "ldr r0, aav.0x0000d2f4",
            "bl sym.imp.perror",
            "ldr r3, [0x0000c7ac]",
            "ldrh r3, [r3]",
            "tst r3, 1",
            "beq 0xc708",
            "bl sym.imp.__errno_location",
            "ldr r3, obj.stderr",
            "ldr r2, [r0]",
            "ldr r1, aav.0x0000c944",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "movw r3, 0xeffc",
            "sub ip, fp, 0x24",
            "movt r3, 0xffff",
            "ldr r1, aav.0x0000d004",
            "ldr r2, aav.0x0000d2f4",
            "ldr r0, [ip, r3]",
            "bl sym.imp.sprintf",
            "mvn r0, 0",
            "b 0xbfc8"
        ]
    },
    "sym.imp.fseek": {
        "function_address": "0x00008f04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x274]!"
        ]
    },
    "sym.imp.ftell": {
        "function_address": "0x00008fc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1f4]!"
        ]
    },
    "sym.imp.fscanf": {
        "function_address": "0x00008dd8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x33c]!"
        ]
    },
    "sym.imp.remove": {
        "function_address": "0x00008e38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2fc]!"
        ]
    },
    "sym.imp.fread": {
        "function_address": "0x00008f94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x214]!"
        ]
    },
    "fcn.0000bcdc": {
        "function_address": "0x0000bcdc",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0xc",
            "add r5, sp, 4",
            "mov r4, r1",
            "mov r2, r5",
            "mov r6, r0",
            "ldr r1, aav.0x0000d204",
            "bl sym.imp.strtok_r",
            "subs r7, r0, 0",
            "beq 0xbd48",
            "mov r1, r7",
            "mov r2, r5",
            "mov r0, 0",
            "bl sym.imp.strtok_r",
            "mov r5, r0",
            "mov r0, r7",
            "bl sym.imp.atoi",
            "cmp r5, 0",
            "cmpne r0, 0",
            "movgt r7, 0",
            "movle r7, 1",
            "ble 0xbd48",
            "ldr r3, [0x0000bdc4]",
            "str r0, [r3]",
            "mov r0, r7",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "ldr r1, aav.0x0000d210",
            "bl sym.imp.fopen",
            "mov r1, 1",
            "mov r5, r0",
            "mov r3, r0",
            "mov r2, 0x4f",
            "ldr r0, aav.0x0000d214",
            "bl sym.imp.fwrite",
            "mov r2, 0x33",
            "mov r3, r5",
            "mov r1, 1",
            "ldr r0, aav.0x0000d264",
            "bl sym.imp.fwrite",
            "mov r0, r5",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.0000b6b4",
            "mov r1, r4",
            "mov r7, r0",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mov r1, r4",
            "ldr r0, [0x0000bdd4]",
            "bl sym.imp.strcpy",
            "ldr r0, aav.0x0000d298",
            "bl sym.imp.puts",
            "b 0xbd3c"
        ]
    },
    "sym.imp.fflush": {
        "function_address": "0x00008e68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2dc]!"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x00008e14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x314]!"
        ]
    },
    "fcn.0000a97c": {
        "function_address": "0x0000a97c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x94",
            "add r1, sp, 8",
            "mov r4, 0",
            "sub r3, r1, 4",
            "add r2, r1, 0x7c",
            "str r4, [r3, 4]!",
            "cmp r3, r2",
            "bne 0xa994",
            "ldr r5, [0x0000aa34]",
            "add lr, sp, 0x88",
            "str lr, [sp]",
            "add lr, sp, 0x90",
            "mov r7, 1",
            "mov r2, r4",
            "ldr ip, [r5]",
            "mov r3, r4",
            "str r4, [sp, 0x88]",
            "str r4, [sp, 0x8c]",
            "and r6, ip, 0x1f",
            "add r0, ip, 1",
            "lsr ip, ip, 5",
            "add ip, lr, ip, lsl 2",
            "ldr lr, [ip, -0x88]",
            "orr lr, lr, r7, lsl r6",
            "str lr, [ip, -0x88]",
            "bl sym.imp.select",
            "cmp r0, 0",
            "bgt 0xa9fc",
            "mvn r0, 0",
            "add sp, sp, 0x94",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [r5]",
            "add r1, sp, 0x90",
            "and r2, r3, 0x1f",
            "lsr r3, r3, 5",
            "add r3, r1, r3, lsl 2",
            "ldr r3, [r3, -0x88]",
            "asr r3, r3, r2",
            "tst r3, 1",
            "beq 0xa9f0",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0000a354",
            "mov r0, r4",
            "b 0xa9f4"
        ]
    },
    "sym.imp.select": {
        "function_address": "0x00008e5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2e4]!"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x00008f1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x264]!"
        ]
    },
    "sym.imp.system": {
        "function_address": "0x00008e20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x30c]!"
        ]
    },
    "sym.imp.mkstemp": {
        "function_address": "0x00008ff4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x1d4]!"
        ]
    },
    "sym.imp.alarm": {
        "function_address": "0x00008e8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x2c4]!"
        ]
    },
    "sym.imp.waitpid": {
        "function_address": "0x00008d60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x38c]!"
        ]
    },
    "sym.imp.open": {
        "function_address": "0x00009054",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x194]!"
        ]
    },
    "sym.imp.read": {
        "function_address": "0x00008f34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x254]!"
        ]
    },
    "sym.imp.wait": {
        "function_address": "0x00008f10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x26c]!"
        ]
    },
    "sym.imp.unlink": {
        "function_address": "0x00008f58",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x23c]!"
        ]
    },
    "sym.imp.kill": {
        "function_address": "0x00008ec8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x29c]!"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x00008dc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x34c]!"
        ]
    },
    "sym.imp.fcntl": {
        "function_address": "0x0000906c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xd000",
            "ldr pc, [ip, 0x184]!"
        ]
    }
}