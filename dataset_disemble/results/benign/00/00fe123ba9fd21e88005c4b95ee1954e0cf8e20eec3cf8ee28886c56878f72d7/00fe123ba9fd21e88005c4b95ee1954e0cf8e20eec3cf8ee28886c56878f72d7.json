{
    "sym.security_token_to_unix_token": {
        "function_address": "0x00000bb0",
        "instructions": [
            "ldr ip, [r2]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "ldr sb, [0x00000f84]",
            "cmp ip, 1",
            "add sb, pc, sb",
            "movls r0, 0xc0000022",
            "bls 0xd0c",
            "mov r4, r2",
            "ldr r2, [0x00000f88]",
            "mov r8, r1",
            "add r2, pc, r2",
            "mov r1, 0x10",
            "mov r6, r3",
            "mov r7, r0",
            "bl sym.imp._talloc_zero",
            "cmp r0, 0",
            "str r0, [r6]",
            "moveq r0, 0xc0000017",
            "beq 0xd0c",
            "ldr r3, [0x00000f8c]",
            "mov r0, r7",
            "mov r1, 0x10",
            "ldr r2, [r4]",
            "add r3, pc, r3",
            "bl sym.imp._talloc_zero_array",
            "subs sl, r0, 0",
            "beq 0xe40",
            "ldr r2, [r4]",
            "cmp r2, 0",
            "beq 0xc50",
            "mov ip, sl",
            "mov r3, 0",
            "ldr lr, [r4, 4]",
            "add r5, sl, r2, lsl 4",
            "str lr, [ip]",
            "str r3, [ip, 0xc]",
            "add ip, ip, 0x10",
            "cmp ip, r5",
            "add lr, lr, 0x44",
            "bne 0xc38",
            "mov r0, r8",
            "mov r1, sl",
            "bl sym.imp.wbc_sids_to_xids",
            "subs r8, r0, 0",
            "bne 0xd08",
            "ldr r3, [sl, 8]",
            "cmp r3, 3",
            "ldr r3, [r4]",
            "ldr r5, [r6]",
            "subne r3, r3, 1",
            "mov r2, r3",
            "str r3, [r5, 8]",
            "ldr r3, [0x00000f90]",
            "mov r1, 4",
            "mov r0, r5",
            "add r3, pc, r3",
            "bl sym.imp._talloc_array",
            "str r0, [r5, 0xc]",
            "ldr r1, [r6]",
            "ldr r0, [r1, 0xc]",
            "cmp r0, 0",
            "beq 0xe40",
            "ldr r3, [sl, 8]",
            "cmp r3, 3",
            "beq 0xe2c",
            "cmp r3, 1",
            "beq 0xd14",
            "mov r0, r7",
            "ldr r1, [sl]",
            "bl sym.imp.dom_sid_string",
            "ldr r3, [0x00000f94]",
            "ldr r3, [sb, r3]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mov r5, r0",
            "bge 0xed8",
            "mov r0, 0",
            "mov r2, r4",
            "mov r1, r0",
            "bl sym.imp.security_token_debug",
            "ldr r1, [0x00000f98]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp._talloc_free",
            "ldr r8, [0x00000f9c]",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "bx lr",
            "mov r2, 0",
            "ldr r3, [sl, 4]",
            "str r3, [r1]",
            "ldr r1, [sl, 0x18]",
            "sub r1, r1, 2",
            "cmp r1, 1",
            "bls 0xd84",
            "mov r0, r7",
            "ldr r1, [sl, 0x10]",
            "bl sym.imp.dom_sid_string",
            "ldr r3, [0x00000f94]",
            "ldr r3, [sb, r3]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mov r5, r0",
            "bge 0xf14",
            "mov r0, 0",
            "mov r2, r4",
            "mov r1, r0",
            "bl sym.imp.security_token_debug",
            "ldr r1, [0x00000fa0]",
            "ldr r8, [0x00000f9c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp._talloc_free",
            "mov r0, r8",
            "b 0xd0c",
            "ldr r0, [r6]",
            "ldr r1, [sl, 0x14]",
            "ldr r3, [r0, 0xc]",
            "str r1, [r0, 4]",
            "str r1, [r3, r2, lsl 2]",
            "ldr r1, [r4]",
            "cmp r1, 2",
            "add r2, r3, r2, lsl 2",
            "bls 0xdf0",
            "ldr r3, [sl, 0x28]",
            "sub r3, r3, 2",
            "cmp r3, 1",
            "mov r6, 2",
            "add r5, sl, 0x20",
            "bls 0xdd4",
            "b 0xe48",
            "ldr r3, [r5, 8]",
            "sub r3, r3, 2",
            "cmp r3, 1",
            "bhi 0xe48",
            "ldr r3, [r5, 4]",
            "str r3, [r2, 4]!",
            "ldr r3, [r4]",
            "add r6, r6, 1",
            "cmp r6, r3",
            "add r5, r5, 0x10",
            "blo 0xdc4",
            "ldr r3, [0x00000f94]",
            "ldr r3, [sb, r3]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "bgt 0xf50",
            "mov r2, r4",
            "mov r0, 0",
            "mov r1, 5",
            "bl sym.imp.security_token_debug",
            "ldr r1, [0x00000fa4]",
            "mov r0, sl",
            "add r1, pc, r1",
            "bl sym.imp._talloc_free",
            "b 0xd08",
            "ldr r3, [sl, 4]",
            "mov r2, 1",
            "str r3, [r1]",
            "str r3, [r0]",
            "b 0xd20",
            "mov r8, 0xc0000017",
            "b 0xd08",
            "mov r0, r7",
            "ldr r1, [r5]",
            "bl sym.imp.dom_sid_string",
            "ldr r3, [0x00000f94]",
            "ldr r3, [sb, r3]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mov r7, r0",
            "bge 0xe98",
            "mov r0, 0",
            "mov r2, r4",
            "mov r1, r0",
            "bl sym.imp.security_token_debug",
            "ldr r1, [0x00000fa8]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp._talloc_free",
            "ldr r8, [0x00000f9c]",
            "b 0xd08",
            "mov r0, 0",
            "ldr r2, [0x00000fac]",
            "ldr r3, [0x00000fb0]",
            "add r2, pc, r2",
            "mov r1, r0",
            "add r3, pc, r3",
            "bl sym.imp.dbghdrclass",
            "cmp r0, 0",
            "beq 0xe70",
            "ldr r0, [0x00000fb4]",
            "mov r2, r6",
            "ldr r3, [r5, 8]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.dbgtext",
            "b 0xe70",
            "mov r0, 0",
            "ldr r2, [0x00000fb8]",
            "ldr r3, [0x00000fbc]",
            "add r2, pc, r2",
            "mov r1, r0",
            "add r3, pc, r3",
            "bl sym.imp.dbghdrclass",
            "cmp r0, 0",
            "beq 0xce4",
            "ldr r0, [0x00000fc0]",
            "ldr r2, [sl, 8]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.dbgtext",
            "b 0xce4",
            "mov r0, 0",
            "ldr r2, [0x00000fc4]",
            "ldr r3, [0x00000fc8]",
            "add r2, pc, r2",
            "mov r1, r0",
            "add r3, pc, r3",
            "bl sym.imp.dbghdrclass",
            "cmp r0, 0",
            "beq 0xd58",
            "ldr r0, [0x00000fcc]",
            "ldr r2, [sl, 0x18]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.dbgtext",
            "b 0xd58",
            "ldr r2, [0x00000fd0]",
            "ldr r3, [0x00000fd4]",
            "mov r0, 5",
            "mov r1, 0",
            "add r2, pc, r2",
            "add r3, pc, r3",
            "bl sym.imp.dbghdrclass",
            "cmp r0, 0",
            "beq 0xe08",
            "ldr r0, [0x00000fd8]",
            "add r0, pc, r0",
            "bl sym.imp.dbgtext",
            "b 0xe08"
        ]
    },
    "sym.imp._talloc_zero": {
        "function_address": "0x00000a08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x62c]!"
        ]
    },
    "sym.imp._talloc_zero_array": {
        "function_address": "0x0000099c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x674]!"
        ]
    },
    "sym.imp.wbc_sids_to_xids": {
        "function_address": "0x000009c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x65c]!"
        ]
    },
    "sym.imp._talloc_array": {
        "function_address": "0x00000a14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x624]!"
        ]
    },
    "sym.imp.dom_sid_string": {
        "function_address": "0x00000a20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x61c]!"
        ]
    },
    "sym.imp.security_token_debug": {
        "function_address": "0x000009fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x634]!"
        ]
    },
    "sym.imp._talloc_free": {
        "function_address": "0x000009f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x63c]!"
        ]
    },
    "sym.imp.dbghdrclass": {
        "function_address": "0x000009e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x644]!"
        ]
    },
    "sym.imp.dbgtext": {
        "function_address": "0x000009b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x664]!"
        ]
    },
    "sym.auth_session_info_fill_unix": {
        "function_address": "0x00000fdc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r3",
            "sub sp, sp, 8",
            "mov r7, r2",
            "mov r8, r1",
            "ldr r2, [r3], 4",
            "mov r1, r0",
            "mov r0, r4",
            "bl rsym.security_token_to_unix_token",
            "subs r6, r0, 0",
            "bne 0x10b8",
            "ldr r2, [0x000010d8]",
            "mov r0, r4",
            "mov r1, 8",
            "add r2, pc, r2",
            "bl sym.imp._talloc_zero",
            "cmp r0, 0",
            "mov r5, r0",
            "str r0, [r4, 0xc]",
            "beq 0x10c8",
            "ldr r3, [r4, 8]",
            "mov r0, r8",
            "ldr r8, [r3, 4]",
            "bl sym.imp.lpcfg_winbind_separator",
            "ldr r2, [r4, 8]",
            "ldr r1, [r2]",
            "str r1, [sp]",
            "ldr r1, [0x000010dc]",
            "mov r3, r0",
            "mov r2, r8",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.talloc_asprintf",
            "ldr r4, [r4, 0xc]",
            "str r0, [r5]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x10c8",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "ldr r3, [0x000010e0]",
            "add r5, r0, 1",
            "mov r2, r5",
            "mov r0, r4",
            "mov r1, 1",
            "add r3, pc, r3",
            "bl sym.imp._talloc_array",
            "cmp r0, 0",
            "str r0, [r4, 4]",
            "beq 0x10c8",
            "ldr r2, [0x000010e4]",
            "mov r1, r7",
            "mov r3, r5",
            "add r2, pc, r2",
            "bl sym.imp.alpha_strcpy",
            "mov r0, r6",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, lr}",
            "bx lr",
            "mov r0, 0xc0000017",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, lr}",
            "bx lr"
        ]
    },
    "rsym.security_token_to_unix_token": {
        "function_address": "0x00000984",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x684]!"
        ]
    },
    "sym.imp.lpcfg_winbind_separator": {
        "function_address": "0x000009a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x66c]!"
        ]
    },
    "sym.imp.talloc_asprintf": {
        "function_address": "0x00000a2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x614]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x000009d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x64c]!"
        ]
    },
    "sym.imp.alpha_strcpy": {
        "function_address": "0x00000978",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x68c]!"
        ]
    },
    "sym._init": {
        "function_address": "0x00000954",
        "instructions": [
            "push {r3, lr}",
            "bl entry0",
            "pop {r3, lr}",
            "bx lr"
        ]
    },
    "r15": {
        "function_address": "0x00000a38",
        "instructions": [
            "ldr r3, [0x00000a54]",
            "ldr r2, [0x00000a58]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "cmp r2, 0",
            "bxeq lr",
            "b loc.imp.__gmon_start__"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00000af8",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00000b4c]",
            "add r3, pc, r3",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "ldr r3, [0x00000b50]",
            "add r3, pc, r3",
            "bne 0xb44",
            "ldr r2, [0x00000b54]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "ldrne r3, [0x00000b58]",
            "ldrne r0, [0x00000b30]",
            "blne sym.imp.__cxa_finalize",
            "bl fcn.00000a5c",
            "mov r2, 1",
            "ldr r3, [0x00000b5c]",
            "add r3, pc, r3",
            "strb r2, [r3]",
            "pop {r3, lr}",
            "bx lr"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00000990",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0x67c]!"
        ]
    },
    "fcn.00000a5c": {
        "function_address": "0x00000a5c",
        "instructions": [
            "ldr r3, [0x00000a98]",
            "ldr r0, [0x00000a9c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 3",
            "rsb r3, r0, r3",
            "cmp r3, 6",
            "ldr r3, [0x00000aa0]",
            "add r3, pc, r3",
            "bxls lr",
            "ldr r2, [0x00000aa4]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3"
        ]
    }
}