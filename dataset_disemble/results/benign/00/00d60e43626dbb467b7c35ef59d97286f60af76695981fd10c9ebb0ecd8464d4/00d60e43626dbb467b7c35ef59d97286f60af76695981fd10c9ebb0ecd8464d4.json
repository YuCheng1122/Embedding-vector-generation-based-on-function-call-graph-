{
    "sym.samba_init_module": {
        "function_address": "0x00006740",
        "instructions": [
            "lea rdx, [0x0020b040]",
            "lea rsi, str.shadow_copy2",
            "sub rsp, 8",
            "mov edi, 0x22",
            "call sym.imp.smb_register_vfs",
            "add rsp, 8",
            "ret"
        ]
    },
    "sym.imp.smb_register_vfs": {
        "function_address": "0x00001eb0",
        "instructions": [
            "jmp qword [reloc.smb_register_vfs]"
        ]
    },
    "sym._init": {
        "function_address": "0x00001e00",
        "instructions": [
            "sub rsp, 8",
            "mov rax, qword [reloc.__gmon_start__]",
            "test rax, rax",
            "je 0x1e15",
            "call loc.imp.__gmon_start__",
            "add rsp, 8",
            "ret"
        ]
    },
    "loc.imp.__gmon_start__": {
        "function_address": "0x00001ea0",
        "instructions": [
            "jmp qword [0x0020ada8]"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00002380",
        "instructions": [
            "cmp byte [loc._edata], 0",
            "jne 0x23b0",
            "cmp qword [reloc.__cxa_finalize], 0",
            "push rbp",
            "mov rbp, rsp",
            "je 0x23a3",
            "mov rdi, qword [section..data]",
            "call sym.imp.__cxa_finalize",
            "call entry0",
            "pop rbp",
            "mov byte [loc._edata], 1",
            "repz ret"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00002020",
        "instructions": [
            "jmp qword [0x0020ae68]"
        ]
    },
    "rip": {
        "function_address": "0x000022f0",
        "instructions": [
            "lea rdi, [loc._edata]",
            "lea rax, [0x0020b3a7]",
            "push rbp",
            "sub rax, rdi",
            "mov rbp, rsp",
            "cmp rax, 0xe",
            "jbe 0x2320",
            "mov rax, qword [reloc._ITM_deregisterTMCloneTable]",
            "test rax, rax",
            "je 0x2320",
            "pop rbp",
            "jmp rax",
            "pop rbp",
            "ret"
        ]
    },
    "fcn.00006580": {
        "function_address": "0x00006580",
        "instructions": [
            "push r12",
            "push rbp",
            "push rbx",
            "sub rsp, 0x50",
            "test rdi, rdi",
            "mov qword [rsp + 8], rsi",
            "je 0x6600",
            "mov rbx, qword [rdi + 0x28]",
            "test rbx, rbx",
            "je 0x6600",
            "cmp byte [rbx + 8], 0",
            "mov rbp, rdx",
            "jne 0x6620",
            "cmp byte [rbx + 9], 0",
            "lea r12, [rsp + 0x10]",
            "lea rdi, [rsp + 8]",
            "mov rsi, r12",
            "je 0x65e0",
            "call sym.imp.localtime_r",
            "test rax, rax",
            "je 0x65ea",
            "mov rdx, qword [rbx]",
            "mov rcx, r12",
            "mov rdi, rbp",
            "mov esi, 0x100",
            "call sym.imp.strftime",
            "add rsp, 0x50",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "ret",
            "call sym.imp.gmtime_r",
            "test rax, rax",
            "jne 0x65c1",
            "add rsp, 0x50",
            "mov rax, 0xffffffffffffffff",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "ret",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "jns 0x6650",
            "xor eax, eax",
            "add rsp, 0x50",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "ret",
            "mov r9, qword [rsp + 8]",
            "mov r8, qword [rbx]",
            "mov rdi, rbp",
            "mov rcx, 0xffffffffffffffff",
            "mov edx, 1",
            "mov esi, 0x100",
            "xor eax, eax",
            "call sym.imp.__snprintf_chk",
            "add rsp, 0x50",
            "cdqe",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "ret",
            "lea rcx, str.shadow_copy2_posix_gmt_string",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:101",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x6610",
            "lea rsi, str.shadow_copy2_posix_gmt_string",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "xor eax, eax",
            "jmp 0x6612"
        ]
    },
    "sym.imp.localtime_r": {
        "function_address": "0x00002210",
        "instructions": [
            "jmp qword [reloc.localtime_r]"
        ]
    },
    "sym.imp.strftime": {
        "function_address": "0x000022b0",
        "instructions": [
            "jmp qword [reloc.strftime]"
        ]
    },
    "sym.imp.gmtime_r": {
        "function_address": "0x000020a0",
        "instructions": [
            "jmp qword [reloc.gmtime_r]"
        ]
    },
    "sym.imp.__snprintf_chk": {
        "function_address": "0x00002250",
        "instructions": [
            "jmp qword [reloc.__snprintf_chk]"
        ]
    },
    "sym.imp.dbghdrclass": {
        "function_address": "0x00001fa0",
        "instructions": [
            "jmp qword [reloc.dbghdrclass]"
        ]
    },
    "sym.imp.dbgtext": {
        "function_address": "0x00002220",
        "instructions": [
            "jmp qword [reloc.dbgtext]"
        ]
    },
    "fcn.000023f0": {
        "function_address": "0x000023f0",
        "instructions": [
            "push r12",
            "push rbp",
            "mov r12, rdi",
            "push rbx",
            "mov rdi, rsi",
            "sub rsp, 0x100",
            "test rsi, rsi",
            "je 0x2490",
            "mov rbx, qword [rsi + 0x28]",
            "test rbx, rbx",
            "je 0x2490",
            "mov rsi, rdx",
            "mov rdx, rsp",
            "call fcn.00006580",
            "test rax, rax",
            "je 0x2460",
            "cmp byte [rbx + 0x28], 0",
            "mov rdx, qword [rbx + 0x10]",
            "mov rcx, rsp",
            "jne 0x2478",
            "lea rsi, [0x000076d5]",
            "mov rdi, r12",
            "xor eax, eax",
            "call sym.imp.talloc_asprintf",
            "test rax, rax",
            "mov rbx, rax",
            "jne 0x2462",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "jg 0x24d2",
            "nop dword [rax]",
            "xor ebx, ebx",
            "add rsp, 0x100",
            "mov rax, rbx",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "ret",
            "lea rsi, [0x000076d6]",
            "mov rdi, r12",
            "xor eax, eax",
            "call sym.imp.talloc_asprintf",
            "jmp 0x2441",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov edx, dword [rax]",
            "test edx, edx",
            "js 0x2460",
            "lea rcx, str.shadow_copy2_insert_string",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:158",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x2460",
            "lea rsi, str.shadow_copy2_insert_string",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "jmp 0x2460",
            "lea rcx, str.shadow_copy2_insert_string",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:176",
            "xor esi, esi",
            "mov edi, 1",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x2460",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:176_talloc_asprintf_failed_n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "jmp 0x2462"
        ]
    },
    "sym.imp.talloc_asprintf": {
        "function_address": "0x000020d0",
        "instructions": [
            "jmp qword [reloc.talloc_asprintf]"
        ]
    },
    "fcn.00002510": {
        "function_address": "0x00002510",
        "instructions": [
            "push r12",
            "push rbp",
            "mov r12, rdi",
            "push rbx",
            "mov rdi, rsi",
            "sub rsp, 0x100",
            "test rsi, rsi",
            "je 0x2588",
            "mov rbx, qword [rsi + 0x28]",
            "test rbx, rbx",
            "je 0x2588",
            "mov rsi, rdx",
            "mov rdx, rsp",
            "call fcn.00006580",
            "test rax, rax",
            "je 0x2570",
            "mov rdx, qword [rbx + 0x40]",
            "lea rsi, [0x000076d6]",
            "xor eax, eax",
            "mov rcx, rsp",
            "mov rdi, r12",
            "call sym.imp.talloc_asprintf",
            "test rax, rax",
            "mov rbx, rax",
            "jne 0x2572",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "jg 0x25ca",
            "nop",
            "xor ebx, ebx",
            "add rsp, 0x100",
            "mov rax, rbx",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "ret",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov edx, dword [rax]",
            "test edx, edx",
            "js 0x2570",
            "lea rcx, str.shadow_copy2_snapshot_path",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:200",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x2570",
            "lea rsi, str.shadow_copy2_snapshot_path",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "jmp 0x2570",
            "lea rcx, str.shadow_copy2_snapshot_path",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:213",
            "xor esi, esi",
            "mov edi, 1",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x2570",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:213_talloc_asprintf_failed_n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "jmp 0x2572"
        ]
    },
    "fcn.00002dc0": {
        "function_address": "0x00002dc0",
        "instructions": [
            "push r15",
            "push r14",
            "mov r14, rsi",
            "push r13",
            "push r12",
            "push rbp",
            "push rbx",
            "sub rsp, 0x78",
            "test rsi, rsi",
            "mov qword [rsp], rdi",
            "je 0x2fe0",
            "mov rbp, qword [rsi + 0x28]",
            "test rbp, rbp",
            "je 0x2fe0",
            "lea rsi, str._GMT_",
            "mov rdi, rdx",
            "mov rbx, rdx",
            "mov r12, rcx",
            "mov r13, r8",
            "call sym.imp.strstr_m",
            "test rax, rax",
            "mov r15, rax",
            "je 0x2fa8",
            "cmp rbx, rax",
            "jb 0x2fd0",
            "mov rax, qword [r14 + 0x18]",
            "mov edi, 0xffffffff",
            "test rax, rax",
            "je 0x2e2c",
            "mov rax, qword [rax + 0x28]",
            "mov edi, dword [rax]",
            "lea rcx, str..snapshots",
            "lea rdx, str.snapdir",
            "lea rsi, str.shadow",
            "call sym.imp.lp_parm_const_string",
            "mov rdi, rax",
            "mov qword [rsp + 8], rax",
            "call sym.imp.strlen",
            "mov rcx, r15",
            "sub rcx, rbx",
            "cmp rax, rcx",
            "mov qword [rsp + 0x18], rcx",
            "jge 0x2e73",
            "cmp byte [r15 - 1], 0x2f",
            "mov rsi, qword [rsp + 8]",
            "je 0x2ff8",
            "lea rcx, [rsp + 0x30]",
            "lea rsi, str._GMT__Y._m._d__H._M._S",
            "mov rdi, r15",
            "mov rdx, rcx",
            "mov qword [rsp + 8], rcx",
            "call sym.imp.strptime",
            "test rax, rax",
            "mov qword [rsp + 0x10], rax",
            "je 0x2fa8",
            "mov rcx, qword [rsp + 8]",
            "mov dword [rsp + 0x50], 0xffffffff",
            "mov rdi, rcx",
            "call sym.imp.timegm",
            "cmp rax, 0xffffffffffffffff",
            "mov r10, rax",
            "je 0x2fa8",
            "mov rdx, qword [rsp + 0x10]",
            "movzx eax, byte [rdx]",
            "test al, al",
            "jne 0x2f10",
            "test r13, r13",
            "je 0x2ef8",
            "mov rdx, qword [rsp + 0x18]",
            "mov rdi, qword [rsp]",
            "mov rsi, rbx",
            "mov qword [rsp + 8], r10",
            "call sym.imp.talloc_strndup",
            "test rax, rax",
            "je 0x2ff0",
            "mov r10, qword [rsp + 8]",
            "mov qword [r13], rax",
            "mov qword [r12], r10",
            "mov ebp, 1",
            "jmp 0x2fb5",
            "cmp al, 0x2f",
            "jne 0x2fa8",
            "lea rax, [rdx + 1]",
            "mov qword [rsp + 8], r10",
            "mov rdi, rax",
            "mov qword [rsp + 0x20], rax",
            "call sym.imp.strlen",
            "movzx ebp, byte [rbp + 0x18]",
            "mov qword [rsp + 0x10], rax",
            "mov r10, qword [rsp + 8]",
            "test bpl, bpl",
            "je 0x3050",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:326",
            "call sym.imp._talloc_tos",
            "mov r10, qword [rsp + 8]",
            "mov rsi, r14",
            "mov rdi, rax",
            "mov rdx, r10",
            "call fcn.000023f0",
            "test rax, rax",
            "mov rbp, rax",
            "mov r10, qword [rsp + 8]",
            "je 0x311f",
            "lea rsi, [rax + 1]",
            "mov rdi, rbx",
            "mov qword [rsp + 8], r10",
            "call sym.imp.strstr",
            "test rax, rax",
            "mov r10, qword [rsp + 8]",
            "je 0x317e",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:344",
            "mov rdi, rbp",
            "call sym.imp._talloc_free",
            "nop dword [rax + rax]",
            "mov qword [r12], 0",
            "mov ebp, 1",
            "add rsp, 0x78",
            "mov eax, ebp",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "ret",
            "cmp byte [rax - 1], 0x2f",
            "jne 0x2fa8",
            "jmp 0x2e18",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "jns 0x3018",
            "xor ebp, ebp",
            "jmp 0x2fb5",
            "mov rdi, rax",
            "mov rdx, rax",
            "not rdi",
            "add rdi, r15",
            "call sym.imp.strncmp",
            "test eax, eax",
            "je 0x2fa8",
            "jmp 0x2e73",
            "lea rcx, str.shadow_copy2_strip_snapshot",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:242",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x2ff0",
            "lea rsi, str.shadow_copy2_strip_snapshot",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "xor ebp, ebp",
            "call sym.imp.dbgtext",
            "jmp 0x2fb5",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:352",
            "mov qword [rsp + 8], r10",
            "call sym.imp._talloc_tos",
            "mov r10, qword [rsp + 8]",
            "mov rsi, r14",
            "mov rdi, rax",
            "mov rdx, r10",
            "call fcn.00002510",
            "test rax, rax",
            "mov r10, qword [rsp + 8]",
            "je 0x311f",
            "mov rsi, rax",
            "mov rdi, rbx",
            "mov qword [rsp + 0x28], r10",
            "mov qword [rsp + 8], rax",
            "call sym.imp.strstr",
            "cmp rax, rbx",
            "mov rdx, qword [rsp + 8]",
            "mov r10, qword [rsp + 0x28]",
            "je 0x316a",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:377",
            "mov rdi, rdx",
            "mov qword [rsp + 8], r10",
            "call sym.imp._talloc_free",
            "mov r10, qword [rsp + 8]",
            "test r13, r13",
            "je 0x2ef8",
            "mov rbp, qword [rsp + 0x10]",
            "add rbp, qword [rsp + 0x18]",
            "lea rcx, str.char",
            "mov rdi, qword [rsp]",
            "mov esi, 1",
            "mov qword [rsp + 8], r10",
            "lea edx, [rbp + 1]",
            "call sym.imp._talloc_array",
            "test rax, rax",
            "mov r14, rax",
            "mov r10, qword [rsp + 8]",
            "je 0x319c",
            "cmp rbx, r15",
            "jb 0x3150",
            "cmp qword [rsp + 0x10], 0",
            "jne 0x312f",
            "mov byte [r14 + rbp], 0",
            "mov qword [r13], r14",
            "jmp 0x2ef8",
            "call sym.imp.__errno_location",
            "mov dword [rax], 0xc",
            "jmp 0x2fb5",
            "mov rdi, qword [rsp + 0x18]",
            "mov rdx, qword [rsp + 0x10]",
            "mov rsi, qword [rsp + 0x20]",
            "mov qword [rsp], r10",
            "add rdi, r14",
            "call sym.imp.memcpy",
            "mov r10, qword [rsp]",
            "jmp 0x3111",
            "mov rdx, qword [rsp + 0x18]",
            "mov rsi, rbx",
            "mov rdi, rax",
            "mov qword [rsp], r10",
            "call sym.imp.memcpy",
            "mov r10, qword [rsp]",
            "jmp 0x3109",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:374",
            "mov rdi, rdx",
            "call sym.imp._talloc_free",
            "jmp 0x2fa8",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:347",
            "mov rdi, rbp",
            "mov qword [rsp + 8], r10",
            "call sym.imp._talloc_free",
            "mov r10, qword [rsp + 8]",
            "jmp 0x30c3",
            "call sym.imp.__errno_location",
            "xor ebp, ebp",
            "mov dword [rax], 0xc",
            "jmp 0x2fb5"
        ]
    },
    "sym.imp.strstr_m": {
        "function_address": "0x00002290",
        "instructions": [
            "jmp qword [reloc.strstr_m]"
        ]
    },
    "sym.imp.lp_parm_const_string": {
        "function_address": "0x000022a0",
        "instructions": [
            "jmp qword [reloc.lp_parm_const_string]"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x00001fb0",
        "instructions": [
            "jmp qword [reloc.strlen]"
        ]
    },
    "sym.imp.strptime": {
        "function_address": "0x00002130",
        "instructions": [
            "jmp qword [reloc.strptime]"
        ]
    },
    "sym.imp.timegm": {
        "function_address": "0x00002090",
        "instructions": [
            "jmp qword [reloc.timegm]"
        ]
    },
    "sym.imp.talloc_strndup": {
        "function_address": "0x000022d0",
        "instructions": [
            "jmp qword [reloc.talloc_strndup]"
        ]
    },
    "sym.imp._talloc_tos": {
        "function_address": "0x000020f0",
        "instructions": [
            "jmp qword [reloc._talloc_tos]"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x000020c0",
        "instructions": [
            "jmp qword [reloc.strstr]"
        ]
    },
    "sym.imp._talloc_free": {
        "function_address": "0x00001e90",
        "instructions": [
            "jmp qword [reloc._talloc_free]"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x00001f00",
        "instructions": [
            "jmp qword [reloc.strncmp]"
        ]
    },
    "sym.imp._talloc_array": {
        "function_address": "0x00001ef0",
        "instructions": [
            "jmp qword [reloc._talloc_array]"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x00002170",
        "instructions": [
            "jmp qword [reloc.__errno_location]"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x000022c0",
        "instructions": [
            "jmp qword [reloc.memcpy]"
        ]
    },
    "fcn.00002700": {
        "function_address": "0x00002700",
        "instructions": [
            "push r15",
            "push r14",
            "mov r14, rsi",
            "push r13",
            "push r12",
            "push rbp",
            "push rbx",
            "sub rsp, 0x118",
            "test rsi, rsi",
            "mov qword [rsp], rcx",
            "mov qword [rsp + 0x10], r8",
            "je 0x2ab8",
            "mov r12, qword [rsi + 0x28]",
            "test r12, r12",
            "je 0x2ab8",
            "cmp byte [r12 + 0x18], 0",
            "mov r13, rdi",
            "mov rbp, rdx",
            "je 0x2ae0",
            "mov rax, qword [rsi + 0x18]",
            "mov rbx, qword [rax + 0x50]",
            "mov rdi, rbx",
            "call sym.imp.strlen",
            "cmp byte [rbp], 0",
            "mov qword [rsp + 8], rax",
            "je 0x2a80",
            "lea rsi, [0x000076d6]",
            "mov rcx, rbp",
            "xor eax, eax",
            "mov rdx, rbx",
            "mov rdi, r13",
            "call sym.imp.talloc_asprintf",
            "mov rbp, rax",
            "test rbp, rbp",
            "je 0x2a97",
            "mov rdi, rbp",
            "xor ebx, ebx",
            "call sym.imp.talloc_get_size",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:526",
            "mov qword [rsp + 0x20], rax",
            "call sym.imp._talloc_tos",
            "mov rdi, rbp",
            "mov r15, rax",
            "jmp 0x27b7",
            "lea rdi, [rax + 1]",
            "add ebx, 1",
            "mov esi, 0x2f",
            "call sym.imp.strchr",
            "test rax, rax",
            "jne 0x27b0",
            "lea rcx, str.size_t",
            "mov rdi, r15",
            "mov edx, ebx",
            "mov esi, 8",
            "call sym.imp._talloc_array",
            "test rax, rax",
            "mov r15, rax",
            "je 0x2d34",
            "mov rdi, rbp",
            "xor ebx, ebx",
            "jmp 0x2803",
            "mov rcx, rax",
            "mov edx, ebx",
            "lea rdi, [rax + 1]",
            "sub rcx, rbp",
            "add ebx, 1",
            "mov qword [r15 + rdx*8], rcx",
            "mov esi, 0x2f",
            "call sym.imp.strchr",
            "test rax, rax",
            "jne 0x27f0",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:531",
            "mov dword [rsp + 0x28], ebx",
            "call sym.imp._talloc_tos",
            "mov rdx, qword [rsp]",
            "mov rsi, r14",
            "mov rdi, rax",
            "call fcn.000023f0",
            "test rax, rax",
            "mov r9, rax",
            "je 0x2bb0",
            "mov rax, qword [rsp + 0x20]",
            "mov rdi, r9",
            "mov qword [rsp + 0x30], r9",
            "sub rax, 1",
            "mov qword [rsp + 0x18], rax",
            "call sym.imp.talloc_get_size",
            "lea rdx, [rax - 1]",
            "mov rax, qword [rsp + 0x18]",
            "lea rcx, str.char",
            "mov rdi, r13",
            "mov esi, 1",
            "mov qword [rsp], rdx",
            "lea edx, [rax + rdx + 1]",
            "call sym.imp._talloc_array",
            "test rax, rax",
            "mov r13, rax",
            "mov r9, qword [rsp + 0x30]",
            "je 0x2d1c",
            "mov rax, qword [rsp + 0x20]",
            "cmp byte [rbp + rax - 2], 0x2f",
            "je 0x28e5",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:557",
            "mov qword [rsp + 0x30], r9",
            "add dword [rsp + 0x28], 1",
            "call sym.imp._talloc_tos",
            "mov ecx, dword [rsp + 0x28]",
            "lea r8, str.size_t",
            "mov edx, 8",
            "mov rsi, r15",
            "mov rdi, rax",
            "call sym.imp._talloc_realloc_array",
            "test rax, rax",
            "mov r9, qword [rsp + 0x30]",
            "je 0x2d9b",
            "mov rdx, qword [rsp + 0x18]",
            "mov r15, rax",
            "mov qword [rax + rbx*8], rdx",
            "cmp byte [r12 + 0x19], 0",
            "mov qword [rsp + 0x30], r9",
            "je 0x2c4f",
            "mov rdx, qword [rsp + 0x20]",
            "mov rdi, r13",
            "mov rsi, rbp",
            "call sym.imp.memcpy",
            "mov rax, qword [rsp + 0x18]",
            "mov rdx, qword [rsp]",
            "lea rdi, [rsp + 0x60]",
            "mov r12d, dword [rsp + 0x28]",
            "mov ecx, 0x16",
            "mov r9, qword [rsp + 0x30]",
            "mov qword [rsp + 0x38], rdi",
            "add rax, r13",
            "mov byte [rax + rdx], 0",
            "xor eax, eax",
            "sub r12d, 1",
            "rep stosq qword [rdi], rax",
            "mov qword [rsp + 0x60], r13",
            "js 0x2cc2",
            "movsxd rdx, r12d",
            "mov qword [rsp + 0x48], 0",
            "lea rax, [r15 + rdx*8]",
            "mov rcx, qword [rax]",
            "mov qword [rsp + 0x28], rax",
            "nop dword [rax + rax]",
            "mov qword [rsp + 0x30], rdx",
            "mov qword [rsp + 0x50], rcx",
            "mov ebx, r12d",
            "mov qword [rsp + 0x20], r9",
            "call sym.imp.__errno_location",
            "mov rdx, qword [rsp + 0x30]",
            "mov rcx, qword [rsp + 0x50]",
            "xor r11d, r11d",
            "mov r12, qword [rsp + 0x28]",
            "mov qword [rsp + 0x58], r15",
            "mov qword [rsp + 0x28], rbp",
            "mov qword [rsp + 0x40], r14",
            "mov rbp, r11",
            "lea r8, [rdx*8 - 8]",
            "mov qword [rsp + 0x30], rax",
            "mov r14, rcx",
            "add r8, r15",
            "mov r15, r8",
            "jmp 0x29ef",
            "mov rax, qword [rsp + 0x30]",
            "mov eax, dword [rax]",
            "cmp eax, 0x14",
            "je 0x29cd",
            "cmp eax, 2",
            "jne 0x2d7f",
            "sub ebx, 1",
            "cmp ebx, 0xffffffff",
            "je 0x2d47",
            "mov r12, r15",
            "sub r15, 8",
            "mov r14, qword [r15 + 8]",
            "cmp r14, qword [rsp + 0x48]",
            "jb 0x2d47",
            "cmp qword [rsp + 8], r14",
            "mov rdx, qword [rsp]",
            "lea rdi, [r13 + r14]",
            "mov rsi, qword [rsp + 0x20]",
            "cmovbe rbp, r14",
            "call sym.imp.memcpy",
            "mov rsi, qword [r12]",
            "mov rdx, qword [rsp + 0x18]",
            "mov rax, qword [rsp]",
            "sub rdx, rsi",
            "add rsi, qword [rsp + 0x28]",
            "lea rdi, [r14 + rax]",
            "add rdi, r13",
            "call sym.imp.memcpy",
            "mov rax, qword [rsp + 0x40]",
            "mov rsi, qword [rsp + 0x38]",
            "mov rdi, qword [rax]",
            "call sym.imp.smb_vfs_call_lstat",
            "test eax, eax",
            "jne 0x29b8",
            "mov rax, qword [rsp + 0x10]",
            "mov r11, rbp",
            "mov rbx, qword [rsp + 0x30]",
            "mov r9, qword [rsp + 0x20]",
            "mov rbp, qword [rsp + 0x28]",
            "mov r15, qword [rsp + 0x58]",
            "test rax, rax",
            "je 0x2a6e",
            "add r11, qword [rsp]",
            "mov qword [rax], r11",
            "mov r12d, dword [rbx]",
            "jmp 0x2c26",
            "mov rsi, rbx",
            "mov rdi, r13",
            "call sym.imp.talloc_strdup",
            "mov rbp, rax",
            "test rbp, rbp",
            "jne 0x2787",
            "call sym.imp.__errno_location",
            "mov r12d, 0xc",
            "mov rbx, rax",
            "mov dword [rax], 0xc",
            "xor r13d, r13d",
            "jmp 0x2ba0",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "jns 0x2ce3",
            "xor eax, eax",
            "add rsp, 0x118",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "ret",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:467",
            "call sym.imp._talloc_tos",
            "mov rdx, qword [rsp]",
            "mov rsi, r14",
            "mov rdi, rax",
            "call fcn.00002510",
            "test rax, rax",
            "mov rbx, rax",
            "je 0x2c3c",
            "mov rcx, qword [r12 + 0x38]",
            "test rcx, rcx",
            "je 0x2d60",
            "lea rsi, str._s__s__s",
            "mov rdx, rax",
            "mov rdi, r13",
            "mov r8, rbp",
            "xor eax, eax",
            "call sym.imp.talloc_asprintf",
            "mov r13, rax",
            "test r13, r13",
            "je 0x2b92",
            "lea rsi, [rsp + 0x60]",
            "xor eax, eax",
            "mov ecx, 0x16",
            "mov rdi, rsi",
            "rep stosq qword [rdi], rax",
            "mov rdi, qword [r14]",
            "mov qword [rsp + 0x60], r13",
            "call sym.imp.smb_vfs_call_lstat",
            "test eax, eax",
            "jne 0x2bf0",
            "cmp qword [rsp + 0x10], 0",
            "je 0x2b92",
            "mov rdi, rbx",
            "call sym.imp.strlen",
            "mov rdi, qword [r12 + 0x38]",
            "mov rbx, rax",
            "mov rax, qword [rsp + 0x10]",
            "test rdi, rdi",
            "mov qword [rax], rbx",
            "je 0x2b92",
            "call sym.imp.strlen",
            "mov rdx, qword [rsp + 0x10]",
            "lea rax, [rbx + rax + 1]",
            "mov qword [rdx], rax",
            "call sym.imp.__errno_location",
            "mov r12d, dword [rax]",
            "mov rbx, rax",
            "nop dword [rax]",
            "mov dword [rbx], r12d",
            "mov rax, r13",
            "jmp 0x2ace",
            "call sym.imp.__errno_location",
            "mov r12d, dword [rax]",
            "mov rbx, rax",
            "xor r13d, r13d",
            "nop",
            "test r15, r15",
            "je 0x2bd4",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:639",
            "mov rdi, r15",
            "call sym.imp._talloc_free",
            "test rbp, rbp",
            "je 0x2ba0",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:640",
            "mov rdi, rbp",
            "call sym.imp._talloc_free",
            "jmp 0x2ba0",
            "call sym.imp.__errno_location",
            "mov r12d, 2",
            "mov rbx, rax",
            "mov dword [rax], 2",
            "xor r15d, r15d",
            "xor r9d, r9d",
            "xor ebp, ebp",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:637",
            "mov rdi, r13",
            "mov qword [rsp], r9",
            "xor r13d, r13d",
            "call sym.imp._talloc_free",
            "mov r9, qword [rsp]",
            "test r9, r9",
            "je 0x2bc0",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:638",
            "mov rdi, r9",
            "call sym.imp._talloc_free",
            "jmp 0x2bc0",
            "call sym.imp.__errno_location",
            "xor r13d, r13d",
            "mov rbx, rax",
            "mov r12d, dword [rax]",
            "jmp 0x2ba0",
            "mov rdi, qword [r12 + 0x30]",
            "call sym.imp.strlen",
            "mov rdx, qword [rsp + 0x20]",
            "mov rdi, r13",
            "mov rsi, rbp",
            "mov rbx, rax",
            "mov qword [rsp + 0x48], rax",
            "call sym.imp.memcpy",
            "mov rax, qword [rsp + 0x18]",
            "mov rdx, qword [rsp]",
            "lea rdi, [rsp + 0x60]",
            "mov r12d, dword [rsp + 0x28]",
            "mov ecx, 0x16",
            "mov r9, qword [rsp + 0x30]",
            "mov qword [rsp + 0x38], rdi",
            "add rax, r13",
            "mov byte [rax + rdx], 0",
            "xor eax, eax",
            "sub r12d, 1",
            "rep stosq qword [rdi], rax",
            "mov qword [rsp + 0x60], r13",
            "js 0x2cc2",
            "movsxd rdx, r12d",
            "lea rax, [r15 + rdx*8]",
            "mov rcx, qword [rax]",
            "mov qword [rsp + 0x28], rax",
            "cmp rbx, rcx",
            "jbe 0x2960",
            "mov qword [rsp], r9",
            "call sym.imp.__errno_location",
            "mov r9, qword [rsp]",
            "mov rbx, rax",
            "mov dword [rbx], 2",
            "mov r12d, 2",
            "jmp 0x2c0c",
            "lea rcx, str.shadow_copy2_do_convert",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:459",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x2acc",
            "lea rsi, str.shadow_copy2_do_convert",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "jmp 0x2acc",
            "mov qword [rsp], r9",
            "call sym.imp.__errno_location",
            "mov r9, qword [rsp]",
            "mov rbx, rax",
            "mov r12d, dword [rax]",
            "jmp 0x2c26",
            "call sym.imp.__errno_location",
            "xor r13d, r13d",
            "mov rbx, rax",
            "xor r9d, r9d",
            "jmp 0x2a6e",
            "mov rbx, qword [rsp + 0x30]",
            "mov r9, qword [rsp + 0x20]",
            "mov rbp, qword [rsp + 0x28]",
            "mov r15, qword [rsp + 0x58]",
            "jmp 0x2cd2",
            "lea rsi, [0x000076d6]",
            "mov rdx, rax",
            "mov rdi, r13",
            "mov rcx, rbp",
            "xor eax, eax",
            "call sym.imp.talloc_asprintf",
            "mov r13, rax",
            "jmp 0x2b2f",
            "mov rbx, qword [rsp + 0x30]",
            "mov r9, qword [rsp + 0x20]",
            "mov r12d, eax",
            "mov rbp, qword [rsp + 0x28]",
            "mov r15, qword [rsp + 0x58]",
            "jmp 0x2c0c",
            "mov qword [rsp], r9",
            "call sym.imp.__errno_location",
            "mov r9, qword [rsp]",
            "mov rbx, rax",
            "mov r12d, dword [rax]",
            "jmp 0x2c0c"
        ]
    },
    "sym.imp.talloc_get_size": {
        "function_address": "0x00001e50",
        "instructions": [
            "jmp qword [reloc.talloc_get_size]"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x00002140",
        "instructions": [
            "jmp qword [reloc.strchr]"
        ]
    },
    "sym.imp._talloc_realloc_array": {
        "function_address": "0x00002150",
        "instructions": [
            "jmp qword [reloc._talloc_realloc_array]"
        ]
    },
    "sym.imp.smb_vfs_call_lstat": {
        "function_address": "0x000021d0",
        "instructions": [
            "jmp qword [reloc.smb_vfs_call_lstat]"
        ]
    },
    "sym.imp.talloc_strdup": {
        "function_address": "0x00001f70",
        "instructions": [
            "jmp qword [reloc.talloc_strdup]"
        ]
    },
    "fcn.00006690": {
        "function_address": "0x00006690",
        "instructions": [
            "sub rsp, 0x28",
            "test rdi, rdi",
            "je 0x66f0",
            "mov rax, qword [rdi + 0x28]",
            "test rax, rax",
            "je 0x66f0",
            "cmp byte [rax + 0x1a], 0",
            "jne 0x66b0",
            "add rsp, 0x28",
            "ret",
            "mov rdi, rsi",
            "mov qword [rsp + 8], rdx",
            "mov qword [rsp + 0x10], rsi",
            "call sym.imp.strlen",
            "lea rdi, [rsp + 0x10]",
            "mov qword [rsp + 0x18], rax",
            "call sym.imp.tdb_jenkins_hash",
            "mov rdx, qword [rsp + 8]",
            "and eax, 0xff000000",
            "test eax, eax",
            "mov ecx, eax",
            "mov eax, 1",
            "cmovne rax, rcx",
            "xor qword [rdx], rax",
            "add rsp, 0x28",
            "ret",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "js 0x66a8",
            "lea rcx, str.convert_sbuf",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:667",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x66a8",
            "lea rsi, str.convert_sbuf",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "jmp 0x66a8"
        ]
    },
    "sym.imp.tdb_jenkins_hash": {
        "function_address": "0x00001ff0",
        "instructions": [
            "jmp qword [reloc.tdb_jenkins_hash]"
        ]
    },
    "fcn.00002600": {
        "function_address": "0x00002600",
        "instructions": [
            "push r13",
            "push r12",
            "push rbp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 0xb8",
            "test rdi, rdi",
            "je 0x26b0",
            "mov r8, qword [rdi + 0x28]",
            "test r8, r8",
            "je 0x26b0",
            "xor eax, eax",
            "mov ecx, 0x16",
            "mov rdi, rsp",
            "rep stosq qword [rdi], rax",
            "lea rdi, str..._source3_modules_vfs_shadow_copy2.c:1178",
            "mov r12, rsi",
            "mov r13, qword [r8 + 0x10]",
            "call sym.imp._talloc_tos",
            "lea rsi, [0x000076d6]",
            "mov rdi, rax",
            "mov rcx, r13",
            "xor eax, eax",
            "mov rdx, r12",
            "call sym.imp.talloc_asprintf",
            "test rax, rax",
            "mov qword [rsp], rax",
            "je 0x269a",
            "mov rdi, qword [rbx]",
            "mov rsi, rsp",
            "call sym.imp.smb_vfs_call_stat",
            "test eax, eax",
            "jne 0x2685",
            "mov eax, dword [rsp + 0x28]",
            "and eax, 0xf000",
            "cmp eax, 0x4000",
            "je 0x26f8",
            "mov rdi, qword [rsp]",
            "test rdi, rdi",
            "je 0x269a",
            "lea rsi, str..._source3_modules_vfs_shadow_copy2.c:1188",
            "call sym.imp._talloc_free",
            "xor eax, eax",
            "add rsp, 0xb8",
            "pop rbx",
            "pop rbp",
            "pop r12",
            "pop r13",
            "ret",
            "mov rax, qword [reloc.DEBUGLEVEL_CLASS]",
            "mov rax, qword [rax]",
            "mov eax, dword [rax]",
            "test eax, eax",
            "js 0x269a",
            "lea rcx, str.have_snapdir",
            "lea rdx, str..._source3_modules_vfs_shadow_copy2.c:1175",
            "xor esi, esi",
            "xor edi, edi",
            "call sym.imp.dbghdrclass",
            "test al, al",
            "je 0x269a",
            "lea rsi, str.have_snapdir",
            "lea rdi, str._s___failed_to_get_vfs_handle__data__n",
            "xor eax, eax",
            "call sym.imp.dbgtext",
            "xor eax, eax",
            "jmp 0x269c",
            "mov rax, qword [rsp]",
            "jmp 0x269c"
        ]
    },
    "sym.imp.smb_vfs_call_stat": {
        "function_address": "0x000021c0",
        "instructions": [
            "jmp qword [reloc.smb_vfs_call_stat]"
        ]
    }
}