{
    "fcn.00008a20": {
        "function_address": "0x00008a20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r0, 1",
            "movw r6, 0x2b30",
            "movt r6, 1",
            "movw r3, 0x9aec",
            "sub sp, sp, 0x17c",
            "movt r3, 0",
            "str r3, [r6]",
            "ble 0x9110",
            "add r5, r1, r0, lsl 2",
            "add r4, r1, 4",
            "cmp r4, r5",
            "bhs 0x8a80",
            "ldr r0, [r4]",
            "movw r1, 0x9e20",
            "movt r1, 0",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r3, [r4, 4]",
            "addeq r4, r4, 4",
            "add r4, r4, 4",
            "streq r3, [r6]",
            "cmp r4, r5",
            "blo 0x8a54",
            "movw r0, 0x9de0",
            "movt r0, 0",
            "bl sym.imp.puts",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.daemon",
            "ldr r3, [r6]",
            "mov r1, 0x1b",
            "add r0, sp, 0x3c",
            "movw r2, 0x9e08",
            "movt r2, 0",
            "bl sym.imp.snprintf",
            "mov r0, 0x11",
            "mov r1, 2",
            "mov r2, 8",
            "bl sym.imp.socket",
            "movw r3, 0x2538",
            "movt r3, 1",
            "cmp r0, 0",
            "str r0, [r3, 0x5ac]",
            "blt 0x90ac",
            "add r1, r3, 0x590",
            "mov r4, 0",
            "movw lr, 0x596",
            "movw r5, 0x594",
            "mov ip, r1",
            "add r1, r1, 4",
            "mov r2, 0x14",
            "str r4, [r1, 4]",
            "str r4, [ip, 0xc]",
            "mov r6, 0x11",
            "str r4, [r3, 0x5a0]",
            "mov ip, 8",
            "strh r6, [r3, r5]",
            "strh ip, [r3, lr]",
            "mov ip, 6",
            "strb ip, [r3, 0x59f]",
            "bl sym.imp.bind",
            "cmp r0, r4",
            "blt 0x90fc",
            "mov r2, r4",
            "add r1, sp, 0x28",
            "mov r0, 0xa",
            "mov ip, 0x10000000",
            "str r4, [sp, 0x30]",
            "movw r3, 0x9824",
            "str ip, [sp, 0x2c]",
            "movt r3, 0",
            "str r4, [sp, 0x34]",
            "movw r6, 0x2ae8",
            "str r3, [sp, 0x28]",
            "movt r6, 1",
            "str r4, [sp, 0x38]",
            "str r4, [sp, 4]",
            "bl sym.imp.sigaction",
            "add r1, sp, 0x28",
            "mov r2, r4",
            "mov r0, 0xc",
            "bl sym.imp.sigaction",
            "add r1, sp, 0x28",
            "mov r2, r4",
            "mov r0, 2",
            "bl sym.imp.sigaction",
            "movw r0, 0x9e4c",
            "movt r0, 0",
            "bl sym.imp.system",
            "ldr r8, [sp, 4]",
            "movw r3, 0x6667",
            "movt r3, 0x6666",
            "str r3, [sp, 0xc]",
            "mov sb, r8",
            "str r8, [sp]",
            "str r8, [sp, 8]",
            "movw r1, 0x99d0",
            "add r0, sp, 0x3c",
            "movt r1, 0",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0x9090",
            "mov r4, 0",
            "add r0, sp, 0x78",
            "mov r1, 0x80",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x8e58",
            "cmp r4, 0xb",
            "ldrls pc, [pc, r4, lsl 2]",
            "b case.0x8bdc.1",
            "add r2, sp, 0x10",
            "movw r1, 0x9e70",
            "add r0, sp, 0x78",
            "movt r1, 0",
            "bl sym.imp.sscanf",
            "add r0, sp, 0x10",
            "bl sym.imp.atoi",
            "strh r0, [r6, 0x46]",
            "movw r0, 0x9e78",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0x9ed0",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0x9f28",
            "movw r1, 0x99d0",
            "movt r0, 0",
            "movt r1, 0",
            "mov r3, 0",
            "strh r3, [r6, 0x42]",
            "bl sym.imp.fopen",
            "subs sl, r0, 0",
            "moveq r7, sl",
            "beq 0x8c98",
            "add r2, sp, 0x20",
            "movw r1, 0x9e6c",
            "movt r1, 0",
            "bl sym.imp.fscanf",
            "add r0, sp, 0x20",
            "bl sym.imp.atoi",
            "mov r7, r0",
            "mov r0, sl",
            "bl sym.imp.fclose",
            "movw r0, 0x9f14",
            "movw r1, 0x99d0",
            "movt r0, 0",
            "movt r1, 0",
            "bl sym.imp.fopen",
            "subs fp, r0, 0",
            "moveq sl, fp",
            "beq 0x8cdc",
            "add r2, sp, 0x20",
            "movw r1, 0x9e6c",
            "movt r1, 0",
            "bl sym.imp.fscanf",
            "add r0, sp, 0x20",
            "bl sym.imp.atoi",
            "mov sl, r0",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "ldrh r3, [r6, 0x46]",
            "cmp r7, sl",
            "movlt r7, sl",
            "cmp r3, 0xb",
            "strh r7, [r6, 0x42]",
            "moveq r3, 0",
            "strbeq r3, [r6, 0x41]",
            "beq case.0x8bdc.1",
            "cmp r3, 0x36",
            "moveq r3, 1",
            "strbeq r3, [r6, 0x41]",
            "beq case.0x8bdc.1",
            "cmp r3, 0x91",
            "cmpne r3, 0x82",
            "moveq r3, 2",
            "strbeq r3, [r6, 0x41]",
            "beq case.0x8bdc.1",
            "movw r2, 0x10e",
            "cmp r3, 0x12c",
            "cmpne r3, r2",
            "moveq r3, 3",
            "strbeq r3, [r6, 0x41]",
            "beq case.0x8bdc.1",
            "cmp r3, 0x41",
            "moveq r3, 4",
            "strbeq r3, [r6, 0x41]",
            "beq case.0x8bdc.1",
            "cmp r3, 0x96",
            "moveq r3, 5",
            "strbeq r3, [r6, 0x41]",
            "add r4, r4, 1",
            "b 0x8bc0",
            "add r0, sp, 0x78",
            "add r4, r4, 1",
            "bl sym.imp.strlen",
            "add r1, sp, 0x78",
            "mov r7, r0",
            "add r7, r6, r7",
            "mov r2, r0",
            "movw r0, 0x2ae8",
            "movt r0, 1",
            "bl sym.imp.strncpy",
            "mov r3, 0",
            "strb r3, [r7, -1]",
            "b 0x8bc0",
            "movw r1, 0x9e6c",
            "add r0, sp, 0x78",
            "movt r1, 0",
            "add r2, sp, 0x18",
            "bl sym.imp.sscanf",
            "add r4, r4, 1",
            "b 0x8bc0",
            "ldr r0, [0x00009130]",
            "add r1, sp, 0x78",
            "bl fcn.00009214",
            "add r0, sp, 0x58",
            "add r1, sp, 0x78",
            "mov r3, 0",
            "add r4, r4, 1",
            "str r3, [sp, 0x58]",
            "str r3, [sp, 0x5c]",
            "str r3, [sp, 0x60]",
            "str r3, [sp, 0x64]",
            "str r3, [sp, 0x68]",
            "str r3, [sp, 0x6c]",
            "str r3, [sp, 0x70]",
            "str r3, [sp, 0x74]",
            "bl sym.imp.strcpy",
            "b 0x8bc0",
            "add r0, sp, 0x78",
            "add r4, r4, 1",
            "bl sym.imp.strlen",
            "add r1, sp, 0x78",
            "mov r2, r0",
            "mov r7, r0",
            "ldr r0, [0x00009134]",
            "bl sym.imp.strncpy",
            "ldr r2, [0x00009138]",
            "mov r3, 0",
            "add r7, r7, r2",
            "strb r3, [r7, 2]",
            "b 0x8bc0",
            "add r0, sp, 0x78",
            "ldr sl, [0x0000913c]",
            "bl sym.imp.strlen",
            "add r1, sp, 0x78",
            "add r4, r4, 1",
            "mov r7, r0",
            "add r7, sl, r7",
            "mov r2, r0",
            "add r0, sl, 0x10",
            "bl sym.imp.strncpy",
            "mov r3, 0",
            "strb r3, [r7, 0xf]",
            "b 0x8bc0",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "movw r1, 0x9f3c",
            "ldr r0, [0x00009140]",
            "movt r1, 0",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x8ebc",
            "ldr r3, [sp]",
            "cmp r3, 0",
            "beq 0x8f44",
            "movw r4, 0x2ae8",
            "movt r4, 1",
            "add sb, sb, 1",
            "ldrh r3, [r4, 0x42]",
            "cmp sb, 4",
            "add r8, r8, r3",
            "bgt 0x8f20",
            "mov r0, 1",
            "str r0, [sp]",
            "bl sym.imp.sleep",
            "mov r3, 1",
            "str r3, [sp, 4]",
            "b 0x8ba4",
            "movw r1, 0xa09c",
            "ldr r0, [0x00009140]",
            "movt r1, 0",
            "mov r2, 8",
            "bl sym.imp.strncmp",
            "ldr r3, [sp, 8]",
            "orrs r3, r0, r3",
            "beq 0x9014",
            "ldr r3, [sp, 4]",
            "eor fp, r3, 1",
            "ldr r3, [sp]",
            "orrs r3, r3, fp",
            "bne 0x902c",
            "movw r0, 0xa31c",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa0c8",
            "movt r0, 0",
            "mov r8, 0",
            "bl sym.imp.system",
            "mov r0, 1",
            "bl sym.imp.sleep",
            "mov sb, r8",
            "str r8, [sp]",
            "b 0x8eb0",
            "ldr r3, [sp, 0xc]",
            "smull r3, r2, r3, r8",
            "asr r3, r8, 0x1f",
            "mov r8, 0",
            "mov sb, r8",
            "rsb r3, r3, r2, asr 1",
            "strh r3, [r6, 0x44]",
            "bl fcn.000096d0",
            "b 0x8ea4",
            "bl fcn.000098a0",
            "movw r0, 0x9f40",
            "movt r0, 0",
            "ldr r4, [0x0000913c]",
            "bl sym.imp.system",
            "movw r0, 0x9f50",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0x9f8c",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0x9fac",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0x9ff0",
            "movt r0, 0",
            "bl sym.imp.system",
            "bl fcn.000094dc",
            "ldrh r3, [r4, 0x42]",
            "strh r3, [r4, 0x44]",
            "bl fcn.000096d0",
            "movw r0, 0xa004",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa03c",
            "movw r1, 0x9e30",
            "movt r0, 0",
            "movt r1, 0",
            "bl sym.imp.config_set",
            "movw r0, 0xa03c",
            "movw r1, 0x9e30",
            "movt r0, 0",
            "movt r1, 0",
            "bl sym.imp.config_match",
            "cmp r0, 0",
            "bne 0x909c",
            "movw r0, 0xa048",
            "movt r0, 0",
            "bl sym.imp.system",
            "ldr r3, [sp, 8]",
            "cmp r3, 1",
            "beq 0x90c0",
            "add r2, sp, 0x58",
            "add r0, sp, 0xf8",
            "movw r1, 0xa07c",
            "movt r1, 0",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "bl sym.imp.sprintf",
            "add r0, sp, 0xf8",
            "bl sym.imp.system",
            "b 0x8e90",
            "movw r0, 0xa0a8",
            "movt r0, 0",
            "bl sym.imp.system",
            "mov r3, 1",
            "str r3, [sp, 8]",
            "b 0x8eb0",
            "movw r0, 0x9c5c",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa0c8",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa0e8",
            "movt r0, 0",
            "bl sym.imp.system",
            "ldr r3, [sp]",
            "cmp r3, 1",
            "beq 0x90d0",
            "movw r0, 0xa1b0",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa1f0",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa248",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xa300",
            "movt r0, 0",
            "bl sym.imp.system",
            "b 0x8ef0",
            "mov r0, r5",
            "add sp, sp, 0x17c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r0, 0xa020",
            "movt r0, 0",
            "bl sym.imp.system",
            "b 0x8fd4",
            "movw r0, 0x9e24",
            "movt r0, 0",
            "bl sym.imp.printf",
            "mov r0, 0",
            "b 0x9094",
            "movw r0, 0x9e4c",
            "movt r0, 0",
            "bl sym.imp.system",
            "b 0x8fec",
            "movw r0, 0xa180",
            "movw r1, 0xa190",
            "movt r0, 0",
            "movt r1, 0",
            "bl sym.imp.config_match",
            "cmp r0, 0",
            "beq 0x905c",
            "movw r0, 0xa194",
            "movt r0, 0",
            "bl sym.imp.system",
            "b 0x905c",
            "movw r0, 0x9e34",
            "movt r0, 0",
            "bl sym.imp.printf",
            "mvn r0, 0",
            "b 0x9094",
            "movw r0, 0x9da4",
            "movt r0, 0",
            "bl sym.imp.puts",
            "movw r0, 0x9dc4",
            "movt r0, 0",
            "bl sym.imp.puts",
            "mvn r0, 0",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x000089a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xad0]!"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x000088b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb70]!"
        ]
    },
    "sym.imp.daemon": {
        "function_address": "0x000089f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xaa0]!"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x00008894",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb88]!"
        ]
    },
    "sym.imp.socket": {
        "function_address": "0x000088dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb58]!"
        ]
    },
    "sym.imp.bind": {
        "function_address": "0x0000890c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb38]!"
        ]
    },
    "sym.imp.sigaction": {
        "function_address": "0x00008954",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb08]!"
        ]
    },
    "sym.imp.system": {
        "function_address": "0x000088c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb68]!"
        ]
    },
    "sym.imp.fopen": {
        "function_address": "0x00008978",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xaf0]!"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x000088ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb78]!"
        ]
    },
    "sym.imp.sscanf": {
        "function_address": "0x00008948",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb10]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x000089e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xaa8]!"
        ]
    },
    "sym.imp.fscanf": {
        "function_address": "0x000088a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb80]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x00008990",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xae0]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x000089fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xa98]!"
        ]
    },
    "sym.imp.strncpy": {
        "function_address": "0x00008930",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb20]!"
        ]
    },
    "fcn.00009214": {
        "function_address": "0x00009214",
        "instructions": [
            "mov r2, 0",
            "push {r4, r5, lr}",
            "mov r5, r2",
            "ldrb r3, [r1], 1",
            "sub ip, r3, 0x30",
            "cmp r3, 0xa",
            "cmpne r3, 0",
            "uxtb r4, ip",
            "beq 0x9298",
            "cmp r3, 0x3a",
            "strbeq r2, [r0, r5]",
            "addeq r5, r5, 1",
            "moveq r2, 0",
            "beq 0x9220",
            "cmp r4, 9",
            "sub lr, r3, 0x61",
            "addls r2, ip, r2, lsl 4",
            "uxtb r4, lr",
            "bls 0x9220",
            "sub r3, r3, 0x41",
            "cmp r4, 5",
            "add lr, lr, r2, lsl 4",
            "add r2, r3, r2, lsl 4",
            "uxtb r3, r3",
            "addls r2, lr, 0xa",
            "bls 0x9220",
            "cmp r3, 5",
            "add r2, r2, 0xa",
            "bls 0x9220",
            "movw r0, 0x9928",
            "movt r0, 0",
            "pop {r4, r5, lr}",
            "b sym.imp.puts",
            "strb r2, [r0, r5]",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x00008870",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xba0]!"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x00008924",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb28]!"
        ]
    },
    "sym.imp.sleep": {
        "function_address": "0x000088d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb60]!"
        ]
    },
    "fcn.000096d0": {
        "function_address": "0x000096d0",
        "instructions": [
            "push {r4, lr}",
            "movw r0, 0x99fc",
            "movt r0, 0",
            "bl sym.imp.config_get",
            "bl sym.imp.atoi",
            "mov r4, r0",
            "movw r0, 0x9a0c",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0x9aa8",
            "movt r0, 0",
            "bl sym.imp.config_get",
            "bl sym.imp.atoi",
            "cmp r4, r0",
            "ble 0x971c",
            "movw r0, 0x9ad0",
            "movt r0, 0",
            "pop {r4, lr}",
            "b sym.imp.system",
            "movw r0, 0x9ab4",
            "movt r0, 0",
            "pop {r4, lr}",
            "b sym.imp.system"
        ]
    },
    "fcn.000098a0": {
        "function_address": "0x000098a0",
        "instructions": [
            "movw r2, 0x2ae8",
            "movt r2, 1",
            "movw r3, 0x24b0",
            "movt r3, 1",
            "str lr, [sp, -4]!",
            "add r0, r3, 0x84",
            "ldrb r1, [r2, 0x3b]",
            "ldrb ip, [r2, 0x3c]",
            "ldrb lr, [r2, 0x3d]",
            "b 0x98d4",
            "add r3, r3, 3",
            "cmp r3, r0",
            "beq 0x9908",
            "ldrb r2, [r3]",
            "cmp r2, r1",
            "bne 0x98c8",
            "ldrb r2, [r3, 1]",
            "cmp r2, ip",
            "bne 0x98c8",
            "ldrb r2, [r3, 2]",
            "cmp r2, lr",
            "bne 0x98c8",
            "movw r0, 0x9c8c",
            "pop {lr}",
            "movt r0, 0",
            "b sym.imp.system",
            "movw r0, 0x9d18",
            "pop {lr}",
            "movt r0, 0",
            "b sym.imp.system"
        ]
    },
    "fcn.000094dc": {
        "function_address": "0x000094dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0xc8",
            "bl fcn.0000932c",
            "cmp r0, 0",
            "bne 0x9504",
            "movw r0, 0x9984",
            "movt r0, 0",
            "bl sym.imp.printf",
            "add sp, sp, 0xc8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "movw ip, 0x2ae8",
            "movt ip, 1",
            "mov r1, 0x12",
            "movw r2, 0x99a0",
            "ldrb r3, [ip, 0x3b]",
            "movt r2, 0",
            "ldrb r5, [ip, 0x3d]",
            "add r0, sp, 0x34",
            "ldrb lr, [ip, 0x3f]",
            "ldrb r6, [ip, 0x3c]",
            "ldrb r4, [ip, 0x3e]",
            "ldrb ip, [ip, 0x40]",
            "str r5, [sp, 4]",
            "str lr, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "str r6, [sp]",
            "str r4, [sp, 8]",
            "bl sym.imp.snprintf",
            "movw r0, 0x99c0",
            "movw r1, 0x99d0",
            "movt r0, 0",
            "movt r1, 0",
            "mov r3, 0",
            "strb r3, [sp, 0x46]",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0x96b4",
            "add r4, sp, 0x48",
            "b 0x9584",
            "bl sym.imp.strcasestr",
            "cmp r0, 0",
            "bne 0x9660",
            "mov r1, 0x80",
            "mov r0, r4",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "add r1, sp, 0x34",
            "cmp r0, 0",
            "mov r0, r4",
            "bne 0x9578",
            "mov r0, r5",
            "movw r8, 0x2538",
            "bl sym.imp.fclose",
            "movw r0, 0x99f0",
            "movt r0, 0",
            "movt r8, 1",
            "bl sym.imp.inet_network",
            "str r0, [r8, 0x10]",
            "mov r1, 0x14",
            "movw r0, 0x2538",
            "movt r0, 1",
            "movw r5, 0x86a0",
            "add sl, r0, 0x590",
            "bl fcn.000092a0",
            "movw r1, 0x594",
            "add sl, sl, 4",
            "add r7, sp, 0x1c",
            "movt r5, 1",
            "mov r4, 0x32",
            "mov r6, 0",
            "mov sb, 0x14",
            "strh r0, [r8, 0xa]",
            "movw r0, 0x2538",
            "movt r0, 1",
            "bl fcn.000092a0",
            "strh r0, [r8, 0x16]",
            "b 0x9618",
            "subs r4, r4, 1",
            "beq 0x94fc",
            "mov r1, 0",
            "str r7, [sp]",
            "mov r3, r1",
            "mov r2, r1",
            "mov r0, 0x400",
            "str r6, [sp, 0x1c]",
            "str r5, [sp, 0x20]",
            "bl sym.imp.select",
            "subs r3, r0, 0",
            "bne 0x9610",
            "ldr r0, [r8, 0x5ac]",
            "movw r1, 0x2538",
            "str sl, [sp]",
            "movt r1, 1",
            "str sb, [sp, 4]",
            "movw r2, 0x594",
            "bl sym.imp.sendto",
            "b 0x9610",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldrb r2, [sp, 0x48]",
            "cmp r2, 0x20",
            "beq 0x96c4",
            "add r0, sp, 0x24",
            "mov r3, 0",
            "strb r2, [r0, r3]",
            "add r3, r3, 1",
            "ldrb r2, [r4, r3]",
            "cmp r2, 0x20",
            "bne 0x967c",
            "add r2, sp, 0xc8",
            "movw r8, 0x2538",
            "add r3, r2, r3",
            "mov r2, 0",
            "movt r8, 1",
            "strb r2, [r3, -0xa4]",
            "bl sym.imp.inet_network",
            "str r0, [r8, 0x10]",
            "b 0x95c4",
            "movw r0, 0x99d4",
            "movt r0, 0",
            "bl sym.imp.puts",
            "b 0x94fc",
            "add r0, sp, 0x24",
            "mov r3, 0",
            "b 0x9690"
        ]
    },
    "sym.imp.config_set": {
        "function_address": "0x000089cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xab8]!"
        ]
    },
    "sym.imp.config_match": {
        "function_address": "0x0000899c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xad8]!"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x000089c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xac0]!"
        ]
    },
    "sym.imp.printf": {
        "function_address": "0x00008888",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb90]!"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x000089d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xab0]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x000091e8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, loc.__bss_start__",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "bl fcn.00009180",
            "mov r3, 1",
            "strb r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00009180": {
        "function_address": "0x00009180",
        "instructions": [
            "ldr r0, loc.__bss_start__",
            "ldr r3, [0x000091a8]",
            "rsb r3, r0, r3",
            "cmp r3, 6",
            "bxls lr",
            "ldr r3, [0x000091ac]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3"
        ]
    },
    "sym.imp.config_get": {
        "function_address": "0x00008a08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xa90]!"
        ]
    },
    "fcn.0000932c": {
        "function_address": "0x0000932c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r0, 2",
            "sub sp, sp, 0x24",
            "mov r1, 3",
            "mov r2, 0xff",
            "bl sym.imp.socket",
            "subs r5, r0, 0",
            "blt 0x94ac",
            "movw r4, 0x2538",
            "movt r4, 1",
            "mov r1, 0",
            "movw r2, 0x594",
            "mov r0, r4",
            "bl sym.imp.memset",
            "mov r2, 0x10",
            "mov r0, sp",
            "movw r1, 0x9948",
            "movt r1, 0",
            "mov r3, 2",
            "strh r3, [sp, 0x10]",
            "bl sym.imp.strncpy",
            "mov r0, r5",
            "mov r2, sp",
            "movw r1, 0x8915",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "bne 0x9480",
            "ldr r3, [sp, 0x14]",
            "str r3, [r4, 0xc]",
            "movw r3, 0x2b30",
            "movt r3, 1",
            "mov r2, 0x10",
            "mov r0, sp",
            "ldr r1, [r3]",
            "bl sym.imp.strncpy",
            "mov r0, r5",
            "movw r1, 0x8927",
            "mov r2, sp",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "bne 0x9494",
            "mov r2, sp",
            "mov r0, r5",
            "movw r1, 0x8933",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "bne 0x94c4",
            "ldr r3, [sp, 0x10]",
            "str r3, [r4, 0x598]",
            "ldr r3, [0x000094d4]",
            "mov r2, 5",
            "ldrb r1, [r4]",
            "mov r6, 1",
            "ldr ip, [0x000094d8]",
            "mov r7, 4",
            "ldr r0, [r3]",
            "bfi r1, r2, 0, 4",
            "ldrh lr, [r3, 4]",
            "bfi r1, r7, 4, 4",
            "ldr r2, [r4, 0x5a8]",
            "movw r3, 0x9405",
            "str r0, [r4, 0x5a0]",
            "mov r0, r5",
            "strh lr, [ip, 4]",
            "movt r3, 0xffff",
            "strb r1, [r4]",
            "mov ip, 6",
            "add r1, r2, r6",
            "strh r2, [r4, 0x1a]",
            "str r1, [r4, 0x5a8]",
            "mov r2, 8",
            "strh r3, [r4, 2]",
            "mov r1, 0x40",
            "mov r3, 0",
            "strb r6, [r4, 9]",
            "strb ip, [r4, 0x59f]",
            "strb r1, [r4, 8]",
            "strb r2, [r4, 0x14]",
            "strb r3, [r4, 0x15]",
            "strh r3, [r4, 0x16]",
            "strh r3, [r4, 0x18]",
            "bl sym.imp.close",
            "mov r0, r6",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "movw r0, 0x994c",
            "movt r0, 0",
            "bl sym.imp.inet_network",
            "str r0, [r4, 0xc]",
            "b 0x93a0",
            "movw r0, 0x995c",
            "movt r0, 0",
            "bl sym.imp.puts",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "movw r0, 0x9938",
            "movt r0, 0",
            "bl sym.imp.puts",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "movw r0, 0x9970",
            "movt r0, 0",
            "bl sym.imp.puts",
            "b 0x93f0"
        ]
    },
    "sym.imp.strcasestr": {
        "function_address": "0x00008918",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb30]!"
        ]
    },
    "sym.imp.inet_network": {
        "function_address": "0x00008960",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb00]!"
        ]
    },
    "fcn.000092a0": {
        "function_address": "0x000092a0",
        "instructions": [
            "cmp r1, 1",
            "str lr, [sp, -4]!",
            "sub sp, sp, 0xc",
            "ble 0x9324",
            "mov ip, r0",
            "mov r2, r1",
            "mov r3, 0",
            "sub r2, r2, 2",
            "ldrh lr, [ip], 2",
            "cmp r2, 1",
            "add r3, r3, lr",
            "bgt 0x92bc",
            "sub r1, r1, 2",
            "lsr r2, r1, 1",
            "add ip, r2, 1",
            "sub r1, r1, r2, lsl 1",
            "add r0, r0, ip, lsl 1",
            "cmp r1, 1",
            "bne 0x930c",
            "ldrb r2, [r0]",
            "mov r1, 0",
            "strh r1, [sp, 6]",
            "strb r2, [sp, 6]",
            "ldrh r2, [sp, 6]",
            "add r3, r3, r2",
            "b 0x930c",
            "uxtah r3, r2, r3",
            "asrs r2, r3, 0x10",
            "bne 0x9308",
            "mvn r0, r3",
            "uxth r0, r0",
            "add sp, sp, 0xc",
            "pop {pc}",
            "mov r3, 0",
            "b 0x92e4"
        ]
    },
    "sym.imp.select": {
        "function_address": "0x000088e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb50]!"
        ]
    },
    "sym.imp.sendto": {
        "function_address": "0x0000893c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb18]!"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x00008984",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xae8]!"
        ]
    },
    "sym.imp.ioctl": {
        "function_address": "0x0000887c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xb98]!"
        ]
    },
    "sym.imp.close": {
        "function_address": "0x00008a14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xa88]!"
        ]
    }
}