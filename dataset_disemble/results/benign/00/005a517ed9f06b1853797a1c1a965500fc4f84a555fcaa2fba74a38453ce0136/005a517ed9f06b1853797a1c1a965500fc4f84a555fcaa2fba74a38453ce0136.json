{
    "entry.init0": {
        "function_address": "0x00012498",
        "instructions": [
            "ldr r0, loc.__bss_start__",
            "ldr r1, loc.__bss_start__",
            "rsb r1, r0, r1",
            "asr r1, r1, 2",
            "add r1, r1, r1, lsr 31",
            "asrs r1, r1, 1",
            "bxeq lr",
            "ldr r3, [0x0001244c]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3",
            "push {r3, lr}",
            "ldr r3, [0x000124bc]",
            "cmp r3, 0",
            "beq 0x124b4",
            "ldr r0, aav.0x000148b8",
            "ldr r1, [0x000124c4]",
            "bl loc.imp.__register_frame_info",
            "pop {r3, lr}",
            "b 0x12418"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00010d24",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xd28]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00012450",
        "instructions": [
            "ldr r3, loc.__bss_start__",
            "ldrb r2, [r3]",
            "cmp r2, 0",
            "bxne lr",
            "push {r4, lr}",
            "mov r4, r3",
            "bl fcn.000123e8",
            "ldr r3, [0x00012490]",
            "cmp r3, 0",
            "beq 0x12480",
            "ldr r0, aav.0x000148b8",
            "bl loc.imp.__deregister_frame_info",
            "mov r3, 1",
            "strb r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000123e8": {
        "function_address": "0x000123e8",
        "instructions": [
            "ldr r0, loc.__bss_start__",
            "ldr r3, [0x00012410]",
            "rsb r3, r0, r3",
            "cmp r3, 6",
            "bxls lr",
            "ldr r3, [0x00012414]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00010c28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xdd0]!"
        ]
    },
    "fcn.00012550": {
        "function_address": "0x00012550",
        "instructions": [
            "push {r3, lr}",
            "ldr r0, aav.0x000131bc",
            "bl sym.imp.puts",
            "ldr r0, aav.0x000131c4",
            "bl sym.imp.puts",
            "ldr r0, [0x000127d8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127dc]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127e0]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013238",
            "bl sym.imp.puts",
            "ldr r0, [0x000127e8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127ec]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127f0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127f4]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127f8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000127fc]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012800]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012804]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012808]",
            "bl sym.imp.puts",
            "ldr r0, [0x0001280c]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012810]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012814]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x000134a0",
            "bl sym.imp.puts",
            "ldr r0, [0x0001281c]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013504",
            "bl sym.imp.puts",
            "ldr r0, [0x00012824]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013554",
            "bl sym.imp.puts",
            "ldr r0, [0x0001282c]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012830]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012834]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x000136b4",
            "bl sym.imp.puts",
            "ldr r0, [0x0001283c]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012840]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012844]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x000137dc",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013808",
            "bl sym.imp.puts",
            "ldr r0, [0x00012850]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012854]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012858]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x000138c8",
            "bl sym.imp.puts",
            "ldr r0, [0x00012860]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013914",
            "bl sym.imp.puts",
            "ldr r0, [0x00012868]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013964",
            "bl sym.imp.puts",
            "ldr r0, [0x00012870]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x000139ac",
            "bl sym.imp.puts",
            "ldr r0, [0x00012878]",
            "bl sym.imp.puts",
            "ldr r0, [0x0001287c]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012880]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012884]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012888]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013ac0",
            "bl sym.imp.puts",
            "ldr r0, [0x00012890]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013b50",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013b68",
            "bl sym.imp.puts",
            "ldr r0, [0x0001289c]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128a0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128a4]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128a8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128ac]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128b0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128b4]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013c70",
            "bl sym.imp.puts",
            "ldr r0, [0x000128bc]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128c0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128c4]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128c8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128cc]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128d0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128d4]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128d8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128dc]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128e0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128e4]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128e8]",
            "bl sym.imp.puts",
            "ldr r0, aav.0x00013ea8",
            "bl sym.imp.puts",
            "ldr r0, [0x000128f0]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128f4]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128f8]",
            "bl sym.imp.puts",
            "ldr r0, [0x000128fc]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012900]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012904]",
            "bl sym.imp.puts",
            "ldr r0, [0x00012908]",
            "pop {r3, lr}",
            "b sym.imp.puts"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x00010bc8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xe10]!"
        ]
    },
    "fcn.000124c8": {
        "function_address": "0x000124c8",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r6, r1",
            "add r5, sp, 8",
            "mov r4, 0",
            "str r4, [r5, -4]!",
            "ldr r1, aav.0x00013078",
            "mov r2, r5",
            "bl sym.imp.strtok_r",
            "cmp r0, 0",
            "beq 0x12538",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl sym.imp.strtoul",
            "cmp r4, 5",
            "mov r3, r0",
            "movle r0, 0",
            "movgt r0, 1",
            "cmp r3, 0xff",
            "orrhi r0, r0, 1",
            "cmp r0, 0",
            "beq 0x1252c",
            "ldr r0, aav.0x000131a8",
            "bl sym.imp.puts",
            "mov r0, 1",
            "bl sym.imp.exit",
            "strb r3, [r6, r4]",
            "add r4, r4, 1",
            "b 0x124dc",
            "cmp r4, 6",
            "bne 0x1251c",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.strtok_r": {
        "function_address": "0x00010b50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xe60]!"
        ]
    },
    "sym.imp.strtoul": {
        "function_address": "0x00010bec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xdf8]!"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x00010ce8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xd50]!"
        ]
    },
    "fcn.00012c40": {
        "function_address": "0x00012c40",
        "instructions": [
            "cmp r2, 0x800",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldreq r0, aav.0x0001412c",
            "sub sp, sp, 0x7c",
            "ldrne r0, [0x00013038]",
            "mov sb, r1",
            "mov r8, r2",
            "mov r5, 1",
            "bl sym.imp.puts",
            "ldr r0, [0x0001303c]",
            "mov r7, 0",
            "movw sl, 0xdd86",
            "bl sym.imp.puts",
            "cmp r7, sb",
            "bge 0x1302c",
            "cmp r8, 0x800",
            "bne 0x12dcc",
            "ldr r3, [r4]",
            "cmp r3, 8",
            "bne 0x13020",
            "ldrb r2, [r4, 5]",
            "mov r1, 0x40",
            "ldrb r3, [r4, 4]",
            "add r6, sp, 0x28",
            "str r2, [sp]",
            "add r0, sp, 0x38",
            "ldrb r2, [r4, 6]",
            "add fp, r5, 1",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 8]",
            "ldr r2, aav.0x00014254",
            "bl sym.imp.snprintf",
            "ldr r0, [r4, 0x14]",
            "mov r1, r6",
            "bl sym.imp.if_indextoname",
            "ldrb r2, [r4, 0x63]",
            "mov r1, r5",
            "ldrb r3, [r4, 0x62]",
            "str r2, [sp]",
            "ldrb r2, [r4, 0x64]",
            "str r6, [sp, 0x14]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 0x65]",
            "ldr r0, aav.0x00014268",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 0x66]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 0x67]",
            "str r2, [sp, 0x10]",
            "ldr r2, [r4, 0x5c]",
            "str r2, [sp, 0x18]",
            "add r2, sp, 0x38",
            "bl sym.imp.printf",
            "ldrb r3, [r4, 0x60]",
            "cmp r3, 0",
            "beq 0x1301c",
            "ldr r2, [0x00013048]",
            "cmp r3, 1",
            "ldr r1, [0x0001304c]",
            "add r5, r4, 0x1c",
            "ldr r0, aav.0x0001429c",
            "moveq r1, r2",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x18]",
            "mov r6, 1",
            "cmp r1, 0",
            "ldrne r0, [0x00013054]",
            "ldreq r0, [0x00013058]",
            "bl sym.imp.printf",
            "ldr r3, [r4, 0x18]",
            "sub ip, r6, 1",
            "cmp ip, r3",
            "bhs 0x1301c",
            "ldrb r2, [r5, 1]",
            "mov r1, 0x40",
            "ldrb r3, [r5]",
            "add r0, sp, 0x38",
            "str r2, [sp]",
            "add r5, r5, 4",
            "ldrb r2, [r5, -2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r5, -1]",
            "str ip, [sp, 0x24]",
            "str r2, [sp, 8]",
            "ldr r2, aav.0x00014254",
            "bl sym.imp.snprintf",
            "ldr r2, [r4, 0x18]",
            "mov r1, r6",
            "ldr ip, [sp, 0x24]",
            "add r6, r6, 1",
            "sub r3, r2, 1",
            "cmp ip, r3",
            "add r3, sp, 0x38",
            "ldreq r0, [0x0001305c]",
            "ldrne r0, [0x00013060]",
            "bl sym.imp.printf",
            "b 0x12d5c",
            "movw r3, 0x86dd",
            "cmp r8, r3",
            "bne 0x13020",
            "ldr r3, [r4]",
            "cmp r3, sl",
            "bne 0x13020",
            "ldrh r3, [r4, 4]",
            "add r6, sp, 0x28",
            "add r0, sp, 0x38",
            "add fp, r5, 1",
            "lsl r2, r3, 8",
            "orr r3, r2, r3, lsr 8",
            "ldrh r2, [r4, 6]",
            "uxth r3, r3",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp]",
            "ldrh r2, [r4, 8]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 4]",
            "ldrh r2, [r4, 0xa]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 8]",
            "ldrh r2, [r4, 0xc]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 0xc]",
            "ldrh r2, [r4, 0xe]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 0x10]",
            "ldrh r2, [r4, 0x10]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 0x14]",
            "ldrh r2, [r4, 0x12]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "mov r1, 0x40",
            "uxth r2, r2",
            "str r2, [sp, 0x18]",
            "ldr r2, [0x00013064]",
            "bl sym.imp.snprintf",
            "ldr r0, [r4, 0x14]",
            "mov r1, r6",
            "bl sym.imp.if_indextoname",
            "ldrb r2, [r4, 0x63]",
            "mov r1, r5",
            "ldrb r3, [r4, 0x62]",
            "str r2, [sp]",
            "ldrb r2, [r4, 0x64]",
            "str r6, [sp, 0x14]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 0x65]",
            "ldr r0, aav.0x00014268",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 0x66]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 0x67]",
            "str r2, [sp, 0x10]",
            "ldr r2, [r4, 0x5c]",
            "str r2, [sp, 0x18]",
            "add r2, sp, 0x38",
            "bl sym.imp.printf",
            "ldrb r3, [r4, 0x60]",
            "cmp r3, 0",
            "beq 0x1301c",
            "ldr r2, [0x00013048]",
            "cmp r3, 1",
            "ldr r1, [0x0001304c]",
            "add r5, r4, 0x1c",
            "ldr r0, aav.0x0001429c",
            "moveq r1, r2",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x18]",
            "mov r6, 1",
            "cmp r1, 0",
            "ldrne r0, [0x00013054]",
            "ldreq r0, [0x00013058]",
            "bl sym.imp.printf",
            "ldr r3, [r4, 0x18]",
            "sub ip, r6, 1",
            "cmp ip, r3",
            "bhs 0x1301c",
            "ldrh r3, [r5]",
            "add r0, sp, 0x38",
            "add r5, r5, 0x10",
            "lsl r2, r3, 8",
            "orr r3, r2, r3, lsr 8",
            "ldrh r2, [r5, -0xe]",
            "uxth r3, r3",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp]",
            "ldrh r2, [r5, -0xc]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 4]",
            "ldrh r2, [r5, -0xa]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 8]",
            "ldrh r2, [r5, -8]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 0xc]",
            "ldrh r2, [r5, -6]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 0x10]",
            "ldrh r2, [r5, -4]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "uxth r2, r2",
            "str r2, [sp, 0x14]",
            "ldrh r2, [r5, -2]",
            "str ip, [sp, 0x24]",
            "lsl r1, r2, 8",
            "orr r2, r1, r2, lsr 8",
            "mov r1, 0x40",
            "uxth r2, r2",
            "str r2, [sp, 0x18]",
            "ldr r2, [0x00013064]",
            "bl sym.imp.snprintf",
            "ldr r2, [r4, 0x18]",
            "mov r1, r6",
            "ldr ip, [sp, 0x24]",
            "add r6, r6, 1",
            "sub r3, r2, 1",
            "cmp ip, r3",
            "add r3, sp, 0x38",
            "ldreq r0, [0x0001305c]",
            "ldrne r0, [0x00013060]",
            "bl sym.imp.printf",
            "b 0x12f2c",
            "mov r5, fp",
            "add r7, r7, 1",
            "add r4, r4, 0x68",
            "b 0x12c78",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x00010b98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xe30]!"
        ]
    },
    "sym.imp.if_indextoname": {
        "function_address": "0x00010b44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xe68]!"
        ]
    },
    "sym.imp.printf": {
        "function_address": "0x00010b68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x13000",
            "ldr pc, [ip, 0xe50]!"
        ]
    },
    "fcn.0001290c": {
        "function_address": "0x0001290c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r2",
            "ldr lr, aav.0x0001307c",
            "sub sp, sp, 0x88",
            "mov r4, r0",
            "mov sb, r1",
            "ldm lr!, {r0, r1, r2, r3}",
            "add ip, sp, 0x74",
            "cmp r6, 0x800",
            "stm ip!, {r0, r1, r2, r3}",
            "ldr r3, [lr]",
            "str r3, [ip]",
            "bne 0x12950",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "ldreq r0, [0x00012c30]",
            "beq 0x12954",
            "ldr r0, [0x00012c34]",
            "mov r5, 0",
            "movw sl, 0x86dd",
            "mov r8, r5",
            "mov r7, r5",
            "bl sym.imp.puts",
            "cmp r7, sb",
            "bge 0x12c24",
            "ldr r1, [r4, 4]",
            "cmp r1, 4",
            "bhi 0x12c18",
            "cmp r6, 0x800",
            "bne 0x12a4c",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x12c18",
            "ldrb r0, [r4, 0x16]",
            "add r8, r8, 1",
            "ldrb r2, [r4, 0x14]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0x17]",
            "ldrb r3, [r4, 0x15]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0x24]",
            "str r0, [sp, 8]",
            "ldrb r0, [r4, 0x25]",
            "str r0, [sp, 0xc]",
            "ldrb r0, [r4, 0x26]",
            "str r0, [sp, 0x10]",
            "ldrb r0, [r4, 0x27]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r4, 8]",
            "str r0, [sp, 0x18]",
            "ldrb r0, [r4, 9]",
            "str r0, [sp, 0x1c]",
            "ldrb r0, [r4, 0xa]",
            "str r0, [sp, 0x20]",
            "ldrb r0, [r4, 0xb]",
            "str r0, [sp, 0x24]",
            "ldrb r0, [r4, 0xc]",
            "str r0, [sp, 0x28]",
            "ldrb r0, [r4, 0xd]",
            "str r0, [sp, 0x2c]",
            "ldrb r0, [r4, 0xe]",
            "str r0, [sp, 0x30]",
            "ldrb r0, [r4, 0xf]",
            "str r0, [sp, 0x34]",
            "ldrb r0, [r4, 0x10]",
            "str r0, [sp, 0x38]",
            "ldrb r0, [r4, 0x11]",
            "str r0, [sp, 0x3c]",
            "ldrb r0, [r4, 0x12]",
            "str r0, [sp, 0x40]",
            "ldrb r0, [r4, 0x13]",
            "str r0, [sp, 0x44]",
            "add r0, sp, 0x88",
            "add r1, r0, r1, lsl 2",
            "ldr r0, [0x00012c38]",
            "ldr r1, [r1, -0x14]",
            "str r1, [sp, 0x48]",
            "mov r1, r8",
            "bl sym.imp.printf",
            "b 0x12c18",
            "cmp r6, sl",
            "bne 0x12c18",
            "ldr r3, [r4]",
            "cmp r3, 1",
            "bne 0x12c18",
            "ldrh r3, [r4, 0x14]",
            "add r5, r5, 1",
            "lsl r2, r3, 8",
            "orr r2, r2, r3, lsr 8",
            "ldrh r3, [r4, 0x16]",
            "uxth r2, r2",
            "lsl r0, r3, 8",
            "orr r3, r0, r3, lsr 8",
            "ldrh r0, [r4, 0x18]",
            "uxth r3, r3",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp]",
            "ldrh r0, [r4, 0x1a]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 4]",
            "ldrh r0, [r4, 0x1c]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 8]",
            "ldrh r0, [r4, 0x1e]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0xc]",
            "ldrh r0, [r4, 0x20]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x10]",
            "ldrh r0, [r4, 0x22]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x14]",
            "ldrh r0, [r4, 0x24]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x18]",
            "ldrh r0, [r4, 0x26]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x1c]",
            "ldrh r0, [r4, 0x28]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x20]",
            "ldrh r0, [r4, 0x2a]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x24]",
            "ldrh r0, [r4, 0x2c]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x28]",
            "ldrh r0, [r4, 0x2e]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x2c]",
            "ldrh r0, [r4, 0x30]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x30]",
            "ldrh r0, [r4, 0x32]",
            "lsl ip, r0, 8",
            "orr r0, ip, r0, lsr 8",
            "uxth r0, r0",
            "str r0, [sp, 0x34]",
            "ldrb r0, [r4, 8]",
            "str r0, [sp, 0x38]",
            "ldrb r0, [r4, 9]",
            "str r0, [sp, 0x3c]",
            "ldrb r0, [r4, 0xa]",
            "str r0, [sp, 0x40]",
            "ldrb r0, [r4, 0xb]",
            "str r0, [sp, 0x44]",
            "ldrb r0, [r4, 0xc]",
            "str r0, [sp, 0x48]",
            "ldrb r0, [r4, 0xd]",
            "str r0, [sp, 0x4c]",
            "ldrb r0, [r4, 0xe]",
            "str r0, [sp, 0x50]",
            "ldrb r0, [r4, 0xf]",
            "str r0, [sp, 0x54]",
            "ldrb r0, [r4, 0x10]",
            "str r0, [sp, 0x58]",
            "ldrb r0, [r4, 0x11]",
            "str r0, [sp, 0x5c]",
            "ldrb r0, [r4, 0x12]",
            "str r0, [sp, 0x60]",
            "ldrb r0, [r4, 0x13]",
            "str r0, [sp, 0x64]",
            "add r0, sp, 0x88",
            "add r1, r0, r1, lsl 2",
            "ldr r0, [0x00012c3c]",
            "ldr r1, [r1, -0x14]",
            "str r1, [sp, 0x68]",
            "mov r1, r5",
            "bl sym.imp.printf",
            "add r7, r7, 1",
            "add r4, r4, 0x34",
            "b 0x12968",
            "add sp, sp, 0x88",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    }
}